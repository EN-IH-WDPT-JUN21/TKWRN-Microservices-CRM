Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"962c8d9f-5426-4660-864f-eb1229fed0da\" name=\"Changes\" comment=\"Second commit\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_5.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_5.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_12_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_12_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_12_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_12_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_12_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_12_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__junit_junit_4_13_2.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__mysql_mysql_connector_java_8_0_26.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_52.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_el_9_0_52.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_52.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_attoparser_attoparser_2_0_5_RELEASE.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_hamcrest_hamcrest_core_2_2.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jpa_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_security_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_thymeleaf_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_jdbc_2_2_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_jpa_2_5_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_relational_2_2_4.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_security_spring_security_config_5_5_2.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_security_spring_security_core_5_5_2.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_security_spring_security_crypto_5_5_2.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_security_spring_security_web_5_5_2.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_aspects_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_beans_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_context_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_core_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_expression_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_jcl_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_jdbc_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_orm_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_test_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_tx_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_web_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_webmvc_5_3_9.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_thymeleaf_extras_thymeleaf_extras_java8time_3_0_4_RELEASE.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_thymeleaf_thymeleaf_3_0_12_RELEASE.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_thymeleaf_thymeleaf_spring5_3_0_12_RELEASE.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_unbescape_unbescape_1_1_6_RELEASE.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_8_2.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/TKWRN.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/TKWRN.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/compiler.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/encodings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_annotations_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_circuitbreaker_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_circularbuffer_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_consumer_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_core_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_framework_common_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_micrometer_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_ratelimiter_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_retry_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_spring_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_spring_boot2_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_timelimiter_1_7_0.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_projectreactor_netty_reactor_netty_core_1_0_12.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_projectreactor_netty_reactor_netty_http_1_0_12.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_projectreactor_reactor_test_3_4_11.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_vavr_vavr_0_10_2.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__io_vavr_vavr_match_0_10_2.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_2_0_Final.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_modelmapper_modelmapper_2_3_5.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_5_6.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_5_4.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_reactor_netty_2_5_6.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jdbc_2_5_4.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_5_6.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_5_4.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_webflux_2_5_6.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_5_4.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_circuitbreaker_resilience4j_2_0_2.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_config_client_3_0_5.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_gateway_server_3_0_4.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_bootstrap_3_0_4.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_circuitbreaker_resilience4j_2_0_2.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_config_3_0_5.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_gateway_3_0_4.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_webflux_5_3_12.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_aop_5_3_9.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabase.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabase.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountRequestDTO.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountRequestDTO.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactRequestDTO.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactRequestDTO.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenu.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenu.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountServiceProxy.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountServiceProxy.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OpportunityServiceProxy.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OpportunityServiceProxy.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ReportServiceProxy.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ReportDBServiceProxy.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"a0531355f0fbcb81472357135c2de2a2f580f3ed\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"myId2FirstActivated\">\r\n      <map>\r\n        <entry key=\"JPA Inspector\" value=\"true\" />\r\n        <entry key=\"JPA Palette\" value=\"true\" />\r\n        <entry key=\"JPA Structure\" value=\"true\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"myId2Visible\">\r\n      <map>\r\n        <entry key=\"JPA Inspector\" value=\"false\" />\r\n        <entry key=\"JPA Palette\" value=\"false\" />\r\n        <entry key=\"JPA Structure\" value=\"false\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"20GSIAx8iYicpuhhpjm4jjTmz8D\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"Downloaded.Files.Path.Enabled\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Annotations\" value=\"false\" />\r\n    <property name=\"Repository.Attach.JavaDocs\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Sources\" value=\"false\" />\r\n    <property name=\"RequestMappingsPanelOrder0\" value=\"0\" />\r\n    <property name=\"RequestMappingsPanelOrder1\" value=\"1\" />\r\n    <property name=\"RequestMappingsPanelWidth0\" value=\"75\" />\r\n    <property name=\"RequestMappingsPanelWidth1\" value=\"75\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_directory_selection\" value=\"$PROJECT_DIR$/Menu-service/src\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\ArmoredPC\\Desktop\\Ironhack Bootcamp\\TKWRN-Microservices-CRM2\" />\r\n      <recent name=\"C:\\Users\\ArmoredPC\\Desktop\\Ironhack Bootcamp\\TKWRN-Microservices-CRM2\\report-service\\src\\main\\java\\com\\ironhack\\ReportService\\dto\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"com.ironhack.salesrepservice.sample_data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.OpportunityServiceApplication\">\r\n    <configuration name=\"AccountServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.ironhack.accountservice.AccountServiceApplication\" />\r\n      <module name=\"account-service\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.ironhack.accountservice.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DiscoveryServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.ironhack.discoveryservice.DiscoveryServiceApplication\" />\r\n      <module name=\"discovery-service\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.ironhack.discoveryservice.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"OpportunityServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.ironhack.OpportunityService.OpportunityServiceApplication\" />\r\n      <module name=\"opportunity-service\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.ironhack.OpportunityService.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ReportServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.ironhack.ReportService.ReportServiceApplication\" />\r\n      <module name=\"report-service\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.ironhack.ReportService.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"generated-requests#17\" type=\"HttpClient.HttpRequestRunConfigurationType\" factoryName=\"HTTP Request\" temporary=\"true\" path=\"$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http\" index=\"17\" runType=\"Run single request\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"AccountServiceApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"account-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.ironhack.accountservice.AccountServiceApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ContactServiceApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"contact-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.ironhack.contactservice.ContactServiceApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DiscoveryServiceApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"discovery-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.ironhack.discoveryservice.DiscoveryServiceApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"GatewayApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"gateway\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.ironhack.gateway.GatewayApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LeadServiceApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"lead-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.ironhack.leadservice.LeadServiceApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"OpportunityServiceApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"opportunity-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.ironhack.OpportunityService.OpportunityServiceApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ReportServiceApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"report-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.ironhack.ReportService.ReportServiceApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SalesrepServiceApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"salesrep-service\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.ironhack.salesrepservice.SalesrepServiceApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.AccountServiceApplication\" />\r\n        <item itemvalue=\"Application.OpportunityServiceApplication\" />\r\n        <item itemvalue=\"Application.DiscoveryServiceApplication\" />\r\n        <item itemvalue=\"Application.ReportServiceApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <created>1635669351097</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1635669351097</updated>\r\n      <workItem from=\"1635669353863\" duration=\"42000\" />\r\n      <workItem from=\"1635669480521\" duration=\"2886000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnknownFeatures\">\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.slf4j:jul-to-slf4j\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:jakarta.xml.bind:jakarta.xml.bind-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-circuitbreaker\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-annotations\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.data:spring-data-relational\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.security:spring-security-web\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.zaxxer:HikariCP\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-webmvc\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:net.minidev:accessors-smart\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.google.code.gson:gson\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.apache.tomcat.embed:tomcat-embed-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-test\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.fasterxml.jackson.datatype:jackson-datatype-jsr310\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.hibernate:hibernate-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:javax.ws.rs:jsr311-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.skyscreamer:jsonassert\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.glassfish.jaxb:txw2\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.mockito:mockito-junit-jupiter\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-lang:commons-lang\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.opentest4j:opentest4j\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.freemarker:freemarker\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.junit.jupiter:junit-jupiter\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.google.inject:guice\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.projectreactor.netty:reactor-netty-http\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-web\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-logging\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.vavr:vavr-match\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.fasterxml.jackson.core:jackson-databind\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.apache.logging.log4j:log4j-to-slf4j\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.codehaus.jettison:jettison\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.openfeign:feign-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-starter-netflix-eureka-client\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.jboss.logging:jboss-logging\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-devtools\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.slf4j:slf4j-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-starter-gateway\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.projectreactor:reactor-test\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:antlr:antlr\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.yaml:snakeyaml\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-configuration:commons-configuration\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.openfeign.form:feign-form\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-json\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-circuitbreaker-resilience4j\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.netflix.eureka:eureka-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.reactivestreams:reactive-streams\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-actuator\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.latencyutils:LatencyUtils\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.apache.httpcomponents:httpclient\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:mysql:mysql-connector-java\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.vaadin.external.google:android-json\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.apiguardian:apiguardian-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-data-jdbc\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-jdbc\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-jdbc\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.mockito:mockito-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:net.bytebuddy:byte-buddy\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-security\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:javax.inject:javax.inject\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-codec:commons-codec\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.hamcrest:hamcrest\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.data:spring-data-commons\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.junit.platform:junit-platform-engine\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:net.bytebuddy:byte-buddy-agent\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-webflux\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.jboss:jandex\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-resolver\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.netflix.netflix-commons:netflix-eventbus\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.x-stream:mxparser\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.jayway.jsonpath:json-path\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.hibernate.common:hibernate-commons-annotations\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.security:spring-security-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.data:spring-data-jpa\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-buffer\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-circularbuffer\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.junit.jupiter:junit-jupiter-engine\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.apache.commons:commons-math\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-timelimiter\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-starter-openfeign\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-reactor-netty\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-openfeign-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-tomcat\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.fasterxml.jackson.core:jackson-annotations\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-test\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.fasterxml.jackson.core:jackson-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-starter-netflix-eureka-server\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:jakarta.persistence:jakarta.persistence-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-loadbalancer\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.github.javafaker:javafaker\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.modelmapper:modelmapper\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-ratelimiter\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-context\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.sun.jersey:jersey-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.sun.istack:istack-commons-runtime\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.vavr:vavr\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-aop\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-spring-boot2\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-config-client\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-starter-loadbalancer\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.junit.jupiter:junit-jupiter-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:net.minidev:json-smart\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.netflix.netflix-commons:netflix-infix\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-codec-http2\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-web\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.apache.tomcat.embed:tomcat-embed-el\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.apache.logging.log4j:log4j-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.sun.jersey:jersey-server\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.javassist:javassist\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-context\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.netflix.eureka:eureka-client\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-actuator-autoconfigure\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-resolver-dns\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-handler-proxy\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.aspectj:aspectjweaver\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-transport-native-unix-common\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.fasterxml:classmate\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.github.mifmif:generex\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-io:commons-io\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-transport\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.glassfish.jaxb:jaxb-runtime\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.apache.tomcat.embed:tomcat-embed-websocket\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:ch.qos.logback:logback-classic\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:jakarta.validation:jakarta.validation-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.projectreactor.netty:reactor-netty-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-netflix-eureka-server\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-resolver-dns-native-macos\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.objenesis:objenesis\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-tx\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-fileupload:commons-fileupload\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-starter-config\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.security:spring-security-rsa\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-jcl\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-spring\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-aop\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.bouncycastle:bcprov-jdk15on\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.apache.httpcomponents:httpcore\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:ch.qos.logback:logback-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.apache.commons:commons-lang3\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.hibernate.validator:hibernate-validator\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-framework-common\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-collections:commons-collections\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.ow2.asm:asm\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:dk.brics.automaton:automaton\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-freemarker\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-commons\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.google.guava:guava\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-autoconfigure\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-consumer\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-test-autoconfigure\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.projectreactor:reactor-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-expression\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.fasterxml.jackson.datatype:jackson-datatype-jdk8\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.openfeign.form:feign-form-spring\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.fasterxml.jackson.dataformat:jackson-dataformat-xml\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.projectlombok:lombok\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.codehaus.woodstox:stax2-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.assertj:assertj-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.fasterxml.jackson.module:jackson-module-parameter-names\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.antlr:stringtemplate\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-gateway-server\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:jakarta.transaction:jakarta.transaction-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.hdrhistogram:HdrHistogram\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.xmlunit:xmlunit-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.junit.jupiter:junit-jupiter-params\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-transport-native-epoll\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.antlr:antlr-runtime\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-validation\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-data-jpa\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-validator:commons-validator\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.sun.jersey:jersey-client\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-aspects\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-webflux\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.h2database:h2\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.dom4j:dom4j\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-micrometer\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-test\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-beans\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.security:spring-security-config\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-codec-http\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-codec-socks\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:joda-time:joda-time\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-starter\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:jakarta.activation:jakarta.activation-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-actuator\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-codec-dns\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot-starter-cache\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-common\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.fasterxml.jackson.module:jackson-module-jaxb-annotations\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.resilience4j:resilience4j-retry\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-logging:commons-logging\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.boot:spring-boot\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-netflix-eureka-client\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.sun.jersey.contribs:jersey-apache-client4\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-codec\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.security:spring-security-crypto\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:xmlpull:xmlpull\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.sun.jersey:jersey-servlet\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:aopalliance:aopalliance\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.junit.platform:junit-platform-commons\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:jakarta.annotation:jakarta.annotation-api\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-orm\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework:spring-context-support\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.cloud:spring-cloud-starter-bootstrap\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.security:spring-security-test\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.thoughtworks.xstream:xstream\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-jxpath:commons-jxpath\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-beanutils:commons-beanutils\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.projectreactor.addons:reactor-extra\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.micrometer:micrometer-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.netflix.servo:servo-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.stoyanr:evictor\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.github.openfeign:feign-slf4j\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.netty:netty-handler\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:commons-digester:commons-digester\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.fasterxml.woodstox:woodstox-core\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.springframework.data:spring-data-jdbc\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:org.bouncycastle:bcpkix-jdk15on\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.sun.activation:jakarta.activation\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,110 +5,119 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="962c8d9f-5426-4660-864f-eb1229fed0da" name="Changes" comment="Second commit">
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_5.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_5.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_12_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_12_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_12_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_12_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_12_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_12_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__junit_junit_4_13_2.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__mysql_mysql_connector_java_8_0_26.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_52.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_el_9_0_52.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_52.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_attoparser_attoparser_2_0_5_RELEASE.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_hamcrest_hamcrest_core_2_2.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jpa_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_security_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_thymeleaf_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_jdbc_2_2_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_jpa_2_5_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_relational_2_2_4.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_security_spring_security_config_5_5_2.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_security_spring_security_core_5_5_2.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_security_spring_security_crypto_5_5_2.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_security_spring_security_web_5_5_2.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_aspects_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_beans_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_context_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_core_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_expression_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_jcl_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_jdbc_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_orm_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_test_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_tx_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_web_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_webmvc_5_3_9.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_thymeleaf_extras_thymeleaf_extras_java8time_3_0_4_RELEASE.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_thymeleaf_thymeleaf_3_0_12_RELEASE.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_thymeleaf_thymeleaf_spring5_3_0_12_RELEASE.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_unbescape_unbescape_1_1_6_RELEASE.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_8_2.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/TKWRN.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/TKWRN.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_annotations_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_circuitbreaker_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_circularbuffer_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_consumer_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_core_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_framework_common_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_micrometer_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_ratelimiter_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_retry_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_spring_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_spring_boot2_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_timelimiter_1_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_vavr_vavr_0_10_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_vavr_vavr_match_0_10_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_circuitbreaker_resilience4j_2_0_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_config_client_3_0_5.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_bootstrap_3_0_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_circuitbreaker_resilience4j_2_0_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_config_3_0_5.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_annotations_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_circuitbreaker_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_circularbuffer_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_consumer_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_core_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_framework_common_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_micrometer_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_ratelimiter_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_retry_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_spring_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_spring_boot2_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_resilience4j_resilience4j_timelimiter_1_7_0.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_projectreactor_netty_reactor_netty_core_1_0_12.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_projectreactor_netty_reactor_netty_http_1_0_12.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_projectreactor_reactor_test_3_4_11.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_vavr_vavr_0_10_2.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__io_vavr_vavr_match_0_10_2.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_2_0_Final.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_modelmapper_modelmapper_2_3_5.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_5_6.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_5_4.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_reactor_netty_2_5_6.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jdbc_2_5_4.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_5_6.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_5_4.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_webflux_2_5_6.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_5_4.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_circuitbreaker_resilience4j_2_0_2.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_config_client_3_0_5.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_gateway_server_3_0_4.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_bootstrap_3_0_4.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_circuitbreaker_resilience4j_2_0_2.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_config_3_0_5.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_gateway_3_0_4.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_webflux_5_3_12.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_aop_5_3_9.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/dataSources/adb525a7-5567-4813-866b-2abfd9c80c28.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/adb525a7-5567-4813-866b-2abfd9c80c28.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__mysql_mysql_connector_java_8_0_26.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabase.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabase.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountRequestDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountRequestDTO.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactRequestDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactRequestDTO.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenu.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenu.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountServiceProxy.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OpportunityServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OpportunityServiceProxy.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ReportServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ReportDBServiceProxy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/hibernate_log_file_name.log" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/hibernate_log_file_name.log" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/StolenNameTruckingCompanyHomework3Application.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/MenuServiceApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dao/Login.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dao/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabase.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dao/PopulateDatabase.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Variables.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dao/Variables.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountReceiptDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountReceiptDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountRequestDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountRequestDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountUpdateDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountUpdateDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactReceiptDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dto/ContactReceiptDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactRequestDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dto/ContactRequestDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/LeadRequestDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dto/LeadRequestDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/OpportunityReceiptDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dto/OpportunityReceiptDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/OpportunityRequestDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dto/OpportunityRequestDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/SalesRepRequestDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/dto/SalesRepRequestDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ConsoleTextColors.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/enums/ConsoleTextColors.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Industry.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/enums/Industry.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ReportCommands.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/enums/ReportCommands.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Status.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/enums/Status.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Truck.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/enums/Truck.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/EmailNotValidException.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/EmailNotValidException.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/EmptyStringException.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/EmptyStringException.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/ExceedsMaxLength.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/ExceedsMaxLength.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/IdContainsLettersException.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/IdContainsLettersException.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/InvalidCountryException.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/InvalidCountryException.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/InvalidEnumException.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/InvalidEnumException.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/NameContainsNumbersException.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/NameContainsNumbersException.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/NoSuchValueException.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/NoSuchValueException.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/PhoneNumberContainsLettersException.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/PhoneNumberContainsLettersException.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/menus/CityReportMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CountryReportMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/menus/CountryReportMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/EmployeeCountReportMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/menus/EmployeeCountReportMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/IndustryReportMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/menus/IndustryReportMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/menus/MainMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/OpportunityReportMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/menus/OpportunityReportMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ProductReportMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/menus/ProductReportMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/QuantityReportMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/menus/QuantityReportMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ReportMainMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/menus/ReportMainMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/SalesRepReportMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/menus/SalesRepReportMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountReportServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/proxy/AccountReportServiceProxy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/proxy/AccountServiceProxy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ContactServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/proxy/ContactServiceProxy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/LeadServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/proxy/LeadServiceProxy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OppReportServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/proxy/OppReportServiceProxy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OpportunityServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/proxy/OpportunityServiceProxy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ReportDBServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/proxy/ReportDBServiceProxy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/SalesRepServiceProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/java/com/ironhack/menuservice/proxy/SalesRepServiceProxy.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/main/resources/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/StolenNameTruckingCompanyHomework3ApplicationTests.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/MenuServiceApplicationTests.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/AccountRequestDTOTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/dao/AccountRequestDTOTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/ContactRequestDTOTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/dao/ContactRequestDTOTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/LeadRequestDTOTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/dao/LeadRequestDTOTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/OpportunityRequestDTOTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/dao/OpportunityRequestDTOTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabaseTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/dao/PopulateDatabaseTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/SalesRepRequestDTOTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/dao/SalesRepRequestDTOTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/dao/resources/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ConsoleTextColorsTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/enums/ConsoleTextColorsTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/IndustryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/enums/IndustryTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ReportCommandsTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/enums/ReportCommandsTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/TruckTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/enums/TruckTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenuTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/menus/CityReportMenuTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CountryReportMenuTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/menus/CountryReportMenuTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/EmployeeCountReportMenuTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/menus/EmployeeCountReportMenuTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/IndustryReportMenuTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/menus/IndustryReportMenuTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenuTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/menus/MainMenuTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/OpportunityRequestDTOReportMenuTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/menus/OpportunityRequestDTOReportMenuTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ProductReportMenuTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/menus/ProductReportMenuTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/QuantityReportMenuTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/menus/QuantityReportMenuTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/SalesRepRequestDTOReportMenuTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/menus/SalesRepRequestDTOReportMenuTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/AccountRequestDTORepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/repository/AccountRequestDTORepositoryTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/ContactRequestDTORepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/repository/ContactRequestDTORepositoryTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/LeadRequestDTORepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/repository/LeadRequestDTORepositoryTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/OpportunityRequestDTORepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/repository/OpportunityRequestDTORepositoryTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/SalesRepRequestDTORepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu-service/src/test/java/com/ironhack/menuservice/repository/SalesRepRequestDTORepositoryTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/opportunity-service/src/main/java/com/ironhack/OpportunityService/DTO/OpportunityDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/opportunity-service/src/main/java/com/ironhack/OpportunityService/DTO/OpportunityDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/opportunity-service/src/main/java/com/ironhack/OpportunityService/dao/Opportunity.java" beforeDir="false" afterPath="$PROJECT_DIR$/opportunity-service/src/main/java/com/ironhack/OpportunityService/dao/Opportunity.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/report-service/src/main/java/com/ironhack/ReportService/Controller/OpportunityReportController.java" beforeDir="false" afterPath="$PROJECT_DIR$/report-service/src/main/java/com/ironhack/ReportService/Controller/OpportunityReportController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/report-service/src/main/java/com/ironhack/ReportService/dao/Opportunity.java" beforeDir="false" afterPath="$PROJECT_DIR$/report-service/src/main/java/com/ironhack/ReportService/dao/Opportunity.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/report-service/src/main/java/com/ironhack/ReportService/repository/OpportunityRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/report-service/src/main/java/com/ironhack/ReportService/repository/OpportunityRepository.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="CodeInsightWorkspaceSettings">
+    <option name="optimizeImportsOnTheFly" value="true" />
   </component>
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
@@ -165,7 +174,7 @@
     <property name="WebServerToolWindowFactoryState" value="false" />
     <property name="last_directory_selection" value="$PROJECT_DIR$/Menu-service/src" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
-    <property name="project.structure.last.edited" value="Project" />
+    <property name="project.structure.last.edited" value="Modules" />
     <property name="project.structure.proportion" value="0.15" />
     <property name="project.structure.side.proportion" value="0.2" />
   </component>
@@ -187,7 +196,7 @@
   </component>
   <component name="RunManager" selected="Application.OpportunityServiceApplication">
     <configuration name="AccountServiceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="com.ironhack.accountservice.AccountServiceApplication" />
+      <option name="MAIN_CLASS_NAME" value="com.ironhack.salesrepservice.controller.impl.SalesRepControllerTest" />
       <module name="account-service" />
       <extension name="coverage">
         <pattern>
@@ -272,6 +281,13 @@
     <configuration name="LeadServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
       <module name="lead-service" />
       <option name="SPRING_BOOT_MAIN_CLASS" value="com.ironhack.leadservice.LeadServiceApplication" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="MenuServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
+      <module name="menu-service" />
+      <option name="SPRING_BOOT_MAIN_CLASS" value="com.ironhack.menuservice.MenuServiceApplication" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -549,7 +565,19 @@
       <map>
         <entry key="MAIN">
           <value>
-            <State />
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="origin/shaun-dev2" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
           </value>
         </entry>
       </map>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"lead-service\" />\r\n        <module name=\"contact-service\" />\r\n        <module name=\"report-service\" />\r\n        <module name=\"account-service\" />\r\n        <module name=\"salesrep-service\" />\r\n        <module name=\"discovery-service\" />\r\n        <module name=\"opportunity-service\" />\r\n        <module name=\"gateway\" />\r\n        <module name=\"stolen_name_trucking_company_homework_3\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n    <bytecodeTargetLevel>\r\n      <module name=\"account-service\" target=\"1.5\" />\r\n      <module name=\"contact-service\" target=\"17\" />\r\n      <module name=\"discovery-service\" target=\"17\" />\r\n      <module name=\"gateway\" target=\"17\" />\r\n      <module name=\"lead-service\" target=\"17\" />\r\n      <module name=\"opportunity-service\" target=\"17\" />\r\n      <module name=\"report-service\" target=\"17\" />\r\n      <module name=\"salesrep-service\" target=\"1.5\" />\r\n      <module name=\"stolen_name_trucking_company_homework_3\" target=\"14\" />\r\n      <module name=\"wrapper\" target=\"1.5\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"account-service\" options=\"-parameters\" />\r\n      <module name=\"contact-service\" options=\"-parameters\" />\r\n      <module name=\"discovery-service\" options=\"-parameters\" />\r\n      <module name=\"gateway\" options=\"-parameters\" />\r\n      <module name=\"lead-service\" options=\"-parameters\" />\r\n      <module name=\"opportunity-service\" options=\"-parameters\" />\r\n      <module name=\"report-service\" options=\"-parameters\" />\r\n      <module name=\"salesrep-service\" options=\"-parameters\" />\r\n      <module name=\"stolen_name_trucking_company_homework_3\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	
+++ b/.idea/compiler.xml	
@@ -11,6 +11,7 @@
         <module name="contact-service" />
         <module name="report-service" />
         <module name="account-service" />
+        <module name="menu-service" />
         <module name="salesrep-service" />
         <module name="discovery-service" />
         <module name="opportunity-service" />
@@ -19,14 +20,15 @@
       </profile>
     </annotationProcessing>
     <bytecodeTargetLevel>
-      <module name="account-service" target="1.5" />
+      <module name="account-service" target="17" />
       <module name="contact-service" target="17" />
       <module name="discovery-service" target="17" />
       <module name="gateway" target="17" />
       <module name="lead-service" target="17" />
+      <module name="menu-service" target="17" />
       <module name="opportunity-service" target="17" />
       <module name="report-service" target="17" />
-      <module name="salesrep-service" target="1.5" />
+      <module name="salesrep-service" target="17" />
       <module name="stolen_name_trucking_company_homework_3" target="14" />
       <module name="wrapper" target="1.5" />
     </bytecodeTargetLevel>
@@ -38,6 +40,7 @@
       <module name="discovery-service" options="-parameters" />
       <module name="gateway" options="-parameters" />
       <module name="lead-service" options="-parameters" />
+      <module name="menu-service" options="-parameters" />
       <module name="opportunity-service" options="-parameters" />
       <module name="report-service" options="-parameters" />
       <module name="salesrep-service" options="-parameters" />
Index: .idea/dataSources/adb525a7-5567-4813-866b-2abfd9c80c28.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<dataSource name=\"MySQL - ironhackhomework4@localhost\">\r\n  <database-model serializer=\"dbm\" dbms=\"MYSQL\" family-id=\"MYSQL\" format-version=\"4.23\">\r\n    <root id=\"1\">\r\n      <ServerVersion>8.0.25</ServerVersion>\r\n      <Grants>|root||coffee-tester|localhost|ALTER|G\r\n|root||ironhacker|localhost|ALTER|G\r\n|root||ironhacker2||ALTER|G\r\n|root||ironhacker3||ALTER|G\r\n|root||root|localhost|ALTER|G\r\n|root||coffee-tester|localhost|ALTER ROUTINE|G\r\n|root||ironhacker|localhost|ALTER ROUTINE|G\r\n|root||ironhacker2||ALTER ROUTINE|G\r\n|root||ironhacker3||ALTER ROUTINE|G\r\n|root||root|localhost|ALTER ROUTINE|G\r\n|root||coffee-tester|localhost|APPLICATION_PASSWORD_ADMIN|G\r\n|root||ironhacker|localhost|APPLICATION_PASSWORD_ADMIN|G\r\n|root||ironhacker3||APPLICATION_PASSWORD_ADMIN|G\r\n|root||root|localhost|APPLICATION_PASSWORD_ADMIN|G\r\n|root||coffee-tester|localhost|AUDIT_ADMIN|G\r\n|root||ironhacker|localhost|AUDIT_ADMIN|G\r\n|root||ironhacker3||AUDIT_ADMIN|G\r\n|root||root|localhost|AUDIT_ADMIN|G\r\n|root||coffee-tester|localhost|BACKUP_ADMIN|G\r\n|root||ironhacker|localhost|BACKUP_ADMIN|G\r\n|root||ironhacker3||BACKUP_ADMIN|G\r\n|root||mysql.session|localhost|BACKUP_ADMIN|G\r\n|root||root|localhost|BACKUP_ADMIN|G\r\n|root||coffee-tester|localhost|BINLOG_ADMIN|G\r\n|root||ironhacker|localhost|BINLOG_ADMIN|G\r\n|root||ironhacker3||BINLOG_ADMIN|G\r\n|root||root|localhost|BINLOG_ADMIN|G\r\n|root||coffee-tester|localhost|BINLOG_ENCRYPTION_ADMIN|G\r\n|root||ironhacker|localhost|BINLOG_ENCRYPTION_ADMIN|G\r\n|root||ironhacker3||BINLOG_ENCRYPTION_ADMIN|G\r\n|root||root|localhost|BINLOG_ENCRYPTION_ADMIN|G\r\n|root||coffee-tester|localhost|CLONE_ADMIN|G\r\n|root||ironhacker|localhost|CLONE_ADMIN|G\r\n|root||ironhacker3||CLONE_ADMIN|G\r\n|root||mysql.session|localhost|CLONE_ADMIN|G\r\n|root||root|localhost|CLONE_ADMIN|G\r\n|root||coffee-tester|localhost|CONNECTION_ADMIN|G\r\n|root||ironhacker|localhost|CONNECTION_ADMIN|G\r\n|root||ironhacker3||CONNECTION_ADMIN|G\r\n|root||mysql.session|localhost|CONNECTION_ADMIN|G\r\n|root||root|localhost|CONNECTION_ADMIN|G\r\n|root||coffee-tester|localhost|CREATE|G\r\n|root||ironhacker|localhost|CREATE|G\r\n|root||ironhacker2||CREATE|G\r\n|root||ironhacker3||CREATE|G\r\n|root||root|localhost|CREATE|G\r\n|root||coffee-tester|localhost|CREATE ROLE|G\r\n|root||ironhacker|localhost|CREATE ROLE|G\r\n|root||ironhacker3||CREATE ROLE|G\r\n|root||root|localhost|CREATE ROLE|G\r\n|root||coffee-tester|localhost|CREATE ROUTINE|G\r\n|root||ironhacker|localhost|CREATE ROUTINE|G\r\n|root||ironhacker2||CREATE ROUTINE|G\r\n|root||ironhacker3||CREATE ROUTINE|G\r\n|root||root|localhost|CREATE ROUTINE|G\r\n|root||coffee-tester|localhost|CREATE TABLESPACE|G\r\n|root||ironhacker|localhost|CREATE TABLESPACE|G\r\n|root||ironhacker2||CREATE TABLESPACE|G\r\n|root||ironhacker3||CREATE TABLESPACE|G\r\n|root||root|localhost|CREATE TABLESPACE|G\r\n|root||coffee-tester|localhost|CREATE TEMPORARY TABLES|G\r\n|root||ironhacker|localhost|CREATE TEMPORARY TABLES|G\r\n|root||ironhacker2||CREATE TEMPORARY TABLES|G\r\n|root||ironhacker3||CREATE TEMPORARY TABLES|G\r\n|root||root|localhost|CREATE TEMPORARY TABLES|G\r\n|root||coffee-tester|localhost|CREATE USER|G\r\n|root||ironhacker|localhost|CREATE USER|G\r\n|root||ironhacker2||CREATE USER|G\r\n|root||ironhacker3||CREATE USER|G\r\n|root||root|localhost|CREATE USER|G\r\n|root||coffee-tester|localhost|CREATE VIEW|G\r\n|root||ironhacker|localhost|CREATE VIEW|G\r\n|root||ironhacker2||CREATE VIEW|G\r\n|root||ironhacker3||CREATE VIEW|G\r\n|root||root|localhost|CREATE VIEW|G\r\n|root||coffee-tester|localhost|DELETE|G\r\n|root||ironhacker|localhost|DELETE|G\r\n|root||ironhacker2||DELETE|G\r\n|root||ironhacker3||DELETE|G\r\n|root||root|localhost|DELETE|G\r\n|root||coffee-tester|localhost|DROP|G\r\n|root||ironhacker|localhost|DROP|G\r\n|root||ironhacker2||DROP|G\r\n|root||ironhacker3||DROP|G\r\n|root||root|localhost|DROP|G\r\n|root||coffee-tester|localhost|DROP ROLE|G\r\n|root||ironhacker|localhost|DROP ROLE|G\r\n|root||ironhacker3||DROP ROLE|G\r\n|root||root|localhost|DROP ROLE|G\r\n|root||coffee-tester|localhost|ENCRYPTION_KEY_ADMIN|G\r\n|root||ironhacker|localhost|ENCRYPTION_KEY_ADMIN|G\r\n|root||ironhacker3||ENCRYPTION_KEY_ADMIN|G\r\n|root||root|localhost|ENCRYPTION_KEY_ADMIN|G\r\n|root||coffee-tester|localhost|EVENT|G\r\n|root||ironhacker|localhost|EVENT|G\r\n|root||ironhacker2||EVENT|G\r\n|root||ironhacker3||EVENT|G\r\n|root||root|localhost|EVENT|G\r\n|root||coffee-tester|localhost|EXECUTE|G\r\n|root||ironhacker|localhost|EXECUTE|G\r\n|root||ironhacker2||EXECUTE|G\r\n|root||ironhacker3||EXECUTE|G\r\n|root||root|localhost|EXECUTE|G\r\n|root||coffee-tester|localhost|FILE|G\r\n|root||ironhacker|localhost|FILE|G\r\n|root||ironhacker2||FILE|G\r\n|root||ironhacker3||FILE|G\r\n|root||root|localhost|FILE|G\r\n|root||coffee-tester|localhost|FLUSH_OPTIMIZER_COSTS|G\r\n|root||ironhacker|localhost|FLUSH_OPTIMIZER_COSTS|G\r\n|root||ironhacker3||FLUSH_OPTIMIZER_COSTS|G\r\n|root||root|localhost|FLUSH_OPTIMIZER_COSTS|G\r\n|root||coffee-tester|localhost|FLUSH_STATUS|G\r\n|root||ironhacker|localhost|FLUSH_STATUS|G\r\n|root||ironhacker3||FLUSH_STATUS|G\r\n|root||root|localhost|FLUSH_STATUS|G\r\n|root||coffee-tester|localhost|FLUSH_TABLES|G\r\n|root||ironhacker|localhost|FLUSH_TABLES|G\r\n|root||ironhacker3||FLUSH_TABLES|G\r\n|root||root|localhost|FLUSH_TABLES|G\r\n|root||coffee-tester|localhost|FLUSH_USER_RESOURCES|G\r\n|root||ironhacker|localhost|FLUSH_USER_RESOURCES|G\r\n|root||ironhacker3||FLUSH_USER_RESOURCES|G\r\n|root||root|localhost|FLUSH_USER_RESOURCES|G\r\n|root||coffee-tester|localhost|GROUP_REPLICATION_ADMIN|G\r\n|root||ironhacker|localhost|GROUP_REPLICATION_ADMIN|G\r\n|root||ironhacker3||GROUP_REPLICATION_ADMIN|G\r\n|root||root|localhost|GROUP_REPLICATION_ADMIN|G\r\n|root||coffee-tester|localhost|INDEX|G\r\n|root||ironhacker|localhost|INDEX|G\r\n|root||ironhacker2||INDEX|G\r\n|root||ironhacker3||INDEX|G\r\n|root||root|localhost|INDEX|G\r\n|root||coffee-tester|localhost|INNODB_REDO_LOG_ARCHIVE|G\r\n|root||ironhacker|localhost|INNODB_REDO_LOG_ARCHIVE|G\r\n|root||ironhacker3||INNODB_REDO_LOG_ARCHIVE|G\r\n|root||root|localhost|INNODB_REDO_LOG_ARCHIVE|G\r\n|root||coffee-tester|localhost|INNODB_REDO_LOG_ENABLE|G\r\n|root||ironhacker|localhost|INNODB_REDO_LOG_ENABLE|G\r\n|root||ironhacker3||INNODB_REDO_LOG_ENABLE|G\r\n|root||root|localhost|INNODB_REDO_LOG_ENABLE|G\r\n|root||coffee-tester|localhost|INSERT|G\r\n|root||ironhacker|localhost|INSERT|G\r\n|root||ironhacker2||INSERT|G\r\n|root||ironhacker3||INSERT|G\r\n|root||root|localhost|INSERT|G\r\n|root||coffee-tester|localhost|LOCK TABLES|G\r\n|root||ironhacker|localhost|LOCK TABLES|G\r\n|root||ironhacker2||LOCK TABLES|G\r\n|root||ironhacker3||LOCK TABLES|G\r\n|root||root|localhost|LOCK TABLES|G\r\n|root||coffee-tester|localhost|PERSIST_RO_VARIABLES_ADMIN|G\r\n|root||ironhacker|localhost|PERSIST_RO_VARIABLES_ADMIN|G\r\n|root||ironhacker3||PERSIST_RO_VARIABLES_ADMIN|G\r\n|root||mysql.session|localhost|PERSIST_RO_VARIABLES_ADMIN|G\r\n|root||root|localhost|PERSIST_RO_VARIABLES_ADMIN|G\r\n|root||coffee-tester|localhost|PROCESS|G\r\n|root||ironhacker|localhost|PROCESS|G\r\n|root||ironhacker2||PROCESS|G\r\n|root||ironhacker3||PROCESS|G\r\n|root||root|localhost|PROCESS|G\r\n|root||coffee-tester|localhost|REFERENCES|G\r\n|root||ironhacker|localhost|REFERENCES|G\r\n|root||ironhacker2||REFERENCES|G\r\n|root||ironhacker3||REFERENCES|G\r\n|root||root|localhost|REFERENCES|G\r\n|root||coffee-tester|localhost|RELOAD|G\r\n|root||ironhacker|localhost|RELOAD|G\r\n|root||ironhacker2||RELOAD|G\r\n|root||ironhacker3||RELOAD|G\r\n|root||root|localhost|RELOAD|G\r\n|root||coffee-tester|localhost|REPLICATION CLIENT|G\r\n|root||ironhacker|localhost|REPLICATION CLIENT|G\r\n|root||ironhacker2||REPLICATION CLIENT|G\r\n|root||ironhacker3||REPLICATION CLIENT|G\r\n|root||root|localhost|REPLICATION CLIENT|G\r\n|root||coffee-tester|localhost|REPLICATION SLAVE|G\r\n|root||ironhacker|localhost|REPLICATION SLAVE|G\r\n|root||ironhacker2||REPLICATION SLAVE|G\r\n|root||ironhacker3||REPLICATION SLAVE|G\r\n|root||root|localhost|REPLICATION SLAVE|G\r\n|root||coffee-tester|localhost|REPLICATION_APPLIER|G\r\n|root||ironhacker|localhost|REPLICATION_APPLIER|G\r\n|root||ironhacker3||REPLICATION_APPLIER|G\r\n|root||root|localhost|REPLICATION_APPLIER|G\r\n|root||coffee-tester|localhost|REPLICATION_SLAVE_ADMIN|G\r\n|root||ironhacker|localhost|REPLICATION_SLAVE_ADMIN|G\r\n|root||ironhacker3||REPLICATION_SLAVE_ADMIN|G\r\n|root||root|localhost|REPLICATION_SLAVE_ADMIN|G\r\n|root||coffee-tester|localhost|RESOURCE_GROUP_ADMIN|G\r\n|root||ironhacker|localhost|RESOURCE_GROUP_ADMIN|G\r\n|root||ironhacker3||RESOURCE_GROUP_ADMIN|G\r\n|root||root|localhost|RESOURCE_GROUP_ADMIN|G\r\n|root||coffee-tester|localhost|RESOURCE_GROUP_USER|G\r\n|root||ironhacker|localhost|RESOURCE_GROUP_USER|G\r\n|root||ironhacker3||RESOURCE_GROUP_USER|G\r\n|root||root|localhost|RESOURCE_GROUP_USER|G\r\n|root||coffee-tester|localhost|ROLE_ADMIN|G\r\n|root||ironhacker|localhost|ROLE_ADMIN|G\r\n|root||ironhacker3||ROLE_ADMIN|G\r\n|root||root|localhost|ROLE_ADMIN|G\r\n|root||coffee-tester|localhost|SELECT|G\r\n|root||ironhacker|localhost|SELECT|G\r\n|root||ironhacker2||SELECT|G\r\n|root||ironhacker3||SELECT|G\r\n|root||mysql.infoschema|localhost|SELECT|G\r\n|root||root|localhost|SELECT|G\r\n|root||coffee-tester|localhost|SERVICE_CONNECTION_ADMIN|G\r\n|root||ironhacker|localhost|SERVICE_CONNECTION_ADMIN|G\r\n|root||ironhacker3||SERVICE_CONNECTION_ADMIN|G\r\n|root||root|localhost|SERVICE_CONNECTION_ADMIN|G\r\n|root||coffee-tester|localhost|SESSION_VARIABLES_ADMIN|G\r\n|root||ironhacker|localhost|SESSION_VARIABLES_ADMIN|G\r\n|root||ironhacker3||SESSION_VARIABLES_ADMIN|G\r\n|root||mysql.session|localhost|SESSION_VARIABLES_ADMIN|G\r\n|root||root|localhost|SESSION_VARIABLES_ADMIN|G\r\n|root||coffee-tester|localhost|SET_USER_ID|G\r\n|root||ironhacker|localhost|SET_USER_ID|G\r\n|root||ironhacker3||SET_USER_ID|G\r\n|root||root|localhost|SET_USER_ID|G\r\n|root||coffee-tester|localhost|SHOW DATABASES|G\r\n|root||ironhacker|localhost|SHOW DATABASES|G\r\n|root||ironhacker2||SHOW DATABASES|G\r\n|root||ironhacker3||SHOW DATABASES|G\r\n|root||root|localhost|SHOW DATABASES|G\r\n|root||coffee-tester|localhost|SHOW VIEW|G\r\n|root||ironhacker|localhost|SHOW VIEW|G\r\n|root||ironhacker2||SHOW VIEW|G\r\n|root||ironhacker3||SHOW VIEW|G\r\n|root||root|localhost|SHOW VIEW|G\r\n|root||coffee-tester|localhost|SHOW_ROUTINE|G\r\n|root||ironhacker|localhost|SHOW_ROUTINE|G\r\n|root||ironhacker3||SHOW_ROUTINE|G\r\n|root||root|localhost|SHOW_ROUTINE|G\r\n|root||coffee-tester|localhost|SHUTDOWN|G\r\n|root||ironhacker|localhost|SHUTDOWN|G\r\n|root||ironhacker2||SHUTDOWN|G\r\n|root||ironhacker3||SHUTDOWN|G\r\n|root||mysql.session|localhost|SHUTDOWN|G\r\n|root||root|localhost|SHUTDOWN|G\r\n|root||coffee-tester|localhost|SUPER|G\r\n|root||ironhacker|localhost|SUPER|G\r\n|root||ironhacker2||SUPER|G\r\n|root||ironhacker3||SUPER|G\r\n|root||mysql.session|localhost|SUPER|G\r\n|root||root|localhost|SUPER|G\r\n|root||coffee-tester|localhost|SYSTEM_USER|G\r\n|root||ironhacker|localhost|SYSTEM_USER|G\r\n|root||ironhacker3||SYSTEM_USER|G\r\n|root||mysql.infoschema|localhost|SYSTEM_USER|G\r\n|root||mysql.session|localhost|SYSTEM_USER|G\r\n|root||mysql.sys|localhost|SYSTEM_USER|G\r\n|root||root|localhost|SYSTEM_USER|G\r\n|root||coffee-tester|localhost|SYSTEM_VARIABLES_ADMIN|G\r\n|root||ironhacker|localhost|SYSTEM_VARIABLES_ADMIN|G\r\n|root||ironhacker3||SYSTEM_VARIABLES_ADMIN|G\r\n|root||mysql.session|localhost|SYSTEM_VARIABLES_ADMIN|G\r\n|root||root|localhost|SYSTEM_VARIABLES_ADMIN|G\r\n|root||coffee-tester|localhost|TABLE_ENCRYPTION_ADMIN|G\r\n|root||ironhacker|localhost|TABLE_ENCRYPTION_ADMIN|G\r\n|root||ironhacker3||TABLE_ENCRYPTION_ADMIN|G\r\n|root||root|localhost|TABLE_ENCRYPTION_ADMIN|G\r\n|root||coffee-tester|localhost|TRIGGER|G\r\n|root||ironhacker|localhost|TRIGGER|G\r\n|root||ironhacker2||TRIGGER|G\r\n|root||ironhacker3||TRIGGER|G\r\n|root||root|localhost|TRIGGER|G\r\n|root||coffee-tester|localhost|UPDATE|G\r\n|root||ironhacker|localhost|UPDATE|G\r\n|root||ironhacker2||UPDATE|G\r\n|root||ironhacker3||UPDATE|G\r\n|root||root|localhost|UPDATE|G\r\n|root||coffee-tester|localhost|XA_RECOVER_ADMIN|G\r\n|root||ironhacker|localhost|XA_RECOVER_ADMIN|G\r\n|root||ironhacker3||XA_RECOVER_ADMIN|G\r\n|root||root|localhost|XA_RECOVER_ADMIN|G\r\n|root||ironhacker2||grant option|G\r\n|root||ironhacker3||grant option|G\r\n|root||root|localhost|grant option|G\r\nperformance_schema|schema||mysql.session|localhost|SELECT|G\r\nsys|schema||mysql.sys|localhost|TRIGGER|G</Grants>\r\n      <DefaultEngine>InnoDB</DefaultEngine>\r\n      <DefaultTmpEngine>InnoDB</DefaultTmpEngine>\r\n      <DefaultCasing>lower/lower</DefaultCasing>\r\n    </root>\r\n    <schema id=\"2\" parent=\"1\" name=\"ironhackhomework4\">\r\n      <Current>1</Current>\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"3\" parent=\"1\" name=\"airline\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"4\" parent=\"1\" name=\"banking_system\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"5\" parent=\"1\" name=\"blog\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"6\" parent=\"1\" name=\"course\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"7\" parent=\"1\" name=\"crmv2database\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"8\" parent=\"1\" name=\"excercise\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"9\" parent=\"1\" name=\"homework3\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"10\" parent=\"1\" name=\"homework3_testing\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"11\" parent=\"1\" name=\"information_schema\">\r\n      <Collation>utf8_general_ci</Collation>\r\n    </schema>\r\n    <schema id=\"12\" parent=\"1\" name=\"ironhackhomework3\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"13\" parent=\"1\" name=\"lab36\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"14\" parent=\"1\" name=\"lab402\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"15\" parent=\"1\" name=\"lab404\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"16\" parent=\"1\" name=\"lab406\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"17\" parent=\"1\" name=\"lab408\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"18\" parent=\"1\" name=\"librarydb\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"19\" parent=\"1\" name=\"mysql\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"20\" parent=\"1\" name=\"performance_schema\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"21\" parent=\"1\" name=\"relationship\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"22\" parent=\"1\" name=\"rest\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"23\" parent=\"1\" name=\"sys\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <schema id=\"24\" parent=\"1\" name=\"test\">\r\n      <Collation>utf8mb4_0900_ai_ci</Collation>\r\n    </schema>\r\n    <collation id=\"25\" parent=\"1\" name=\"armscii8_general_ci\">\r\n      <Charset>armscii8</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"26\" parent=\"1\" name=\"armscii8_bin\">\r\n      <Charset>armscii8</Charset>\r\n    </collation>\r\n    <collation id=\"27\" parent=\"1\" name=\"ascii_general_ci\">\r\n      <Charset>ascii</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"28\" parent=\"1\" name=\"ascii_bin\">\r\n      <Charset>ascii</Charset>\r\n    </collation>\r\n    <collation id=\"29\" parent=\"1\" name=\"big5_chinese_ci\">\r\n      <Charset>big5</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"30\" parent=\"1\" name=\"big5_bin\">\r\n      <Charset>big5</Charset>\r\n    </collation>\r\n    <collation id=\"31\" parent=\"1\" name=\"binary\">\r\n      <Charset>binary</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"32\" parent=\"1\" name=\"cp1250_general_ci\">\r\n      <Charset>cp1250</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"33\" parent=\"1\" name=\"cp1250_czech_cs\">\r\n      <Charset>cp1250</Charset>\r\n    </collation>\r\n    <collation id=\"34\" parent=\"1\" name=\"cp1250_croatian_ci\">\r\n      <Charset>cp1250</Charset>\r\n    </collation>\r\n    <collation id=\"35\" parent=\"1\" name=\"cp1250_bin\">\r\n      <Charset>cp1250</Charset>\r\n    </collation>\r\n    <collation id=\"36\" parent=\"1\" name=\"cp1250_polish_ci\">\r\n      <Charset>cp1250</Charset>\r\n    </collation>\r\n    <collation id=\"37\" parent=\"1\" name=\"cp1251_bulgarian_ci\">\r\n      <Charset>cp1251</Charset>\r\n    </collation>\r\n    <collation id=\"38\" parent=\"1\" name=\"cp1251_ukrainian_ci\">\r\n      <Charset>cp1251</Charset>\r\n    </collation>\r\n    <collation id=\"39\" parent=\"1\" name=\"cp1251_bin\">\r\n      <Charset>cp1251</Charset>\r\n    </collation>\r\n    <collation id=\"40\" parent=\"1\" name=\"cp1251_general_ci\">\r\n      <Charset>cp1251</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"41\" parent=\"1\" name=\"cp1251_general_cs\">\r\n      <Charset>cp1251</Charset>\r\n    </collation>\r\n    <collation id=\"42\" parent=\"1\" name=\"cp1256_general_ci\">\r\n      <Charset>cp1256</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"43\" parent=\"1\" name=\"cp1256_bin\">\r\n      <Charset>cp1256</Charset>\r\n    </collation>\r\n    <collation id=\"44\" parent=\"1\" name=\"cp1257_lithuanian_ci\">\r\n      <Charset>cp1257</Charset>\r\n    </collation>\r\n    <collation id=\"45\" parent=\"1\" name=\"cp1257_bin\">\r\n      <Charset>cp1257</Charset>\r\n    </collation>\r\n    <collation id=\"46\" parent=\"1\" name=\"cp1257_general_ci\">\r\n      <Charset>cp1257</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"47\" parent=\"1\" name=\"cp850_general_ci\">\r\n      <Charset>cp850</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"48\" parent=\"1\" name=\"cp850_bin\">\r\n      <Charset>cp850</Charset>\r\n    </collation>\r\n    <collation id=\"49\" parent=\"1\" name=\"cp852_general_ci\">\r\n      <Charset>cp852</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"50\" parent=\"1\" name=\"cp852_bin\">\r\n      <Charset>cp852</Charset>\r\n    </collation>\r\n    <collation id=\"51\" parent=\"1\" name=\"cp866_general_ci\">\r\n      <Charset>cp866</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"52\" parent=\"1\" name=\"cp866_bin\">\r\n      <Charset>cp866</Charset>\r\n    </collation>\r\n    <collation id=\"53\" parent=\"1\" name=\"cp932_japanese_ci\">\r\n      <Charset>cp932</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"54\" parent=\"1\" name=\"cp932_bin\">\r\n      <Charset>cp932</Charset>\r\n    </collation>\r\n    <collation id=\"55\" parent=\"1\" name=\"dec8_swedish_ci\">\r\n      <Charset>dec8</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"56\" parent=\"1\" name=\"dec8_bin\">\r\n      <Charset>dec8</Charset>\r\n    </collation>\r\n    <collation id=\"57\" parent=\"1\" name=\"eucjpms_japanese_ci\">\r\n      <Charset>eucjpms</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"58\" parent=\"1\" name=\"eucjpms_bin\">\r\n      <Charset>eucjpms</Charset>\r\n    </collation>\r\n    <collation id=\"59\" parent=\"1\" name=\"euckr_korean_ci\">\r\n      <Charset>euckr</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"60\" parent=\"1\" name=\"euckr_bin\">\r\n      <Charset>euckr</Charset>\r\n    </collation>\r\n    <collation id=\"61\" parent=\"1\" name=\"gb18030_chinese_ci\">\r\n      <Charset>gb18030</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"62\" parent=\"1\" name=\"gb18030_bin\">\r\n      <Charset>gb18030</Charset>\r\n    </collation>\r\n    <collation id=\"63\" parent=\"1\" name=\"gb18030_unicode_520_ci\">\r\n      <Charset>gb18030</Charset>\r\n    </collation>\r\n    <collation id=\"64\" parent=\"1\" name=\"gb2312_chinese_ci\">\r\n      <Charset>gb2312</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"65\" parent=\"1\" name=\"gb2312_bin\">\r\n      <Charset>gb2312</Charset>\r\n    </collation>\r\n    <collation id=\"66\" parent=\"1\" name=\"gbk_chinese_ci\">\r\n      <Charset>gbk</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"67\" parent=\"1\" name=\"gbk_bin\">\r\n      <Charset>gbk</Charset>\r\n    </collation>\r\n    <collation id=\"68\" parent=\"1\" name=\"geostd8_general_ci\">\r\n      <Charset>geostd8</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"69\" parent=\"1\" name=\"geostd8_bin\">\r\n      <Charset>geostd8</Charset>\r\n    </collation>\r\n    <collation id=\"70\" parent=\"1\" name=\"greek_general_ci\">\r\n      <Charset>greek</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"71\" parent=\"1\" name=\"greek_bin\">\r\n      <Charset>greek</Charset>\r\n    </collation>\r\n    <collation id=\"72\" parent=\"1\" name=\"hebrew_general_ci\">\r\n      <Charset>hebrew</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"73\" parent=\"1\" name=\"hebrew_bin\">\r\n      <Charset>hebrew</Charset>\r\n    </collation>\r\n    <collation id=\"74\" parent=\"1\" name=\"hp8_english_ci\">\r\n      <Charset>hp8</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"75\" parent=\"1\" name=\"hp8_bin\">\r\n      <Charset>hp8</Charset>\r\n    </collation>\r\n    <collation id=\"76\" parent=\"1\" name=\"keybcs2_general_ci\">\r\n      <Charset>keybcs2</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"77\" parent=\"1\" name=\"keybcs2_bin\">\r\n      <Charset>keybcs2</Charset>\r\n    </collation>\r\n    <collation id=\"78\" parent=\"1\" name=\"koi8r_general_ci\">\r\n      <Charset>koi8r</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"79\" parent=\"1\" name=\"koi8r_bin\">\r\n      <Charset>koi8r</Charset>\r\n    </collation>\r\n    <collation id=\"80\" parent=\"1\" name=\"koi8u_general_ci\">\r\n      <Charset>koi8u</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"81\" parent=\"1\" name=\"koi8u_bin\">\r\n      <Charset>koi8u</Charset>\r\n    </collation>\r\n    <collation id=\"82\" parent=\"1\" name=\"latin1_german1_ci\">\r\n      <Charset>latin1</Charset>\r\n    </collation>\r\n    <collation id=\"83\" parent=\"1\" name=\"latin1_swedish_ci\">\r\n      <Charset>latin1</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"84\" parent=\"1\" name=\"latin1_danish_ci\">\r\n      <Charset>latin1</Charset>\r\n    </collation>\r\n    <collation id=\"85\" parent=\"1\" name=\"latin1_german2_ci\">\r\n      <Charset>latin1</Charset>\r\n    </collation>\r\n    <collation id=\"86\" parent=\"1\" name=\"latin1_bin\">\r\n      <Charset>latin1</Charset>\r\n    </collation>\r\n    <collation id=\"87\" parent=\"1\" name=\"latin1_general_ci\">\r\n      <Charset>latin1</Charset>\r\n    </collation>\r\n    <collation id=\"88\" parent=\"1\" name=\"latin1_general_cs\">\r\n      <Charset>latin1</Charset>\r\n    </collation>\r\n    <collation id=\"89\" parent=\"1\" name=\"latin1_spanish_ci\">\r\n      <Charset>latin1</Charset>\r\n    </collation>\r\n    <collation id=\"90\" parent=\"1\" name=\"latin2_czech_cs\">\r\n      <Charset>latin2</Charset>\r\n    </collation>\r\n    <collation id=\"91\" parent=\"1\" name=\"latin2_general_ci\">\r\n      <Charset>latin2</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"92\" parent=\"1\" name=\"latin2_hungarian_ci\">\r\n      <Charset>latin2</Charset>\r\n    </collation>\r\n    <collation id=\"93\" parent=\"1\" name=\"latin2_croatian_ci\">\r\n      <Charset>latin2</Charset>\r\n    </collation>\r\n    <collation id=\"94\" parent=\"1\" name=\"latin2_bin\">\r\n      <Charset>latin2</Charset>\r\n    </collation>\r\n    <collation id=\"95\" parent=\"1\" name=\"latin5_turkish_ci\">\r\n      <Charset>latin5</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"96\" parent=\"1\" name=\"latin5_bin\">\r\n      <Charset>latin5</Charset>\r\n    </collation>\r\n    <collation id=\"97\" parent=\"1\" name=\"latin7_estonian_cs\">\r\n      <Charset>latin7</Charset>\r\n    </collation>\r\n    <collation id=\"98\" parent=\"1\" name=\"latin7_general_ci\">\r\n      <Charset>latin7</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"99\" parent=\"1\" name=\"latin7_general_cs\">\r\n      <Charset>latin7</Charset>\r\n    </collation>\r\n    <collation id=\"100\" parent=\"1\" name=\"latin7_bin\">\r\n      <Charset>latin7</Charset>\r\n    </collation>\r\n    <collation id=\"101\" parent=\"1\" name=\"macce_general_ci\">\r\n      <Charset>macce</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"102\" parent=\"1\" name=\"macce_bin\">\r\n      <Charset>macce</Charset>\r\n    </collation>\r\n    <collation id=\"103\" parent=\"1\" name=\"macroman_general_ci\">\r\n      <Charset>macroman</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"104\" parent=\"1\" name=\"macroman_bin\">\r\n      <Charset>macroman</Charset>\r\n    </collation>\r\n    <collation id=\"105\" parent=\"1\" name=\"sjis_japanese_ci\">\r\n      <Charset>sjis</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"106\" parent=\"1\" name=\"sjis_bin\">\r\n      <Charset>sjis</Charset>\r\n    </collation>\r\n    <collation id=\"107\" parent=\"1\" name=\"swe7_swedish_ci\">\r\n      <Charset>swe7</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"108\" parent=\"1\" name=\"swe7_bin\">\r\n      <Charset>swe7</Charset>\r\n    </collation>\r\n    <collation id=\"109\" parent=\"1\" name=\"tis620_thai_ci\">\r\n      <Charset>tis620</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"110\" parent=\"1\" name=\"tis620_bin\">\r\n      <Charset>tis620</Charset>\r\n    </collation>\r\n    <collation id=\"111\" parent=\"1\" name=\"ucs2_general_ci\">\r\n      <Charset>ucs2</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"112\" parent=\"1\" name=\"ucs2_bin\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"113\" parent=\"1\" name=\"ucs2_unicode_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"114\" parent=\"1\" name=\"ucs2_icelandic_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"115\" parent=\"1\" name=\"ucs2_latvian_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"116\" parent=\"1\" name=\"ucs2_romanian_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"117\" parent=\"1\" name=\"ucs2_slovenian_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"118\" parent=\"1\" name=\"ucs2_polish_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"119\" parent=\"1\" name=\"ucs2_estonian_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"120\" parent=\"1\" name=\"ucs2_spanish_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"121\" parent=\"1\" name=\"ucs2_swedish_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"122\" parent=\"1\" name=\"ucs2_turkish_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"123\" parent=\"1\" name=\"ucs2_czech_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"124\" parent=\"1\" name=\"ucs2_danish_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"125\" parent=\"1\" name=\"ucs2_lithuanian_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"126\" parent=\"1\" name=\"ucs2_slovak_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"127\" parent=\"1\" name=\"ucs2_spanish2_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"128\" parent=\"1\" name=\"ucs2_roman_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"129\" parent=\"1\" name=\"ucs2_persian_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"130\" parent=\"1\" name=\"ucs2_esperanto_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"131\" parent=\"1\" name=\"ucs2_hungarian_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"132\" parent=\"1\" name=\"ucs2_sinhala_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"133\" parent=\"1\" name=\"ucs2_german2_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"134\" parent=\"1\" name=\"ucs2_croatian_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"135\" parent=\"1\" name=\"ucs2_unicode_520_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"136\" parent=\"1\" name=\"ucs2_vietnamese_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"137\" parent=\"1\" name=\"ucs2_general_mysql500_ci\">\r\n      <Charset>ucs2</Charset>\r\n    </collation>\r\n    <collation id=\"138\" parent=\"1\" name=\"ujis_japanese_ci\">\r\n      <Charset>ujis</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"139\" parent=\"1\" name=\"ujis_bin\">\r\n      <Charset>ujis</Charset>\r\n    </collation>\r\n    <collation id=\"140\" parent=\"1\" name=\"utf16_general_ci\">\r\n      <Charset>utf16</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"141\" parent=\"1\" name=\"utf16_bin\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"142\" parent=\"1\" name=\"utf16_unicode_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"143\" parent=\"1\" name=\"utf16_icelandic_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"144\" parent=\"1\" name=\"utf16_latvian_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"145\" parent=\"1\" name=\"utf16_romanian_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"146\" parent=\"1\" name=\"utf16_slovenian_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"147\" parent=\"1\" name=\"utf16_polish_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"148\" parent=\"1\" name=\"utf16_estonian_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"149\" parent=\"1\" name=\"utf16_spanish_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"150\" parent=\"1\" name=\"utf16_swedish_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"151\" parent=\"1\" name=\"utf16_turkish_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"152\" parent=\"1\" name=\"utf16_czech_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"153\" parent=\"1\" name=\"utf16_danish_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"154\" parent=\"1\" name=\"utf16_lithuanian_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"155\" parent=\"1\" name=\"utf16_slovak_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"156\" parent=\"1\" name=\"utf16_spanish2_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"157\" parent=\"1\" name=\"utf16_roman_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"158\" parent=\"1\" name=\"utf16_persian_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"159\" parent=\"1\" name=\"utf16_esperanto_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"160\" parent=\"1\" name=\"utf16_hungarian_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"161\" parent=\"1\" name=\"utf16_sinhala_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"162\" parent=\"1\" name=\"utf16_german2_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"163\" parent=\"1\" name=\"utf16_croatian_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"164\" parent=\"1\" name=\"utf16_unicode_520_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"165\" parent=\"1\" name=\"utf16_vietnamese_ci\">\r\n      <Charset>utf16</Charset>\r\n    </collation>\r\n    <collation id=\"166\" parent=\"1\" name=\"utf16le_general_ci\">\r\n      <Charset>utf16le</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"167\" parent=\"1\" name=\"utf16le_bin\">\r\n      <Charset>utf16le</Charset>\r\n    </collation>\r\n    <collation id=\"168\" parent=\"1\" name=\"utf32_general_ci\">\r\n      <Charset>utf32</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"169\" parent=\"1\" name=\"utf32_bin\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"170\" parent=\"1\" name=\"utf32_unicode_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"171\" parent=\"1\" name=\"utf32_icelandic_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"172\" parent=\"1\" name=\"utf32_latvian_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"173\" parent=\"1\" name=\"utf32_romanian_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"174\" parent=\"1\" name=\"utf32_slovenian_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"175\" parent=\"1\" name=\"utf32_polish_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"176\" parent=\"1\" name=\"utf32_estonian_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"177\" parent=\"1\" name=\"utf32_spanish_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"178\" parent=\"1\" name=\"utf32_swedish_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"179\" parent=\"1\" name=\"utf32_turkish_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"180\" parent=\"1\" name=\"utf32_czech_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"181\" parent=\"1\" name=\"utf32_danish_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"182\" parent=\"1\" name=\"utf32_lithuanian_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"183\" parent=\"1\" name=\"utf32_slovak_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"184\" parent=\"1\" name=\"utf32_spanish2_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"185\" parent=\"1\" name=\"utf32_roman_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"186\" parent=\"1\" name=\"utf32_persian_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"187\" parent=\"1\" name=\"utf32_esperanto_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"188\" parent=\"1\" name=\"utf32_hungarian_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"189\" parent=\"1\" name=\"utf32_sinhala_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"190\" parent=\"1\" name=\"utf32_german2_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"191\" parent=\"1\" name=\"utf32_croatian_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"192\" parent=\"1\" name=\"utf32_unicode_520_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"193\" parent=\"1\" name=\"utf32_vietnamese_ci\">\r\n      <Charset>utf32</Charset>\r\n    </collation>\r\n    <collation id=\"194\" parent=\"1\" name=\"utf8_general_ci\">\r\n      <Charset>utf8</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"195\" parent=\"1\" name=\"utf8_tolower_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"196\" parent=\"1\" name=\"utf8_bin\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"197\" parent=\"1\" name=\"utf8_unicode_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"198\" parent=\"1\" name=\"utf8_icelandic_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"199\" parent=\"1\" name=\"utf8_latvian_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"200\" parent=\"1\" name=\"utf8_romanian_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"201\" parent=\"1\" name=\"utf8_slovenian_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"202\" parent=\"1\" name=\"utf8_polish_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"203\" parent=\"1\" name=\"utf8_estonian_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"204\" parent=\"1\" name=\"utf8_spanish_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"205\" parent=\"1\" name=\"utf8_swedish_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"206\" parent=\"1\" name=\"utf8_turkish_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"207\" parent=\"1\" name=\"utf8_czech_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"208\" parent=\"1\" name=\"utf8_danish_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"209\" parent=\"1\" name=\"utf8_lithuanian_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"210\" parent=\"1\" name=\"utf8_slovak_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"211\" parent=\"1\" name=\"utf8_spanish2_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"212\" parent=\"1\" name=\"utf8_roman_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"213\" parent=\"1\" name=\"utf8_persian_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"214\" parent=\"1\" name=\"utf8_esperanto_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"215\" parent=\"1\" name=\"utf8_hungarian_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"216\" parent=\"1\" name=\"utf8_sinhala_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"217\" parent=\"1\" name=\"utf8_german2_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"218\" parent=\"1\" name=\"utf8_croatian_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"219\" parent=\"1\" name=\"utf8_unicode_520_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"220\" parent=\"1\" name=\"utf8_vietnamese_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"221\" parent=\"1\" name=\"utf8_general_mysql500_ci\">\r\n      <Charset>utf8</Charset>\r\n    </collation>\r\n    <collation id=\"222\" parent=\"1\" name=\"utf8mb4_general_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"223\" parent=\"1\" name=\"utf8mb4_bin\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"224\" parent=\"1\" name=\"utf8mb4_unicode_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"225\" parent=\"1\" name=\"utf8mb4_icelandic_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"226\" parent=\"1\" name=\"utf8mb4_latvian_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"227\" parent=\"1\" name=\"utf8mb4_romanian_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"228\" parent=\"1\" name=\"utf8mb4_slovenian_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"229\" parent=\"1\" name=\"utf8mb4_polish_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"230\" parent=\"1\" name=\"utf8mb4_estonian_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"231\" parent=\"1\" name=\"utf8mb4_spanish_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"232\" parent=\"1\" name=\"utf8mb4_swedish_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"233\" parent=\"1\" name=\"utf8mb4_turkish_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"234\" parent=\"1\" name=\"utf8mb4_czech_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"235\" parent=\"1\" name=\"utf8mb4_danish_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"236\" parent=\"1\" name=\"utf8mb4_lithuanian_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"237\" parent=\"1\" name=\"utf8mb4_slovak_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"238\" parent=\"1\" name=\"utf8mb4_spanish2_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"239\" parent=\"1\" name=\"utf8mb4_roman_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"240\" parent=\"1\" name=\"utf8mb4_persian_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"241\" parent=\"1\" name=\"utf8mb4_esperanto_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"242\" parent=\"1\" name=\"utf8mb4_hungarian_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"243\" parent=\"1\" name=\"utf8mb4_sinhala_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"244\" parent=\"1\" name=\"utf8mb4_german2_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"245\" parent=\"1\" name=\"utf8mb4_croatian_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"246\" parent=\"1\" name=\"utf8mb4_unicode_520_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"247\" parent=\"1\" name=\"utf8mb4_vietnamese_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"248\" parent=\"1\" name=\"utf8mb4_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n      <DefaultForCharset>1</DefaultForCharset>\r\n    </collation>\r\n    <collation id=\"249\" parent=\"1\" name=\"utf8mb4_de_pb_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"250\" parent=\"1\" name=\"utf8mb4_is_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"251\" parent=\"1\" name=\"utf8mb4_lv_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"252\" parent=\"1\" name=\"utf8mb4_ro_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"253\" parent=\"1\" name=\"utf8mb4_sl_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"254\" parent=\"1\" name=\"utf8mb4_pl_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"255\" parent=\"1\" name=\"utf8mb4_et_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"256\" parent=\"1\" name=\"utf8mb4_es_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"257\" parent=\"1\" name=\"utf8mb4_sv_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"258\" parent=\"1\" name=\"utf8mb4_tr_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"259\" parent=\"1\" name=\"utf8mb4_cs_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"260\" parent=\"1\" name=\"utf8mb4_da_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"261\" parent=\"1\" name=\"utf8mb4_lt_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"262\" parent=\"1\" name=\"utf8mb4_sk_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"263\" parent=\"1\" name=\"utf8mb4_es_trad_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"264\" parent=\"1\" name=\"utf8mb4_la_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"265\" parent=\"1\" name=\"utf8mb4_eo_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"266\" parent=\"1\" name=\"utf8mb4_hu_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"267\" parent=\"1\" name=\"utf8mb4_hr_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"268\" parent=\"1\" name=\"utf8mb4_vi_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"269\" parent=\"1\" name=\"utf8mb4_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"270\" parent=\"1\" name=\"utf8mb4_de_pb_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"271\" parent=\"1\" name=\"utf8mb4_is_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"272\" parent=\"1\" name=\"utf8mb4_lv_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"273\" parent=\"1\" name=\"utf8mb4_ro_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"274\" parent=\"1\" name=\"utf8mb4_sl_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"275\" parent=\"1\" name=\"utf8mb4_pl_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"276\" parent=\"1\" name=\"utf8mb4_et_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"277\" parent=\"1\" name=\"utf8mb4_es_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"278\" parent=\"1\" name=\"utf8mb4_sv_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"279\" parent=\"1\" name=\"utf8mb4_tr_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"280\" parent=\"1\" name=\"utf8mb4_cs_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"281\" parent=\"1\" name=\"utf8mb4_da_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"282\" parent=\"1\" name=\"utf8mb4_lt_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"283\" parent=\"1\" name=\"utf8mb4_sk_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"284\" parent=\"1\" name=\"utf8mb4_es_trad_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"285\" parent=\"1\" name=\"utf8mb4_la_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"286\" parent=\"1\" name=\"utf8mb4_eo_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"287\" parent=\"1\" name=\"utf8mb4_hu_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"288\" parent=\"1\" name=\"utf8mb4_hr_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"289\" parent=\"1\" name=\"utf8mb4_vi_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"290\" parent=\"1\" name=\"utf8mb4_ja_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"291\" parent=\"1\" name=\"utf8mb4_ja_0900_as_cs_ks\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"292\" parent=\"1\" name=\"utf8mb4_0900_as_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"293\" parent=\"1\" name=\"utf8mb4_ru_0900_ai_ci\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"294\" parent=\"1\" name=\"utf8mb4_ru_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"295\" parent=\"1\" name=\"utf8mb4_zh_0900_as_cs\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <collation id=\"296\" parent=\"1\" name=\"utf8mb4_0900_bin\">\r\n      <Charset>utf8mb4</Charset>\r\n    </collation>\r\n    <user id=\"297\" parent=\"1\" name=\"ironhacker2\"/>\r\n    <user id=\"298\" parent=\"1\" name=\"ironhacker3\"/>\r\n    <user id=\"299\" parent=\"1\" name=\"coffee-tester\">\r\n      <Host>localhost</Host>\r\n      <Plugin>caching_sha2_password</Plugin>\r\n    </user>\r\n    <user id=\"300\" parent=\"1\" name=\"ironhacker\">\r\n      <Host>localhost</Host>\r\n      <Plugin>caching_sha2_password</Plugin>\r\n    </user>\r\n    <user id=\"301\" parent=\"1\" name=\"mysql.infoschema\">\r\n      <Host>localhost</Host>\r\n      <Plugin>caching_sha2_password</Plugin>\r\n    </user>\r\n    <user id=\"302\" parent=\"1\" name=\"mysql.session\">\r\n      <Host>localhost</Host>\r\n      <Plugin>caching_sha2_password</Plugin>\r\n    </user>\r\n    <user id=\"303\" parent=\"1\" name=\"mysql.sys\">\r\n      <Host>localhost</Host>\r\n      <Plugin>caching_sha2_password</Plugin>\r\n    </user>\r\n    <user id=\"304\" parent=\"1\" name=\"root\">\r\n      <Host>localhost</Host>\r\n      <Plugin>caching_sha2_password</Plugin>\r\n    </user>\r\n  </database-model>\r\n</dataSource>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources/adb525a7-5567-4813-866b-2abfd9c80c28.xml b/.idea/dataSources/adb525a7-5567-4813-866b-2abfd9c80c28.xml
--- a/.idea/dataSources/adb525a7-5567-4813-866b-2abfd9c80c28.xml	
+++ b/.idea/dataSources/adb525a7-5567-4813-866b-2abfd9c80c28.xml	
@@ -1241,5 +1241,355 @@
       <Host>localhost</Host>
       <Plugin>caching_sha2_password</Plugin>
     </user>
+    <table id="305" parent="2" name="account"/>
+    <table id="306" parent="2" name="account_contact_id_list"/>
+    <table id="307" parent="2" name="account_opportunity_id_list"/>
+    <table id="308" parent="2" name="account_report"/>
+    <table id="309" parent="2" name="contact_opportunity_id_list"/>
+    <table id="310" parent="2" name="contact_report"/>
+    <table id="311" parent="2" name="lead_report"/>
+    <table id="312" parent="2" name="leads"/>
+    <table id="313" parent="2" name="opportunity"/>
+    <table id="314" parent="2" name="opportunity_report"/>
+    <table id="315" parent="2" name="sales_rep"/>
+    <table id="316" parent="2" name="sales_rep_lead_id_list"/>
+    <table id="317" parent="2" name="sales_rep_opportunity_id_list"/>
+    <table id="318" parent="2" name="sales_rep_report"/>
+    <column id="319" parent="305" name="id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+      <SequenceIdentity>null</SequenceIdentity>
+    </column>
+    <column id="320" parent="305" name="city">
+      <Position>2</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="321" parent="305" name="country">
+      <Position>3</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="322" parent="305" name="employee_count">
+      <Position>4</Position>
+      <DataType>int|0s</DataType>
+    </column>
+    <column id="323" parent="305" name="industry">
+      <Position>5</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <key id="324" parent="305" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <ColNames>id</ColNames>
+      <Primary>1</Primary>
+    </key>
+    <column id="325" parent="306" name="account_id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+    </column>
+    <column id="326" parent="306" name="contact_id_list">
+      <Position>2</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <index id="327" parent="306" name="FKs5djik4jsr2ds3p2mqkacgwqo">
+      <ColNames>account_id</ColNames>
+      <Type>btree</Type>
+    </index>
+    <foreign-key id="328" parent="306" name="FKs5djik4jsr2ds3p2mqkacgwqo">
+      <ColNames>account_id</ColNames>
+      <RefTableName>account_report</RefTableName>
+      <RefColNames>id</RefColNames>
+    </foreign-key>
+    <column id="329" parent="307" name="account_id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+    </column>
+    <column id="330" parent="307" name="opportunity_id_list">
+      <Position>2</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <index id="331" parent="307" name="FKc7irfq0je6y71gwrtvk0yxuxa">
+      <ColNames>account_id</ColNames>
+      <Type>btree</Type>
+    </index>
+    <foreign-key id="332" parent="307" name="FKc7irfq0je6y71gwrtvk0yxuxa">
+      <ColNames>account_id</ColNames>
+      <RefTableName>account_report</RefTableName>
+      <RefColNames>id</RefColNames>
+    </foreign-key>
+    <column id="333" parent="308" name="id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+    </column>
+    <column id="334" parent="308" name="city">
+      <Position>2</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="335" parent="308" name="country">
+      <Position>3</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="336" parent="308" name="employee_count">
+      <Position>4</Position>
+      <DataType>int|0s</DataType>
+    </column>
+    <column id="337" parent="308" name="industry">
+      <Position>5</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <key id="338" parent="308" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <ColNames>id</ColNames>
+      <Primary>1</Primary>
+    </key>
+    <column id="339" parent="309" name="contact_id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+    </column>
+    <column id="340" parent="309" name="opportunity_id_list">
+      <Position>2</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <index id="341" parent="309" name="FK7al4sev05gr7m51eofhkb6kbm">
+      <ColNames>contact_id</ColNames>
+      <Type>btree</Type>
+    </index>
+    <foreign-key id="342" parent="309" name="FK7al4sev05gr7m51eofhkb6kbm">
+      <ColNames>contact_id</ColNames>
+      <RefTableName>contact_report</RefTableName>
+      <RefColNames>id</RefColNames>
+    </foreign-key>
+    <column id="343" parent="310" name="id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+    </column>
+    <column id="344" parent="310" name="account_id">
+      <Position>2</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <column id="345" parent="310" name="company_name">
+      <Position>3</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="346" parent="310" name="email">
+      <Position>4</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="347" parent="310" name="contact_name">
+      <Position>5</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="348" parent="310" name="phone_number">
+      <Position>6</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="349" parent="310" name="sales_rep_id">
+      <Position>7</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <key id="350" parent="310" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <ColNames>id</ColNames>
+      <Primary>1</Primary>
+    </key>
+    <column id="351" parent="311" name="id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+    </column>
+    <column id="352" parent="311" name="company_name">
+      <Position>2</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="353" parent="311" name="email">
+      <Position>3</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="354" parent="311" name="contact_name">
+      <Position>4</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="355" parent="311" name="phone_number">
+      <Position>5</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="356" parent="311" name="sales_rep_id">
+      <Position>6</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <key id="357" parent="311" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <ColNames>id</ColNames>
+      <Primary>1</Primary>
+    </key>
+    <column id="358" parent="312" name="id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+      <SequenceIdentity>null</SequenceIdentity>
+    </column>
+    <column id="359" parent="312" name="company_name">
+      <Position>2</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="360" parent="312" name="email">
+      <Position>3</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="361" parent="312" name="contact_name">
+      <Position>4</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="362" parent="312" name="phone_number">
+      <Position>5</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="363" parent="312" name="sales_id">
+      <Position>6</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <key id="364" parent="312" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <ColNames>id</ColNames>
+      <Primary>1</Primary>
+    </key>
+    <column id="365" parent="313" name="id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+      <SequenceIdentity>null</SequenceIdentity>
+    </column>
+    <column id="366" parent="313" name="account_id">
+      <Position>2</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <column id="367" parent="313" name="decision_maker_id">
+      <Position>3</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <column id="368" parent="313" name="product">
+      <Position>4</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="369" parent="313" name="quantity">
+      <Position>5</Position>
+      <DataType>int|0s</DataType>
+    </column>
+    <column id="370" parent="313" name="sales_rep_id">
+      <Position>6</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <column id="371" parent="313" name="status">
+      <Position>7</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <key id="372" parent="313" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <ColNames>id</ColNames>
+      <Primary>1</Primary>
+    </key>
+    <column id="373" parent="314" name="id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+    </column>
+    <column id="374" parent="314" name="account_id">
+      <Position>2</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <column id="375" parent="314" name="decision_maker_id">
+      <Position>3</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <column id="376" parent="314" name="product">
+      <Position>4</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <column id="377" parent="314" name="quantity">
+      <Position>5</Position>
+      <DataType>int|0s</DataType>
+    </column>
+    <column id="378" parent="314" name="sales_rep_id">
+      <Position>6</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <column id="379" parent="314" name="status">
+      <Position>7</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <key id="380" parent="314" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <ColNames>id</ColNames>
+      <Primary>1</Primary>
+    </key>
+    <column id="381" parent="315" name="id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+      <SequenceIdentity>null</SequenceIdentity>
+    </column>
+    <column id="382" parent="315" name="sales_rep_name">
+      <Position>2</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <key id="383" parent="315" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <ColNames>id</ColNames>
+      <Primary>1</Primary>
+    </key>
+    <column id="384" parent="316" name="sales_rep_id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+    </column>
+    <column id="385" parent="316" name="lead_id_list">
+      <Position>2</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <index id="386" parent="316" name="FK2tax4o183hpkmqcvfndt4byce">
+      <ColNames>sales_rep_id</ColNames>
+      <Type>btree</Type>
+    </index>
+    <foreign-key id="387" parent="316" name="FK2tax4o183hpkmqcvfndt4byce">
+      <ColNames>sales_rep_id</ColNames>
+      <RefTableName>sales_rep_report</RefTableName>
+      <RefColNames>id</RefColNames>
+    </foreign-key>
+    <column id="388" parent="317" name="sales_rep_id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+    </column>
+    <column id="389" parent="317" name="opportunity_id_list">
+      <Position>2</Position>
+      <DataType>bigint|0s</DataType>
+    </column>
+    <index id="390" parent="317" name="FKlxp4k7pn7wxdchi0qmofvk9cn">
+      <ColNames>sales_rep_id</ColNames>
+      <Type>btree</Type>
+    </index>
+    <foreign-key id="391" parent="317" name="FKlxp4k7pn7wxdchi0qmofvk9cn">
+      <ColNames>sales_rep_id</ColNames>
+      <RefTableName>sales_rep_report</RefTableName>
+      <RefColNames>id</RefColNames>
+    </foreign-key>
+    <column id="392" parent="318" name="id">
+      <Position>1</Position>
+      <DataType>bigint|0s</DataType>
+      <NotNull>1</NotNull>
+    </column>
+    <column id="393" parent="318" name="sales_rep_name">
+      <Position>2</Position>
+      <DataType>varchar(255)|0s</DataType>
+    </column>
+    <key id="394" parent="318" name="PRIMARY">
+      <NameSurrogate>1</NameSurrogate>
+      <ColNames>id</ColNames>
+      <Primary>1</Primary>
+    </key>
   </database-model>
 </dataSource>
\ No newline at end of file
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OppReportServiceProxy.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OppReportServiceProxy.java b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/OppReportServiceProxy.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OppReportServiceProxy.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/proxy/OppReportServiceProxy.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OppReportServiceProxy.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/OppReportServiceProxy.java	
@@ -1,6 +1,7 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.proxy;
+package com.ironhack.menuservice.proxy;
 
 import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.data.jdbc.repository.query.Query;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -45,9 +46,9 @@
     @GetMapping("/mean-product-quantity")
     Optional<Double> findMeanProductQuantity();
 
-//    // *** Median Report is needed JPQL can give list of all quantities in an ordered int array, needs a second step to find the median from this ***
-//    @Query("SELECT quantity FROM Opportunity order by quantity")
-//    int[]findMedianQuantityStep1();
+    // *** Median Report is needed JPQL can give list of all quantities in an ordered int array, needs a second step to find the median from this ***
+    @Query("SELECT quantity FROM Opportunity order by quantity")
+    int[]findMedianQuantityStep1();
 
     @GetMapping("/max-product-quantity")
     Optional<Integer> findMaxProductQuantity();
@@ -60,9 +61,10 @@
 //        return opportunityRepository.findMeanOpportunitiesPerAccount();
 //    }
 //
-////    // *** Median Report is needed JPQL can give list of all opportunitycounts in an ordered int array, needs a second step to find the median from this ***
-////    @Query(value = "select count(distinct id) as count_opportunity from opportunity group by account_id order by count_opportunity", nativeQuery = true)
-////    int[]findMedianOppsPerAccountStep1();
+    // *** Median Report is needed JPQL can give list of all opportunitycounts in an ordered int array, needs a second step to find the median from this ***
+
+    @GetMapping("/median-opportunities-account")
+    int[] findMedianOppsPerAccountStep1();
 //
 //    @GetMapping("max-opportunities-per-account")
 //    Optional<Double>findMaxOpportunitiesPerAccount(){
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/OpportunityReportMenu.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/OpportunityReportMenu.java b/Menu-service/src/main/java/com/ironhack/menuservice/menus/OpportunityReportMenu.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/OpportunityReportMenu.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/menus/OpportunityReportMenu.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/OpportunityReportMenu.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/menus/OpportunityReportMenu.java	
@@ -1,9 +1,9 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
+package com.ironhack.menuservice.menus;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Variables;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ReportCommands;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NoSuchValueException;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.OppReportServiceProxy;
+import com.ironhack.menuservice.dao.Variables;
+import com.ironhack.menuservice.enums.ReportCommands;
+import com.ironhack.menuservice.exceptions.NoSuchValueException;
+import com.ironhack.menuservice.proxy.OppReportServiceProxy;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
@@ -56,16 +56,16 @@
             } else {
                 switch (ReportCommands.getCommandType(input)){
                     case MEAN_OPPS_PERR_ACC:
-                        System.out.println("Average number of opportunities per account is: " + oppReportServiceProxy.findMeanOpportunitiesPerAccount().get());
+                        //System.out.println("Average number of opportunities per account is: " + oppReportServiceProxy.findMeanOpportunitiesPerAccount().get());
                         break;
                     case MED_OPPS_PERR_ACC:
                         System.out.println("Median number of opportunities per account is: " + getMedian(oppReportServiceProxy.findMedianOppsPerAccountStep1()));
                         break;
                     case MAX_OPPS_PERR_ACC:
-                        System.out.println("Maximum number of opportunities per account is: " + oppReportServiceProxy.findMaxOpportunitiesPerAccount().get());
+                        //System.out.println("Maximum number of opportunities per account is: " + oppReportServiceProxy.findMaxOpportunitiesPerAccount().get());
                         break;
                     case MIN_OPPS_PERR_ACC:
-                        System.out.println("Minimum number of opportunities per account is: " + oppReportServiceProxy.findMinOpportunitiesPerAccount().get());
+                        //System.out.println("Minimum number of opportunities per account is: " + oppReportServiceProxy.findMinOpportunitiesPerAccount().get());
                         break;
                     case BACK: reportMainMenu.reportMainMenu();
                     case MAIN_MENU: mainMenu.OS();
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabase.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabase.java b/Menu-service/src/main/java/com/ironhack/menuservice/dao/PopulateDatabase.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabase.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dao/PopulateDatabase.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabase.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dao/PopulateDatabase.java	
@@ -1,10 +1,15 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dao;
+package com.ironhack.menuservice.dao;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.ReportDBServiceProxy;
+import com.ironhack.menuservice.dto.AccountRequestDTO;
+import com.ironhack.menuservice.dto.ContactRequestDTO;
+import com.ironhack.menuservice.dto.LeadRequestDTO;
+import com.ironhack.menuservice.dto.OpportunityRequestDTO;
+import com.ironhack.menuservice.enums.Industry;
+import com.ironhack.menuservice.enums.Truck;
+import com.ironhack.menuservice.exceptions.EmailNotValidException;
+import com.ironhack.menuservice.exceptions.EmptyStringException;
+import com.ironhack.menuservice.exceptions.PhoneNumberContainsLettersException;
+import com.ironhack.menuservice.proxy.ReportDBServiceProxy;
 
 import java.util.List;
 
@@ -12,11 +17,11 @@
 
     private static ReportDBServiceProxy reportDBServiceProxy;
 
-    public static void populateDatabase() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
+    public static void populateDatabase() throws com.ironhack.menuservice.exceptions.NameContainsNumbersException, EmptyStringException, EmailNotValidException, com.ironhack.menuservice.exceptions.ExceedsMaxLength, PhoneNumberContainsLettersException, com.ironhack.menuservice.exceptions.InvalidCountryException {
 
-        List<SalesRepRequestDTO> salesRepRequestDTOList = List.of(
-                new SalesRepRequestDTO(1L, "David Lynch"),
-                new SalesRepRequestDTO(2L, "Martha Stewart")
+        List<com.ironhack.menuservice.dto.SalesRepRequestDTO> salesRepRequestDTOList = List.of(
+                new com.ironhack.menuservice.dto.SalesRepRequestDTO(1L, "David Lynch"),
+                new com.ironhack.menuservice.dto.SalesRepRequestDTO(2L, "Martha Stewart")
         );
 
         List<LeadRequestDTO>  leadRequestDTOList= List.of(
@@ -32,15 +37,15 @@
         );
 
         List<AccountRequestDTO> accountRequestDTOList = List.of(
-                new AccountRequestDTO(1L, Industry.PRODUCE, 50, "London", "UNITED KINGDOM"),
-                new AccountRequestDTO(2L, Industry.ECOMMERCE, 500, "Madrid", "SPAIN"),
-                new AccountRequestDTO(3L, Industry.MANUFACTURING, 20, "Paris", "FRANCE")
+                new AccountRequestDTO(1L, Industry.PRODUCE.name(), 50, "London", "UNITED KINGDOM"),
+                new AccountRequestDTO(2L, Industry.ECOMMERCE.name(), 500, "Madrid", "SPAIN"),
+                new AccountRequestDTO(3L, Industry.MANUFACTURING.name(), 20, "Paris", "FRANCE")
         );
 
         List<OpportunityRequestDTO> opportunityRequestDTOList = List.of(
-                new OpportunityRequestDTO(1L, Truck.FLATBED, 10, contactRequestDTOList.get(0).getId(), accountRequestDTOList.get(0).getId(),  salesRepRequestDTOList.get(0).getId()),
-                new OpportunityRequestDTO(2L, Truck.BOX, 1150, contactRequestDTOList.get(1).getId(), accountRequestDTOList.get(1).getId(), salesRepRequestDTOList.get(0).getId()),
-                new OpportunityRequestDTO(3L, Truck.HYBRID, 1, contactRequestDTOList.get(2).getId(), accountRequestDTOList.get(2).getId(), salesRepRequestDTOList.get(1).getId())
+                new OpportunityRequestDTO(1L, Truck.FLATBED, 10, contactRequestDTOList.get(0).getId(), accountRequestDTOList.get(0).getOpportunityId(),  salesRepRequestDTOList.get(0).getId()),
+                new OpportunityRequestDTO(2L, Truck.BOX, 1150, contactRequestDTOList.get(1).getId(), accountRequestDTOList.get(1).getOpportunityId(), salesRepRequestDTOList.get(0).getId()),
+                new OpportunityRequestDTO(3L, Truck.HYBRID, 1, contactRequestDTOList.get(2).getId(), accountRequestDTOList.get(2).getOpportunityId(), salesRepRequestDTOList.get(1).getId())
 
         );
 
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/SalesRepRequestDTORepositoryTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/SalesRepRequestDTORepositoryTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/repository/SalesRepRequestDTORepositoryTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/SalesRepRequestDTORepositoryTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/repository/SalesRepRequestDTORepositoryTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/SalesRepRequestDTORepositoryTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/repository/SalesRepRequestDTORepositoryTest.java	
@@ -1,49 +1,49 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.repository;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.SalesRepRequestDTO;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class SalesRepRequestDTORepositoryTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-
-    private List<SalesRepRequestDTO> salesRepRequestDTOS;
-
-    @BeforeEach
-    void setUp() {
-        salesRepRepository.deleteAll();
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Lynch"),
-                new SalesRepRequestDTO("Martha Stewart")
-        ));
-    }
-
-    @AfterEach
-    void tearDown() { ;
-        salesRepRepository.deleteAll();
-        salesRepRequestDTOS.clear();
-    }
-
-    @Test
-    void findAllSalesreps_shouldWork() {
-        var salesRepsCount = salesRepRepository.findAllSalesReps().size();
-        assertEquals(2, salesRepsCount);
-    }
-
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.repository;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.SalesRepRequestDTO;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class SalesRepRequestDTORepositoryTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//
+//    private List<SalesRepRequestDTO> salesRepRequestDTOS;
+//
+//    @BeforeEach
+//    void setUp() {
+//        salesRepRepository.deleteAll();
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Lynch"),
+//                new SalesRepRequestDTO("Martha Stewart")
+//        ));
+//    }
+//
+//    @AfterEach
+//    void tearDown() { ;
+//        salesRepRepository.deleteAll();
+//        salesRepRequestDTOS.clear();
+//    }
+//
+//    @Test
+//    void findAllSalesreps_shouldWork() {
+//        var salesRepsCount = salesRepRepository.findAllSalesReps().size();
+//        assertEquals(2, salesRepsCount);
+//    }
+//
+//
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/OpportunityRequestDTORepositoryTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/OpportunityRequestDTORepositoryTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/repository/OpportunityRequestDTORepositoryTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/OpportunityRequestDTORepositoryTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/repository/OpportunityRequestDTORepositoryTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/OpportunityRequestDTORepositoryTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/repository/OpportunityRequestDTORepositoryTest.java	
@@ -1,417 +1,417 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.repository;
-
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.AccountRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.ContactRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.OpportunityRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.SalesRepRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class OpportunityRequestDTORepositoryTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-
-    @Autowired
-    private ContactRepository contactRepository;
-
-    @Autowired
-    private AccountRepository accountRepository;
-
-    private List<SalesRepRequestDTO> salesRepRequestDTOS;
-    private List<ContactRequestDTO> contactRequestDTOS;
-    private List<OpportunityRequestDTO> opportunities;
-    private List<AccountRequestDTO> accountRequestDTOS;
-
-    @BeforeEach
-    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
-
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Lynch"),
-                new SalesRepRequestDTO("Martha Stewart")
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Doe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Martha Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
-                new ContactRequestDTO("George Truman", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0))  ,
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
-        ));
-
-        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
-        contactRepository.save(contactRequestDTOS.get(0));
-        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
-        contactRepository.save(contactRequestDTOS.get(1));
-        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
-        contactRepository.save(contactRequestDTOS.get(2));
-
-
-        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
-        opportunityRepository.save(opportunities.get(0));
-        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
-        opportunityRepository.save(opportunities.get(1));
-        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
-        opportunityRepository.save(opportunities.get(2));
-
-
-    }
-
-    @AfterEach
-    void tearDown() {
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-    }
-
-    @Test
-    void findOpportunityById_Test(){
-        var opportunity = opportunityRepository.findById(opportunities.get(1).getId());
-          assertEquals(1150, opportunity.get().getQuantity());
-    }
-
-    @Test
-    void findAllOpportunities_Test(){
-        var opportunityCount = opportunityRepository.findAllOpportunities().size();
-        assertEquals(3, opportunityCount);
-    }
-
-    @Test
-    void findCountOpportunityByRepName_Test() {
-        var leadByRep = opportunityRepository.findCountOpportunityByRepName();
-
-        assertEquals("David Lynch", leadByRep.get(0)[0]);
-        assertEquals("Martha Stewart", leadByRep.get(1)[0]);
-        assertEquals(1L, leadByRep.get(1)[1]);
-        assertEquals(2L,leadByRep.get(0)[1]);
-    }
-
-    @Test
-    void findCountOppForProduct_Test(){
-        var oppByProd = opportunityRepository.findCountOppForProduct();
-        assertEquals(Truck.BOX, oppByProd.get(0)[0]);
-        assertEquals(1L, oppByProd.get(0)[1]);
-        assertEquals(Truck.FLATBED, oppByProd.get(1)[0]);
-        assertEquals(1L, oppByProd.get(1)[1]);
-        assertEquals(Truck.HYBRID, oppByProd.get(2)[0]);
-        assertEquals(1L, oppByProd.get(2)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByRepNameForStatus_TestOpen(){
-        var oppByRepOpen = opportunityRepository.findCountOpportunityByRepNameForStatus(Status.OPEN.toString());
-        assertEquals("David Lynch", oppByRepOpen.get(0)[0]);
-        assertEquals("Martha Stewart", oppByRepOpen.get(1)[0]);
-        assertEquals(1L, oppByRepOpen.get(1)[1]);
-        assertEquals(2L,oppByRepOpen.get(0)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByRepNameForStatus_TestCloseWon(){
-
-        opportunities.get(0).setStatus(Status.CLOSED_WON);
-        opportunityRepository.save(opportunities.get(0));
-        var oppByRepCloseWon = opportunityRepository.findCountOpportunityByRepNameForStatus(Status.CLOSED_WON.toString());
-        assertEquals("David Lynch", oppByRepCloseWon.get(0)[0]);
-        assertEquals(1L,oppByRepCloseWon.get(0)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByRepNameForStatus_TestCloseLost(){
-        opportunities.get(0).setStatus(Status.CLOSED_LOST);
-        opportunityRepository.save(opportunities.get(0));
-        var oppByRepCloseLost = opportunityRepository.findCountOpportunityByRepNameForStatus(Status.CLOSED_LOST.toString());
-        assertEquals("David Lynch", oppByRepCloseLost.get(0)[0]);
-        assertEquals(1L,oppByRepCloseLost.get(0)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByProductForStatus_OPEN(){
-        var oppByProdOpen = opportunityRepository.findCountOpportunityByProductForStatus(Status.OPEN);
-        assertEquals(Truck.BOX, oppByProdOpen.get(0)[0]);
-        assertEquals(1L, oppByProdOpen.get(0)[1]);
-        assertEquals(Truck.FLATBED, oppByProdOpen.get(1)[0]);
-        assertEquals(1L, oppByProdOpen.get(1)[1]);
-        assertEquals(Truck.HYBRID, oppByProdOpen.get(2)[0]);
-        assertEquals(1L, oppByProdOpen.get(2)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByProductForStatus_CLOSED_WON(){
-        opportunities.get(0).setStatus(Status.CLOSED_WON);
-        opportunityRepository.save(opportunities.get(0));
-        var oppByProdCloseWon = opportunityRepository.findCountOpportunityByProductForStatus(Status.CLOSED_WON);
-        assertEquals(Truck.FLATBED, oppByProdCloseWon.get(0)[0]);
-        assertEquals(1L, oppByProdCloseWon.get(0)[1]);
-
-    }
-
-    @Test
-    void findCountOpportunityByProductForStatus_CLOSED_LOST(){
-        opportunities.get(0).setStatus(Status.CLOSED_LOST);
-        opportunityRepository.save(opportunities.get(0));
-        var oppByProdCloseWon = opportunityRepository.findCountOpportunityByProductForStatus(Status.CLOSED_LOST);
-        assertEquals(Truck.FLATBED, oppByProdCloseWon.get(0)[0]);
-        assertEquals(1L, oppByProdCloseWon.get(0)[1]);
-
-    }
-
-    @Test
-    void findCountOppForCountry_Test() {
-        var oppByCountry = opportunityRepository.findCountOppForCountry();
-        assertEquals("FRANCE", oppByCountry.get(0)[0]);
-        assertEquals("SPAIN", oppByCountry.get(1)[0]);
-        assertEquals("UNITED KINGDOM", oppByCountry.get(2)[0]);
-        assertEquals(1L, oppByCountry.get(0)[1]);
-        assertEquals(1L,oppByCountry.get(1)[1]);
-        assertEquals(1L,oppByCountry.get(2)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByCountryForStatus_Open_Test(){
-        var oppByCountryOpen = opportunityRepository.findCountOpportunityByCountryForStatus(Status.OPEN.toString());
-        assertEquals("FRANCE", oppByCountryOpen.get(0)[0]);
-        assertEquals("SPAIN", oppByCountryOpen.get(1)[0]);
-        assertEquals("UNITED KINGDOM", oppByCountryOpen.get(2)[0]);
-        assertEquals(1L, oppByCountryOpen.get(0)[1]);
-        assertEquals(1L,oppByCountryOpen.get(1)[1]);
-        assertEquals(1L,oppByCountryOpen.get(2)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByCountryForStatus_Close_Won_Test(){
-        opportunities.get(0).setStatus(Status.CLOSED_WON);
-        opportunityRepository.save(opportunities.get(0));
-        var oppByCountryCloseWon = opportunityRepository.findCountOpportunityByCountryForStatus(Status.CLOSED_WON.toString());
-        assertEquals("UNITED KINGDOM", oppByCountryCloseWon.get(0)[0]);
-        assertEquals(1L, oppByCountryCloseWon.get(0)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByCountryForStatus_Close_Lost_Test(){
-        opportunities.get(0).setStatus(Status.CLOSED_LOST);
-        opportunityRepository.save(opportunities.get(0));
-        var oppByCountryCloseLost = opportunityRepository.findCountOpportunityByCountryForStatus(Status.CLOSED_LOST.toString());
-        assertEquals("UNITED KINGDOM", oppByCountryCloseLost.get(0)[0]);
-        assertEquals(1L, oppByCountryCloseLost.get(0)[1]);
-
-    }
-
-    @Test
-    void findCountOppForCity_Test() {
-        var oppByCity = opportunityRepository.findCountOppForCity();
-        assertEquals("London", oppByCity.get(0)[0]);
-        assertEquals("Madrid", oppByCity.get(1)[0]);
-        assertEquals("Paris", oppByCity.get(2)[0]);
-        assertEquals(1L, oppByCity.get(0)[1]);
-        assertEquals(1L, oppByCity.get(1)[1]);
-        assertEquals(1L, oppByCity.get(2)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByCityForStatus_Open_Test(){
-        var oppByCityOpen = opportunityRepository.findCountOpportunityByCityForStatus(Status.OPEN.toString());
-        assertEquals("London", oppByCityOpen.get(0)[0]);
-        assertEquals("Madrid", oppByCityOpen.get(1)[0]);
-        assertEquals("Paris", oppByCityOpen.get(2)[0]);
-        assertEquals(1L, oppByCityOpen.get(0)[1]);
-        assertEquals(1L, oppByCityOpen.get(1)[1]);
-        assertEquals(1L, oppByCityOpen.get(2)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByCityForStatus_Close_Won_Test(){
-        opportunities.get(0).setStatus(Status.CLOSED_WON);
-        opportunityRepository.save(opportunities.get(0));
-        var oppByCityCloseWon = opportunityRepository.findCountOpportunityByCityForStatus(Status.CLOSED_WON.toString());
-        assertEquals("London", oppByCityCloseWon.get(0)[0]);
-        assertEquals(1L, oppByCityCloseWon.get(0)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByCityForStatus_Close_Lost_Test(){
-        opportunities.get(0).setStatus(Status.CLOSED_LOST);
-        opportunityRepository.save(opportunities.get(0));
-        var oppByCityCloseLost = opportunityRepository.findCountOpportunityByCityForStatus(Status.CLOSED_LOST.toString());
-        assertEquals("London", oppByCityCloseLost.get(0)[0]);
-        assertEquals(1L, oppByCityCloseLost.get(0)[1]);
-
-    }
-
-    @Test
-    void findCountOppForIndustry_Test() {
-        var oppByIndustry = opportunityRepository.findCountOppForIndustry();
-        assertEquals(Industry.ECOMMERCE, oppByIndustry.get(0)[0]);
-        assertEquals(Industry.MANUFACTURING, oppByIndustry.get(1)[0]);
-        assertEquals(Industry.PRODUCE, oppByIndustry.get(2)[0]);
-        assertEquals(1L, oppByIndustry.get(0)[1]);
-        assertEquals(1L, oppByIndustry.get(1)[1]);
-        assertEquals(1L, oppByIndustry.get(2)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByIndustryForStatus_Open_Test(){
-        var oppByIndustryOpen = opportunityRepository.findCountOpportunityByIndustryForStatus(Status.OPEN.toString());
-        assertEquals(Industry.ECOMMERCE, oppByIndustryOpen.get(0)[0]);
-        assertEquals(Industry.MANUFACTURING, oppByIndustryOpen.get(1)[0]);
-        assertEquals(Industry.PRODUCE, oppByIndustryOpen.get(2)[0]);
-        assertEquals(1L, oppByIndustryOpen.get(0)[1]);
-        assertEquals(1L, oppByIndustryOpen.get(1)[1]);
-        assertEquals(1L, oppByIndustryOpen.get(2)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByIndustryForStatus_Close_Won_Test(){
-        opportunities.get(0).setStatus(Status.CLOSED_WON);
-        opportunityRepository.save(opportunities.get(0));
-        var oppByIndustryCloseWon = opportunityRepository.findCountOpportunityByIndustryForStatus(Status.CLOSED_WON.toString());
-        assertEquals(Industry.PRODUCE, oppByIndustryCloseWon.get(0)[0]);
-        assertEquals(1L, oppByIndustryCloseWon.get(0)[1]);
-    }
-
-    @Test
-    void findCountOpportunityByIndustryForStatus_Close_Lost_Test(){
-        opportunities.get(0).setStatus(Status.CLOSED_LOST);
-        opportunityRepository.save(opportunities.get(0));
-        var oppByIndustryCloseLost = opportunityRepository.findCountOpportunityByIndustryForStatus(Status.CLOSED_LOST.toString());
-        assertEquals(Industry.PRODUCE, oppByIndustryCloseLost.get(0)[0]);
-        assertEquals(1L, oppByIndustryCloseLost.get(0)[1]);
-
-    }
-
-    @Test
-    void findMeanProductQuantity() {
-        var meanProductQuantity = opportunityRepository.findMeanProductQuantity();
-        assertEquals(387, meanProductQuantity.get().doubleValue());
-    }
-
-    @Test
-    void findMedianQuantityStep1_test(){
-        var medianQuantity = opportunityRepository.findMedianQuantityStep1();
-        assertEquals(3, medianQuantity.length);
-    }
-
-    @Test
-    void findMaxProductQuantity() {
-        var maxProductQuantity = opportunityRepository.findMaxProductQuantity();
-        assertEquals(1150, maxProductQuantity.get().intValue());
-    }
-
-
-
-    @Test
-    void findMinProductQuantity() {
-        var minProductQuantity = opportunityRepository.findMinProductQuantity();
-        assertEquals(1L, minProductQuantity.get().intValue());
-    }
-
-    @Test
-    void findMeanOpportunitiesPerAccount() throws NameContainsNumbersException, EmptyStringException, InvalidCountryException, ExceedsMaxLength {
-
-        var testOpp1 = new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0));
-        opportunityRepository.save(testOpp1);
-        var testOpp2 = new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0));
-        opportunityRepository.save(testOpp2);
-        var testOpp3 = new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1));
-        opportunityRepository.save(testOpp3);
-        var testAccount1 = new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0));
-        accountRepository.save(testAccount1);
-        testAccount1.addOpportunity(testOpp1);
-        testAccount1.addOpportunity(testOpp2);
-        testAccount1.addOpportunity(testOpp3);
-        accountRepository.save(testAccount1);
-        testOpp1.setAccountRequestDTO(testAccount1);
-        testOpp2.setAccountRequestDTO(testAccount1);
-        testOpp3.setAccountRequestDTO(testAccount1);
-        opportunityRepository.save(testOpp1);
-        opportunityRepository.save(testOpp2);
-        opportunityRepository.save(testOpp3);
-
-        var meanOppsPerAccount = opportunityRepository.findMeanOpportunitiesPerAccount();
-        assertEquals(1.5, meanOppsPerAccount.get().doubleValue());
-    }
-
-    @Test
-    void findMedianOppsPerAccountStep1_Test(){
-        var medianAccountsFirstStep = opportunityRepository.findMedianOppsPerAccountStep1();
-        assertEquals(3, medianAccountsFirstStep.length);
-    }
-
-    @Test
-    void findMaxOpportunitiesPerAccount() throws NameContainsNumbersException, EmptyStringException, InvalidCountryException, ExceedsMaxLength {
-        var testOpp1 = new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0));
-        var testOpp2 = new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0));
-        var testOpp3 = new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1));
-        var testAccount1 = new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0));
-        testAccount1.addOpportunity(testOpp1);
-        testAccount1.addOpportunity(testOpp2);
-        testAccount1.addOpportunity(testOpp3);
-        accountRepository.save(testAccount1);
-        testOpp1.setAccountRequestDTO(testAccount1);
-        testOpp2.setAccountRequestDTO(testAccount1);
-        testOpp3.setAccountRequestDTO(testAccount1);
-        opportunityRepository.save(testOpp1);
-        opportunityRepository.save(testOpp2);
-        opportunityRepository.save(testOpp3);
-
-        var maxOppsPerAccount = opportunityRepository.findMaxOpportunitiesPerAccount();
-        assertEquals(3, maxOppsPerAccount.get().doubleValue());
-    }
-
-    @Test
-    void findMinOpportunitiesPerAccount() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, InvalidCountryException {
-        var testOpp1 = new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0));
-        var testOpp2 = new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0));
-        var testOpp3 = new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1));
-        var testAccount1 = new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0));
-        testAccount1.addOpportunity(testOpp1);
-        testAccount1.addOpportunity(testOpp2);
-        testAccount1.addOpportunity(testOpp3);
-        accountRepository.save(testAccount1);
-        testOpp1.setAccountRequestDTO(testAccount1);
-        testOpp2.setAccountRequestDTO(testAccount1);
-        testOpp3.setAccountRequestDTO(testAccount1);
-        opportunityRepository.save(testOpp1);
-        opportunityRepository.save(testOpp2);
-        opportunityRepository.save(testOpp3);
-        var minOppsPerAccount = opportunityRepository.findMinOpportunitiesPerAccount();
-        assertEquals(1, minOppsPerAccount.get().doubleValue());
-    }
-
-
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.repository;
+//
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.AccountRequestDTO;
+//import com.ironhack.menuservice.dto.ContactRequestDTO;
+//import com.ironhack.menuservice.dto.OpportunityRequestDTO;
+//import com.ironhack.menuservice.dto.SalesRepRequestDTO;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Status;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class OpportunityRequestDTORepositoryTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//
+//    @Autowired
+//    private ContactRepository contactRepository;
+//
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    private List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    private List<ContactRequestDTO> contactRequestDTOS;
+//    private List<OpportunityRequestDTO> opportunities;
+//    private List<AccountRequestDTO> accountRequestDTOS;
+//
+//    @BeforeEach
+//    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
+//
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Lynch"),
+//                new SalesRepRequestDTO("Martha Stewart")
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Doe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Martha Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
+//                new ContactRequestDTO("George Truman", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0))  ,
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
+//        ));
+//
+//        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
+//        contactRepository.save(contactRequestDTOS.get(0));
+//        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
+//        contactRepository.save(contactRequestDTOS.get(1));
+//        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
+//        contactRepository.save(contactRequestDTOS.get(2));
+//
+//
+//        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
+//        opportunityRepository.save(opportunities.get(0));
+//        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
+//        opportunityRepository.save(opportunities.get(1));
+//        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
+//        opportunityRepository.save(opportunities.get(2));
+//
+//
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//    }
+//
+//    @Test
+//    void findOpportunityById_Test(){
+//        var opportunity = opportunityRepository.findById(opportunities.get(1).getId());
+//          assertEquals(1150, opportunity.get().getQuantity());
+//    }
+//
+//    @Test
+//    void findAllOpportunities_Test(){
+//        var opportunityCount = opportunityRepository.findAllOpportunities().size();
+//        assertEquals(3, opportunityCount);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByRepName_Test() {
+//        var leadByRep = opportunityRepository.findCountOpportunityByRepName();
+//
+//        assertEquals("David Lynch", leadByRep.get(0)[0]);
+//        assertEquals("Martha Stewart", leadByRep.get(1)[0]);
+//        assertEquals(1L, leadByRep.get(1)[1]);
+//        assertEquals(2L,leadByRep.get(0)[1]);
+//    }
+//
+//    @Test
+//    void findCountOppForProduct_Test(){
+//        var oppByProd = opportunityRepository.findCountOppForProduct();
+//        assertEquals(Truck.BOX, oppByProd.get(0)[0]);
+//        assertEquals(1L, oppByProd.get(0)[1]);
+//        assertEquals(Truck.FLATBED, oppByProd.get(1)[0]);
+//        assertEquals(1L, oppByProd.get(1)[1]);
+//        assertEquals(Truck.HYBRID, oppByProd.get(2)[0]);
+//        assertEquals(1L, oppByProd.get(2)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByRepNameForStatus_TestOpen(){
+//        var oppByRepOpen = opportunityRepository.findCountOpportunityByRepNameForStatus(Status.OPEN.toString());
+//        assertEquals("David Lynch", oppByRepOpen.get(0)[0]);
+//        assertEquals("Martha Stewart", oppByRepOpen.get(1)[0]);
+//        assertEquals(1L, oppByRepOpen.get(1)[1]);
+//        assertEquals(2L,oppByRepOpen.get(0)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByRepNameForStatus_TestCloseWon(){
+//
+//        opportunities.get(0).setStatus(Status.CLOSED_WON);
+//        opportunityRepository.save(opportunities.get(0));
+//        var oppByRepCloseWon = opportunityRepository.findCountOpportunityByRepNameForStatus(Status.CLOSED_WON.toString());
+//        assertEquals("David Lynch", oppByRepCloseWon.get(0)[0]);
+//        assertEquals(1L,oppByRepCloseWon.get(0)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByRepNameForStatus_TestCloseLost(){
+//        opportunities.get(0).setStatus(Status.CLOSED_LOST);
+//        opportunityRepository.save(opportunities.get(0));
+//        var oppByRepCloseLost = opportunityRepository.findCountOpportunityByRepNameForStatus(Status.CLOSED_LOST.toString());
+//        assertEquals("David Lynch", oppByRepCloseLost.get(0)[0]);
+//        assertEquals(1L,oppByRepCloseLost.get(0)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByProductForStatus_OPEN(){
+//        var oppByProdOpen = opportunityRepository.findCountOpportunityByProductForStatus(Status.OPEN);
+//        assertEquals(Truck.BOX, oppByProdOpen.get(0)[0]);
+//        assertEquals(1L, oppByProdOpen.get(0)[1]);
+//        assertEquals(Truck.FLATBED, oppByProdOpen.get(1)[0]);
+//        assertEquals(1L, oppByProdOpen.get(1)[1]);
+//        assertEquals(Truck.HYBRID, oppByProdOpen.get(2)[0]);
+//        assertEquals(1L, oppByProdOpen.get(2)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByProductForStatus_CLOSED_WON(){
+//        opportunities.get(0).setStatus(Status.CLOSED_WON);
+//        opportunityRepository.save(opportunities.get(0));
+//        var oppByProdCloseWon = opportunityRepository.findCountOpportunityByProductForStatus(Status.CLOSED_WON);
+//        assertEquals(Truck.FLATBED, oppByProdCloseWon.get(0)[0]);
+//        assertEquals(1L, oppByProdCloseWon.get(0)[1]);
+//
+//    }
+//
+//    @Test
+//    void findCountOpportunityByProductForStatus_CLOSED_LOST(){
+//        opportunities.get(0).setStatus(Status.CLOSED_LOST);
+//        opportunityRepository.save(opportunities.get(0));
+//        var oppByProdCloseWon = opportunityRepository.findCountOpportunityByProductForStatus(Status.CLOSED_LOST);
+//        assertEquals(Truck.FLATBED, oppByProdCloseWon.get(0)[0]);
+//        assertEquals(1L, oppByProdCloseWon.get(0)[1]);
+//
+//    }
+//
+//    @Test
+//    void findCountOppForCountry_Test() {
+//        var oppByCountry = opportunityRepository.findCountOppForCountry();
+//        assertEquals("FRANCE", oppByCountry.get(0)[0]);
+//        assertEquals("SPAIN", oppByCountry.get(1)[0]);
+//        assertEquals("UNITED KINGDOM", oppByCountry.get(2)[0]);
+//        assertEquals(1L, oppByCountry.get(0)[1]);
+//        assertEquals(1L,oppByCountry.get(1)[1]);
+//        assertEquals(1L,oppByCountry.get(2)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByCountryForStatus_Open_Test(){
+//        var oppByCountryOpen = opportunityRepository.findCountOpportunityByCountryForStatus(Status.OPEN.toString());
+//        assertEquals("FRANCE", oppByCountryOpen.get(0)[0]);
+//        assertEquals("SPAIN", oppByCountryOpen.get(1)[0]);
+//        assertEquals("UNITED KINGDOM", oppByCountryOpen.get(2)[0]);
+//        assertEquals(1L, oppByCountryOpen.get(0)[1]);
+//        assertEquals(1L,oppByCountryOpen.get(1)[1]);
+//        assertEquals(1L,oppByCountryOpen.get(2)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByCountryForStatus_Close_Won_Test(){
+//        opportunities.get(0).setStatus(Status.CLOSED_WON);
+//        opportunityRepository.save(opportunities.get(0));
+//        var oppByCountryCloseWon = opportunityRepository.findCountOpportunityByCountryForStatus(Status.CLOSED_WON.toString());
+//        assertEquals("UNITED KINGDOM", oppByCountryCloseWon.get(0)[0]);
+//        assertEquals(1L, oppByCountryCloseWon.get(0)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByCountryForStatus_Close_Lost_Test(){
+//        opportunities.get(0).setStatus(Status.CLOSED_LOST);
+//        opportunityRepository.save(opportunities.get(0));
+//        var oppByCountryCloseLost = opportunityRepository.findCountOpportunityByCountryForStatus(Status.CLOSED_LOST.toString());
+//        assertEquals("UNITED KINGDOM", oppByCountryCloseLost.get(0)[0]);
+//        assertEquals(1L, oppByCountryCloseLost.get(0)[1]);
+//
+//    }
+//
+//    @Test
+//    void findCountOppForCity_Test() {
+//        var oppByCity = opportunityRepository.findCountOppForCity();
+//        assertEquals("London", oppByCity.get(0)[0]);
+//        assertEquals("Madrid", oppByCity.get(1)[0]);
+//        assertEquals("Paris", oppByCity.get(2)[0]);
+//        assertEquals(1L, oppByCity.get(0)[1]);
+//        assertEquals(1L, oppByCity.get(1)[1]);
+//        assertEquals(1L, oppByCity.get(2)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByCityForStatus_Open_Test(){
+//        var oppByCityOpen = opportunityRepository.findCountOpportunityByCityForStatus(Status.OPEN.toString());
+//        assertEquals("London", oppByCityOpen.get(0)[0]);
+//        assertEquals("Madrid", oppByCityOpen.get(1)[0]);
+//        assertEquals("Paris", oppByCityOpen.get(2)[0]);
+//        assertEquals(1L, oppByCityOpen.get(0)[1]);
+//        assertEquals(1L, oppByCityOpen.get(1)[1]);
+//        assertEquals(1L, oppByCityOpen.get(2)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByCityForStatus_Close_Won_Test(){
+//        opportunities.get(0).setStatus(Status.CLOSED_WON);
+//        opportunityRepository.save(opportunities.get(0));
+//        var oppByCityCloseWon = opportunityRepository.findCountOpportunityByCityForStatus(Status.CLOSED_WON.toString());
+//        assertEquals("London", oppByCityCloseWon.get(0)[0]);
+//        assertEquals(1L, oppByCityCloseWon.get(0)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByCityForStatus_Close_Lost_Test(){
+//        opportunities.get(0).setStatus(Status.CLOSED_LOST);
+//        opportunityRepository.save(opportunities.get(0));
+//        var oppByCityCloseLost = opportunityRepository.findCountOpportunityByCityForStatus(Status.CLOSED_LOST.toString());
+//        assertEquals("London", oppByCityCloseLost.get(0)[0]);
+//        assertEquals(1L, oppByCityCloseLost.get(0)[1]);
+//
+//    }
+//
+//    @Test
+//    void findCountOppForIndustry_Test() {
+//        var oppByIndustry = opportunityRepository.findCountOppForIndustry();
+//        assertEquals(Industry.ECOMMERCE, oppByIndustry.get(0)[0]);
+//        assertEquals(Industry.MANUFACTURING, oppByIndustry.get(1)[0]);
+//        assertEquals(Industry.PRODUCE, oppByIndustry.get(2)[0]);
+//        assertEquals(1L, oppByIndustry.get(0)[1]);
+//        assertEquals(1L, oppByIndustry.get(1)[1]);
+//        assertEquals(1L, oppByIndustry.get(2)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByIndustryForStatus_Open_Test(){
+//        var oppByIndustryOpen = opportunityRepository.findCountOpportunityByIndustryForStatus(Status.OPEN.toString());
+//        assertEquals(Industry.ECOMMERCE, oppByIndustryOpen.get(0)[0]);
+//        assertEquals(Industry.MANUFACTURING, oppByIndustryOpen.get(1)[0]);
+//        assertEquals(Industry.PRODUCE, oppByIndustryOpen.get(2)[0]);
+//        assertEquals(1L, oppByIndustryOpen.get(0)[1]);
+//        assertEquals(1L, oppByIndustryOpen.get(1)[1]);
+//        assertEquals(1L, oppByIndustryOpen.get(2)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByIndustryForStatus_Close_Won_Test(){
+//        opportunities.get(0).setStatus(Status.CLOSED_WON);
+//        opportunityRepository.save(opportunities.get(0));
+//        var oppByIndustryCloseWon = opportunityRepository.findCountOpportunityByIndustryForStatus(Status.CLOSED_WON.toString());
+//        assertEquals(Industry.PRODUCE, oppByIndustryCloseWon.get(0)[0]);
+//        assertEquals(1L, oppByIndustryCloseWon.get(0)[1]);
+//    }
+//
+//    @Test
+//    void findCountOpportunityByIndustryForStatus_Close_Lost_Test(){
+//        opportunities.get(0).setStatus(Status.CLOSED_LOST);
+//        opportunityRepository.save(opportunities.get(0));
+//        var oppByIndustryCloseLost = opportunityRepository.findCountOpportunityByIndustryForStatus(Status.CLOSED_LOST.toString());
+//        assertEquals(Industry.PRODUCE, oppByIndustryCloseLost.get(0)[0]);
+//        assertEquals(1L, oppByIndustryCloseLost.get(0)[1]);
+//
+//    }
+//
+//    @Test
+//    void findMeanProductQuantity() {
+//        var meanProductQuantity = opportunityRepository.findMeanProductQuantity();
+//        assertEquals(387, meanProductQuantity.get().doubleValue());
+//    }
+//
+//    @Test
+//    void findMedianQuantityStep1_test(){
+//        var medianQuantity = opportunityRepository.findMedianQuantityStep1();
+//        assertEquals(3, medianQuantity.length);
+//    }
+//
+//    @Test
+//    void findMaxProductQuantity() {
+//        var maxProductQuantity = opportunityRepository.findMaxProductQuantity();
+//        assertEquals(1150, maxProductQuantity.get().intValue());
+//    }
+//
+//
+//
+//    @Test
+//    void findMinProductQuantity() {
+//        var minProductQuantity = opportunityRepository.findMinProductQuantity();
+//        assertEquals(1L, minProductQuantity.get().intValue());
+//    }
+//
+//    @Test
+//    void findMeanOpportunitiesPerAccount() throws NameContainsNumbersException, EmptyStringException, InvalidCountryException, ExceedsMaxLength {
+//
+//        var testOpp1 = new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0));
+//        opportunityRepository.save(testOpp1);
+//        var testOpp2 = new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0));
+//        opportunityRepository.save(testOpp2);
+//        var testOpp3 = new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1));
+//        opportunityRepository.save(testOpp3);
+//        var testAccount1 = new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0));
+//        accountRepository.save(testAccount1);
+//        testAccount1.addOpportunity(testOpp1);
+//        testAccount1.addOpportunity(testOpp2);
+//        testAccount1.addOpportunity(testOpp3);
+//        accountRepository.save(testAccount1);
+//        testOpp1.setAccountRequestDTO(testAccount1);
+//        testOpp2.setAccountRequestDTO(testAccount1);
+//        testOpp3.setAccountRequestDTO(testAccount1);
+//        opportunityRepository.save(testOpp1);
+//        opportunityRepository.save(testOpp2);
+//        opportunityRepository.save(testOpp3);
+//
+//        var meanOppsPerAccount = opportunityRepository.findMeanOpportunitiesPerAccount();
+//        assertEquals(1.5, meanOppsPerAccount.get().doubleValue());
+//    }
+//
+//    @Test
+//    void findMedianOppsPerAccountStep1_Test(){
+//        var medianAccountsFirstStep = opportunityRepository.findMedianOppsPerAccountStep1();
+//        assertEquals(3, medianAccountsFirstStep.length);
+//    }
+//
+//    @Test
+//    void findMaxOpportunitiesPerAccount() throws NameContainsNumbersException, EmptyStringException, InvalidCountryException, ExceedsMaxLength {
+//        var testOpp1 = new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0));
+//        var testOpp2 = new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0));
+//        var testOpp3 = new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1));
+//        var testAccount1 = new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0));
+//        testAccount1.addOpportunity(testOpp1);
+//        testAccount1.addOpportunity(testOpp2);
+//        testAccount1.addOpportunity(testOpp3);
+//        accountRepository.save(testAccount1);
+//        testOpp1.setAccountRequestDTO(testAccount1);
+//        testOpp2.setAccountRequestDTO(testAccount1);
+//        testOpp3.setAccountRequestDTO(testAccount1);
+//        opportunityRepository.save(testOpp1);
+//        opportunityRepository.save(testOpp2);
+//        opportunityRepository.save(testOpp3);
+//
+//        var maxOppsPerAccount = opportunityRepository.findMaxOpportunitiesPerAccount();
+//        assertEquals(3, maxOppsPerAccount.get().doubleValue());
+//    }
+//
+//    @Test
+//    void findMinOpportunitiesPerAccount() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, InvalidCountryException {
+//        var testOpp1 = new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0));
+//        var testOpp2 = new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0));
+//        var testOpp3 = new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1));
+//        var testAccount1 = new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0));
+//        testAccount1.addOpportunity(testOpp1);
+//        testAccount1.addOpportunity(testOpp2);
+//        testAccount1.addOpportunity(testOpp3);
+//        accountRepository.save(testAccount1);
+//        testOpp1.setAccountRequestDTO(testAccount1);
+//        testOpp2.setAccountRequestDTO(testAccount1);
+//        testOpp3.setAccountRequestDTO(testAccount1);
+//        opportunityRepository.save(testOpp1);
+//        opportunityRepository.save(testOpp2);
+//        opportunityRepository.save(testOpp3);
+//        var minOppsPerAccount = opportunityRepository.findMinOpportunitiesPerAccount();
+//        assertEquals(1, minOppsPerAccount.get().doubleValue());
+//    }
+//
+//
+//
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/QuantityReportMenuTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/QuantityReportMenuTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/menus/QuantityReportMenuTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/QuantityReportMenuTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/menus/QuantityReportMenuTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/QuantityReportMenuTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/menus/QuantityReportMenuTest.java	
@@ -1,141 +1,141 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.awt.*;
-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.io.InputStream;
-import java.io.PrintStream;
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class QuantityReportMenuTest {
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private LeadRepository leadRepository;
-    @Autowired
-    private ContactRepository contactRepository;
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-    @Autowired
-    private AccountRepository accountRepository;
-
-    @Autowired
-    private QuantityReportMenu test;
-
-    String colorMain = "\033[0;33m";
-    String colorMainBold = "\033[1;37m";
-    String colorHeadline = "\033[0;34m";
-    String colorHeadlineBold = "\033[1;34m";
-    String colorTable = "\033[1;32m";
-    String reset = "\u001B[0m";
-    String os = System.getProperty("os.name").toLowerCase();
-
-    List<SalesRepRequestDTO> salesRepRequestDTOS;
-    List<LeadRequestDTO> leadRequestDTOS;
-    List<ContactRequestDTO> contactRequestDTOS;
-    List<OpportunityRequestDTO> opportunities;
-    List<AccountRequestDTO> accountRequestDTOS;
-    String expectedOutput;
-
-    @BeforeEach
-    void setUp() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, InvalidCountryException, EmailNotValidException, PhoneNumberContainsLettersException {
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Brown")
-        ));
-
-        leadRequestDTOS = leadRepository.saveAll(List.of(
-                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(0))
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(0))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
-        ));
-
-        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
-        contactRepository.save(contactRequestDTOS.get(0));
-        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
-        contactRepository.save(contactRequestDTOS.get(1));
-        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
-        contactRepository.save(contactRequestDTOS.get(2));
-
-        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
-        opportunityRepository.save(opportunities.get(0));
-        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
-        opportunityRepository.save(opportunities.get(1));
-        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
-        opportunityRepository.save(opportunities.get(2));
-    }
-
-    @AfterEach
-    void tearDown() {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-    }
-
-
-    @Test
-    void quantityReportMenu() throws NoSuchValueException, AWTException {
-
-        String data = "mean quantity \n\n";
-
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.quantityReportMenu();
-            assertTrue(outContent.toString().contains("Average quantity of trucks is: "));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void getMedian() {
-        int[] intArray = {2,4};
-        int result = test.getMedian(intArray);
-        assertEquals(3, result);
-    }
-}
\ No newline at end of file
+//package com.ironhack.menuservice.menus;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.*;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.awt.*;
+//import java.io.ByteArrayInputStream;
+//import java.io.ByteArrayOutputStream;
+//import java.io.InputStream;
+//import java.io.PrintStream;
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class QuantityReportMenuTest {
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//    @Autowired
+//    private ContactRepository contactRepository;
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    @Autowired
+//    private QuantityReportMenu test;
+//
+//    String colorMain = "\033[0;33m";
+//    String colorMainBold = "\033[1;37m";
+//    String colorHeadline = "\033[0;34m";
+//    String colorHeadlineBold = "\033[1;34m";
+//    String colorTable = "\033[1;32m";
+//    String reset = "\u001B[0m";
+//    String os = System.getProperty("os.name").toLowerCase();
+//
+//    List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    List<LeadRequestDTO> leadRequestDTOS;
+//    List<ContactRequestDTO> contactRequestDTOS;
+//    List<OpportunityRequestDTO> opportunities;
+//    List<AccountRequestDTO> accountRequestDTOS;
+//    String expectedOutput;
+//
+//    @BeforeEach
+//    void setUp() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, InvalidCountryException, EmailNotValidException, PhoneNumberContainsLettersException {
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Brown")
+//        ));
+//
+//        leadRequestDTOS = leadRepository.saveAll(List.of(
+//                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(0))
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
+//        ));
+//
+//        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
+//        contactRepository.save(contactRequestDTOS.get(0));
+//        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
+//        contactRepository.save(contactRequestDTOS.get(1));
+//        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
+//        contactRepository.save(contactRequestDTOS.get(2));
+//
+//        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
+//        opportunityRepository.save(opportunities.get(0));
+//        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
+//        opportunityRepository.save(opportunities.get(1));
+//        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
+//        opportunityRepository.save(opportunities.get(2));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//    }
+//
+//
+//    @Test
+//    void quantityReportMenu() throws NoSuchValueException, AWTException {
+//
+//        String data = "mean quantity \n\n";
+//
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.quantityReportMenu();
+//            assertTrue(outContent.toString().contains("Average quantity of trucks is: "));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void getMedian() {
+//        int[] intArray = {2,4};
+//        int result = test.getMedian(intArray);
+//        assertEquals(3, result);
+//    }
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ProductReportMenuTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ProductReportMenuTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/menus/ProductReportMenuTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ProductReportMenuTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/menus/ProductReportMenuTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ProductReportMenuTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/menus/ProductReportMenuTest.java	
@@ -1,186 +1,186 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.awt.*;
-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.io.InputStream;
-import java.io.PrintStream;
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class ProductReportMenuTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private LeadRepository leadRepository;
-    @Autowired
-    private ContactRepository contactRepository;
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-    @Autowired
-    private AccountRepository accountRepository;
-
-    @Autowired
-    private ProductReportMenu test;
-
-    List<SalesRepRequestDTO> salesRepRequestDTOS;
-    List<LeadRequestDTO> leadRequestDTOS;
-    List<ContactRequestDTO> contactRequestDTOS;
-    List<OpportunityRequestDTO> opportunities;
-    List<AccountRequestDTO> accountRequestDTOS;
-    String expectedOutput;
-
-    @BeforeEach
-    public void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Brown"),
-                new SalesRepRequestDTO("Marta Stewart")
-        ));
-
-        leadRequestDTOS = leadRepository.saveAll(List.of(
-                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(1))
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
-                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
-        ));
-
-        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
-        contactRepository.save(contactRequestDTOS.get(0));
-        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
-        contactRepository.save(contactRequestDTOS.get(1));
-        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
-        contactRepository.save(contactRequestDTOS.get(2));
-
-        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
-        opportunityRepository.save(opportunities.get(0));
-        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
-        opportunityRepository.save(opportunities.get(1));
-        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
-        opportunityRepository.save(opportunities.get(2));
-    }
-
-    @AfterEach
-    void tearDown() {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-    }
-
-    @Test
-    void productReportMenu_OppByProduct() throws NoSuchValueException, AWTException {
-        String data = "report opportunity by product \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.productReportMenu();
-            assertTrue(outContent.toString().contains("BOX"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void productReportMenu_OppByProductOpen() throws NoSuchValueException, AWTException {
-        String data = "report open by product \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.productReportMenu();
-            assertTrue(outContent.toString().contains("BOX"));
-            assertTrue(outContent.toString().contains("FLATBED"));
-            assertTrue(outContent.toString().contains("HYBRID"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void productReportMenu_OppByProductWon() throws NoSuchValueException, AWTException {
-        opportunities.get(0).setStatus(Status.CLOSED_WON);
-        opportunityRepository.save(opportunities.get(0));
-        String data = "report closed-won by product \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.productReportMenu();
-            assertTrue(outContent.toString().contains("FLATBED"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void productReportMenu_OppByProductLost() throws NoSuchValueException, AWTException {
-        opportunities.get(1).setStatus(Status.CLOSED_LOST);
-        opportunityRepository.save(opportunities.get(1));
-        String data = "report closed-lost by product \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.productReportMenu();
-            assertTrue(outContent.toString().contains("BOX"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-}
\ No newline at end of file
+//package com.ironhack.menuservice.menus;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.*;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Status;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.awt.*;
+//import java.io.ByteArrayInputStream;
+//import java.io.ByteArrayOutputStream;
+//import java.io.InputStream;
+//import java.io.PrintStream;
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class ProductReportMenuTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//    @Autowired
+//    private ContactRepository contactRepository;
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    @Autowired
+//    private ProductReportMenu test;
+//
+//    List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    List<LeadRequestDTO> leadRequestDTOS;
+//    List<ContactRequestDTO> contactRequestDTOS;
+//    List<OpportunityRequestDTO> opportunities;
+//    List<AccountRequestDTO> accountRequestDTOS;
+//    String expectedOutput;
+//
+//    @BeforeEach
+//    public void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Brown"),
+//                new SalesRepRequestDTO("Marta Stewart")
+//        ));
+//
+//        leadRequestDTOS = leadRepository.saveAll(List.of(
+//                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(1))
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
+//                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
+//        ));
+//
+//        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
+//        contactRepository.save(contactRequestDTOS.get(0));
+//        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
+//        contactRepository.save(contactRequestDTOS.get(1));
+//        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
+//        contactRepository.save(contactRequestDTOS.get(2));
+//
+//        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
+//        opportunityRepository.save(opportunities.get(0));
+//        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
+//        opportunityRepository.save(opportunities.get(1));
+//        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
+//        opportunityRepository.save(opportunities.get(2));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//    }
+//
+//    @Test
+//    void productReportMenu_OppByProduct() throws NoSuchValueException, AWTException {
+//        String data = "report opportunity by product \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.productReportMenu();
+//            assertTrue(outContent.toString().contains("BOX"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void productReportMenu_OppByProductOpen() throws NoSuchValueException, AWTException {
+//        String data = "report open by product \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.productReportMenu();
+//            assertTrue(outContent.toString().contains("BOX"));
+//            assertTrue(outContent.toString().contains("FLATBED"));
+//            assertTrue(outContent.toString().contains("HYBRID"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void productReportMenu_OppByProductWon() throws NoSuchValueException, AWTException {
+//        opportunities.get(0).setStatus(Status.CLOSED_WON);
+//        opportunityRepository.save(opportunities.get(0));
+//        String data = "report closed-won by product \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.productReportMenu();
+//            assertTrue(outContent.toString().contains("FLATBED"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void productReportMenu_OppByProductLost() throws NoSuchValueException, AWTException {
+//        opportunities.get(1).setStatus(Status.CLOSED_LOST);
+//        opportunityRepository.save(opportunities.get(1));
+//        String data = "report closed-lost by product \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.productReportMenu();
+//            assertTrue(outContent.toString().contains("BOX"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/OpportunityRequestDTOReportMenuTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/OpportunityRequestDTOReportMenuTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/menus/OpportunityRequestDTOReportMenuTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/OpportunityRequestDTOReportMenuTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/menus/OpportunityRequestDTOReportMenuTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/OpportunityRequestDTOReportMenuTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/menus/OpportunityRequestDTOReportMenuTest.java	
@@ -1,177 +1,177 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.awt.*;
-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.io.InputStream;
-import java.io.PrintStream;
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class OpportunityRequestDTOReportMenuTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private LeadRepository leadRepository;
-    @Autowired
-    private ContactRepository contactRepository;
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-    @Autowired
-    private AccountRepository accountRepository;
-
-    @Autowired
-    private OpportunityReportMenu test;
-
-
-    List<SalesRepRequestDTO> salesRepRequestDTOS;
-    List<LeadRequestDTO> leadRequestDTOS;
-    List<ContactRequestDTO> contactRequestDTOS;
-    List<OpportunityRequestDTO> opportunities;
-    List<AccountRequestDTO> accountRequestDTOS;
-    String expectedOutput;
-
-    @BeforeEach
-    public void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Brown"),
-                new SalesRepRequestDTO("Marta Stewart")
-        ));
-
-        leadRequestDTOS = leadRepository.saveAll(List.of(
-                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(1))
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
-                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
-        ));
-
-        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
-        contactRepository.save(contactRequestDTOS.get(0));
-        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
-        contactRepository.save(contactRequestDTOS.get(1));
-        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
-        contactRepository.save(contactRequestDTOS.get(2));
-
-        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
-        opportunityRepository.save(opportunities.get(0));
-        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
-        opportunityRepository.save(opportunities.get(1));
-        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
-        opportunityRepository.save(opportunities.get(2));
-    }
-
-    @AfterEach
-    void tearDown() {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-    }
-
-    @Test
-    void opportunityReportMenu_GetAverage() throws NoSuchValueException, AWTException {
-        String data = "mean opps per account \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.opportunityReportMenu();
-            assertTrue(outContent.toString().contains("Average number of opportunities per account is: 1"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void opportunityReportMenu_GetMedian() throws NoSuchValueException, AWTException {
-        String data = "median opps per account \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.opportunityReportMenu();
-            assertTrue(outContent.toString().contains("Median number of opportunities per account is: 1"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void opportunityReportMenu_GetMax() throws NoSuchValueException, AWTException {
-        String data = "max opps per account \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.opportunityReportMenu();
-            assertTrue(outContent.toString().contains("Maximum number of opportunities per account is: 1"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void opportunityReportMenu_GetMin() throws NoSuchValueException, AWTException {
-        String data = "min opps per account \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.opportunityReportMenu();
-            assertTrue(outContent.toString().contains("Minimum number of opportunities per account is: 1"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.menus;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.*;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.awt.*;
+//import java.io.ByteArrayInputStream;
+//import java.io.ByteArrayOutputStream;
+//import java.io.InputStream;
+//import java.io.PrintStream;
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class OpportunityRequestDTOReportMenuTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//    @Autowired
+//    private ContactRepository contactRepository;
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    @Autowired
+//    private OpportunityReportMenu test;
+//
+//
+//    List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    List<LeadRequestDTO> leadRequestDTOS;
+//    List<ContactRequestDTO> contactRequestDTOS;
+//    List<OpportunityRequestDTO> opportunities;
+//    List<AccountRequestDTO> accountRequestDTOS;
+//    String expectedOutput;
+//
+//    @BeforeEach
+//    public void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Brown"),
+//                new SalesRepRequestDTO("Marta Stewart")
+//        ));
+//
+//        leadRequestDTOS = leadRepository.saveAll(List.of(
+//                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(1))
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
+//                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
+//        ));
+//
+//        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
+//        contactRepository.save(contactRequestDTOS.get(0));
+//        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
+//        contactRepository.save(contactRequestDTOS.get(1));
+//        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
+//        contactRepository.save(contactRequestDTOS.get(2));
+//
+//        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
+//        opportunityRepository.save(opportunities.get(0));
+//        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
+//        opportunityRepository.save(opportunities.get(1));
+//        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
+//        opportunityRepository.save(opportunities.get(2));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//    }
+//
+//    @Test
+//    void opportunityReportMenu_GetAverage() throws NoSuchValueException, AWTException {
+//        String data = "mean opps per account \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.opportunityReportMenu();
+//            assertTrue(outContent.toString().contains("Average number of opportunities per account is: 1"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void opportunityReportMenu_GetMedian() throws NoSuchValueException, AWTException {
+//        String data = "median opps per account \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.opportunityReportMenu();
+//            assertTrue(outContent.toString().contains("Median number of opportunities per account is: 1"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void opportunityReportMenu_GetMax() throws NoSuchValueException, AWTException {
+//        String data = "max opps per account \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.opportunityReportMenu();
+//            assertTrue(outContent.toString().contains("Maximum number of opportunities per account is: 1"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void opportunityReportMenu_GetMin() throws NoSuchValueException, AWTException {
+//        String data = "min opps per account \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.opportunityReportMenu();
+//            assertTrue(outContent.toString().contains("Minimum number of opportunities per account is: 1"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenuTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenuTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/menus/MainMenuTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenuTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/menus/MainMenuTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenuTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/menus/MainMenuTest.java	
@@ -1,393 +1,393 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import static org.junit.jupiter.api.Assertions.*;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-
-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.io.InputStream;
-import java.io.PrintStream;
-import java.util.List;
-import java.util.NoSuchElementException;
-
-@SpringBootTest
-class MainMenuTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application application;
-
-    @Autowired
-    private MainMenu test;
-
-    @Autowired
-    private LeadRepository leadRepository;
-    @Autowired
-    private ContactRepository contactRepository;
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-    @Autowired
-    private AccountRepository accountRepository;
-
-    String colorMain = "\033[0;33m";
-    String colorMainBold = "\033[1;37m";
-    String colorHeadline = "\033[0;34m";
-    String colorHeadlineBold = "\033[1;34m";
-    String colorTable = "\033[1;32m";
-    String reset = "\u001B[0m";
-    String os = System.getProperty("os.name").toLowerCase();
-    String expectedOutput;
-    List<SalesRepRequestDTO> salesRepRequestDTOS;
-    List<LeadRequestDTO> leadRequestDTOS;
-    List<ContactRequestDTO> contactRequestDTOS;
-    List<OpportunityRequestDTO> opportunities;
-    List<AccountRequestDTO> accountRequestDTOS;
-
-
-    @BeforeEach
-    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException, ExceedsMaxLength, InvalidCountryException, IdContainsLettersException {
-
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Lynch"),
-                new SalesRepRequestDTO("Martha Stewart")
-        ));
-
-       leadRequestDTOS = leadRepository.saveAll(List.of(
-                new LeadRequestDTO("Sebastian Marek Labedz", "123456789", "labedzsebastian@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Lee Dawson", "980651164", "ld@gmail.com", "LeeD", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Natalia Shilyaeva", "563782789", "nattyshil@yahoo.com", "Nathy From Wonderland", salesRepRequestDTOS.get(1))
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Doe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Martha Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
-                new ContactRequestDTO("George Truman", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
-        ));
-
-        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
-        contactRepository.save(contactRequestDTOS.get(0));
-        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
-        contactRepository.save(contactRequestDTOS.get(1));
-        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
-        contactRepository.save(contactRequestDTOS.get(2));
-
-        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
-        opportunityRepository.save(opportunities.get(0));
-        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
-        opportunityRepository.save(opportunities.get(1));
-        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
-        opportunityRepository.save(opportunities.get(2));
-    }
-
-    @AfterEach
-    void tearDown() {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-
-    }
-
-    @Test
-    void testNewLeadPositive() {
-        String data = "y \n Nathan \n 0028263 \n 122@gmail.com \n Santander \n " + salesRepRequestDTOS.get(0).getId() + "\n"; // Used to simulate user input
-        InputStream stdin = System.in; // Used to store default System.in
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes())); // Sets System.In to test
-            LeadRequestDTO theNewLeadRequestDTO = test.newLead(); // creates new lead
-            //check Object created correctly and added to repository
-            assertEquals("NATHAN", theNewLeadRequestDTO.getName());
-            assertEquals("SANTANDER", theNewLeadRequestDTO.getCompanyName());
-            assertEquals("0028263", theNewLeadRequestDTO.getPhoneNumber());
-            assertEquals("122@GMAIL.COM", theNewLeadRequestDTO.getEmail());
-        } finally {
-            System.setIn(stdin); /// Resets System.in to default state
-        }
-    }
-
-    @Test
-    void testConvertLeadThrowsNullPointerException() {
-        assertThrows(NoSuchElementException.class, () -> test.convertLead("239832487248"));
-        assertThrows(NumberFormatException.class, () -> test.convertLead("Sausage"));
-    }
-
-
-    @Test
-    void testConvertLeadPositive() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
-
-        String data = "y \n box \n 20 \n \n \n y \n \n \n \n";
-        InputStream stdin = System.in; // Used to store default System.in
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes())); // Sets System.In to test1
-
-            var oppRepoSizeBefore = opportunityRepository.findAllOpportunities().size();
-
-            OpportunityRequestDTO newOpp = test.convertLead(leadRequestDTOS.get(0).getId().toString());
-
-            var oppRepoSizeAfter = opportunityRepository.findAllOpportunities().size();
-            assertEquals(Truck.BOX, newOpp.getProduct());
-            assertEquals(20, newOpp.getQuantity());
-            assertEquals(oppRepoSizeAfter, oppRepoSizeBefore + 1);
-
-        } finally {
-            System.setIn(stdin); /// Resets System.in to default state
-        }
-    }
-
-
-    @Test
-    void createAccount_PositiveTest() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException, ExceedsMaxLength {
-        String data = "y \n Produce\n 200 \n Stourbridge \n SPAIN\n \n \n \n"; // Used to simulate user input
-        InputStream stdin = System.in; // Used to store default System.in
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes())); // Sets System.In to test1
-
-            AccountRequestDTO createdAccountRequestDTO = test.createAccount(opportunities.get(0));
-
-            assertEquals("Kałasznikow", createdAccountRequestDTO.getCompanyName());
-        } finally {
-            System.setIn(stdin); /// Resets System.in to default state
-        }
-    }
-
-    @Test
-    void createAccount_AddToExistingAccountTest() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException, ExceedsMaxLength {
-        String data = "n \n" + accountRequestDTOS.get(0).getId() +"\n"; // Used to simulate user input
-        InputStream stdin = System.in; // Used to store default System.in
-        SalesRepRequestDTO testRep = new SalesRepRequestDTO("Test Rep");
-        salesRepRepository.save(testRep);
-        ContactRequestDTO testContactRequestDTO = new ContactRequestDTO("Test Contact", "98765432", "test@contact.co.uk", "Test Company", testRep);
-        contactRepository.save(testContactRequestDTO);
-        OpportunityRequestDTO testOpp = new OpportunityRequestDTO(Truck.HYBRID, 50, contactRepository.findById(testContactRequestDTO.getId()).get(),
-                salesRepRepository.findById(testRep.getId()).get());
-        opportunityRepository.save(testOpp);
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes())); // Sets System.In to test1
-            var oppSizeBefore = accountRepository.findById(accountRequestDTOS.get(0).getId()).get().getOpportunityList().size();
-
-            AccountRequestDTO existingAccountRequestDTO = test.createAccount(testOpp);
-
-            var oppSizeAfter = accountRepository.findById(accountRequestDTOS.get(0).getId()).get().getOpportunityList().size();
-
-            assertEquals(existingAccountRequestDTO, testOpp.getAccountRequestDTO());
-            assertEquals(oppSizeAfter, oppSizeBefore + 1);
-        } finally {
-            System.setIn(stdin); /// Resets System.in to default state
-        }
-    }
-
-
-
-    @Test
-    void showSalesReps(){
-        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-        System.setOut(new PrintStream(outContent));
-
-        test.showSalesReps();
-
-        assertTrue(outContent.toString().contains("DAVID LYNCH"));
-        assertTrue(outContent.toString().contains("Total Number Of Sales Representatives:"));
-    }
-
-
-    @Test
-    void showLeads() {
-
-        // After this all System.out.println() statements will come to outContent stream.
-        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-        System.setOut(new PrintStream(outContent));
-
-        test.showLeads();
-
-        //Now we have to validate the output. It has to exactly mimic the output we created.
-        assertTrue(outContent.toString().contains("LEE DAWSON"));
-        assertTrue(outContent.toString().contains("Total Number Of Leads"));
-    }
-
-
-    @Test
-    void showContacts() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
-        // After this all System.out.println() statements will come to outContent stream.
-        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-        System.setOut(new PrintStream(outContent));
-
-        test.showContacts();
-
-        //Now we have to validate the output. It has to exactly mimic the output we created.
-        assertTrue(outContent.toString().contains("JOHN DOE"));
-        assertTrue(outContent.toString().contains("Total Number Of Contacts"));
-    }
-
-    //
-    @Test
-    void showOpportunities() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-
-        ContactRequestDTO contactRequestDTO = new ContactRequestDTO("TESTCONTACT", "1234567", "EMAIL@EMAIL.COM", "TESTCOMPANY");
-        contactRepository.save(contactRequestDTO);
-        OpportunityRequestDTO newOpp = new OpportunityRequestDTO(Truck.HYBRID, 30, contactRequestDTO);
-        opportunityRepository.save(newOpp);
-
-        // After this all System.out.println() statements will come to outContent stream.
-        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-        System.setOut(new PrintStream(outContent));
-        test.showOpportunities();
-
-        //Now we have to validate the output. It has to exactly mimic the output we created.
-        assertTrue(outContent.toString().contains("HYBRID"));
-        assertTrue(outContent.toString().contains("Total Number Of Opportunities"));
-    }
-
-    @Test
-    void showAccounts() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
-        // Clears the repositories for easier testing
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-
-        // This Block looks messy but sets up the Repositories for testing
-        ContactRequestDTO testContactRequestDTO = new ContactRequestDTO("TESTCONTACT", "1234567", "EMAIL@EMAIL.COM", "TESTCOMPANY");
-        contactRepository.save(testContactRequestDTO);
-        OpportunityRequestDTO testOpp = new OpportunityRequestDTO(Truck.HYBRID, 30, testContactRequestDTO);
-        opportunityRepository.save(testOpp);
-        AccountRequestDTO testAcc = new AccountRequestDTO(testContactRequestDTO, testOpp);
-        accountRepository.save(testAcc);
-        testOpp.getDecisionMaker().setAccount(testAcc);
-        contactRepository.save(testOpp.getDecisionMaker());
-        accountRepository.save(testAcc);
-
-
-        // After this all System.out.println() statements will come to outContent stream.
-        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-        System.setOut(new PrintStream(outContent));
-
-        test.showAccounts();
-
-        //Now we have to validate the output. It has to exactly mimic the output we created.
-        assertTrue(outContent.toString().contains("TESTCOMPANY"));
-        assertTrue(outContent.toString().contains("Total Number Of Accounts"));
-    }
-
-    @Test
-    void lookUpLeadId_FindLead() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
-        SalesRepRequestDTO testRep = new SalesRepRequestDTO("Test Rep");
-        salesRepRepository.save(testRep);
-        LeadRequestDTO testLeadRequestDTO = new LeadRequestDTO("Test Lead","123456789", "test@testlead.com", "Test Company", testRep);
-        leadRepository.save(testLeadRequestDTO);
-
-        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-        System.setOut(new PrintStream(outContent));
-
-        test.lookUpLeadId(testLeadRequestDTO.getId());
-
-        assertTrue(outContent.toString().contains("TEST LEAD"));
-        assertTrue(outContent.toString().contains("Lead details"));
-    }
-
-    @Test
-    void lookUpOppId_FindOpp() throws ExceedsMaxLength {
-        ContactRequestDTO testContactRequestDTO = new ContactRequestDTO("TESTCONTACT", "1234567", "EMAIL@EMAIL.COM", "TESTCOMPANY");
-        contactRepository.save(testContactRequestDTO);
-        OpportunityRequestDTO testOpp = new OpportunityRequestDTO(Truck.HYBRID, 30, testContactRequestDTO);
-        opportunityRepository.save(testOpp);
-        AccountRequestDTO testAcc = new AccountRequestDTO(testContactRequestDTO, testOpp);
-        accountRepository.save(testAcc);
-        testOpp.getDecisionMaker().setAccount(testAcc);
-        contactRepository.save(testOpp.getDecisionMaker());
-        accountRepository.save(testAcc);
-
-        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-        System.setOut(new PrintStream(outContent));
-
-        test.lookUpOppId(String.valueOf(testOpp.getId()));
-
-        assertTrue(outContent.toString().contains("HYBRID"));
-        assertTrue(outContent.toString().contains("Contract details"));
-        assertTrue(outContent.toString().contains("Decision maker details"));
-    }
-
-
-    @Test
-    void closeLost() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException, ExceedsMaxLength {
-
-        String data = "y \n";
-        InputStream stdin = System.in;
-
-        try {
-            assertEquals(Status.OPEN, opportunityRepository.findById(opportunities.get(0).getId()).get().getStatus());
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            test.closeLost(opportunities.get(0).getId().toString());
-            assertEquals(Status.CLOSED_LOST, opportunityRepository.findById(opportunities.get(0).getId()).get().getStatus());
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void closeWon() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException {
-        String data = "y";
-        InputStream stdin = System.in;
-        try {
-            assertEquals(Status.OPEN, opportunityRepository.findById(opportunities.get(1).getId()).get().getStatus());
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            test.closeWon(opportunities.get(1).getId().toString());
-            assertEquals(Status.CLOSED_WON, opportunityRepository.findById(opportunities.get(1).getId()).get().getStatus());
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void TestCreateSalesrepPositive() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException, ExceedsMaxLength {
-        String data = "y\n Diego Maradona \n"; // Used to simulate user input
-        InputStream stdin = System.in; // Used to store default System.in
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes())); // Sets System.In to test1
-
-            SalesRepRequestDTO createdSalesrep = test.newSalesRep();
-
-            assertEquals("DIEGO MARADONA", createdSalesrep.getRepName());
-        } finally {
-            System.setIn(stdin); /// Resets System.in to default state
-        }
-    }
-
-}
+//package com.ironhack.menuservice.menus;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.*;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Status;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import static org.junit.jupiter.api.Assertions.*;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//
+//import java.io.ByteArrayInputStream;
+//import java.io.ByteArrayOutputStream;
+//import java.io.InputStream;
+//import java.io.PrintStream;
+//import java.util.List;
+//import java.util.NoSuchElementException;
+//
+//@SpringBootTest
+//class MainMenuTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application application;
+//
+//    @Autowired
+//    private MainMenu test;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//    @Autowired
+//    private ContactRepository contactRepository;
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    String colorMain = "\033[0;33m";
+//    String colorMainBold = "\033[1;37m";
+//    String colorHeadline = "\033[0;34m";
+//    String colorHeadlineBold = "\033[1;34m";
+//    String colorTable = "\033[1;32m";
+//    String reset = "\u001B[0m";
+//    String os = System.getProperty("os.name").toLowerCase();
+//    String expectedOutput;
+//    List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    List<LeadRequestDTO> leadRequestDTOS;
+//    List<ContactRequestDTO> contactRequestDTOS;
+//    List<OpportunityRequestDTO> opportunities;
+//    List<AccountRequestDTO> accountRequestDTOS;
+//
+//
+//    @BeforeEach
+//    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException, ExceedsMaxLength, InvalidCountryException, IdContainsLettersException {
+//
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Lynch"),
+//                new SalesRepRequestDTO("Martha Stewart")
+//        ));
+//
+//       leadRequestDTOS = leadRepository.saveAll(List.of(
+//                new LeadRequestDTO("Sebastian Marek Labedz", "123456789", "labedzsebastian@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Lee Dawson", "980651164", "ld@gmail.com", "LeeD", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Natalia Shilyaeva", "563782789", "nattyshil@yahoo.com", "Nathy From Wonderland", salesRepRequestDTOS.get(1))
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Doe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Martha Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
+//                new ContactRequestDTO("George Truman", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
+//        ));
+//
+//        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
+//        contactRepository.save(contactRequestDTOS.get(0));
+//        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
+//        contactRepository.save(contactRequestDTOS.get(1));
+//        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
+//        contactRepository.save(contactRequestDTOS.get(2));
+//
+//        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
+//        opportunityRepository.save(opportunities.get(0));
+//        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
+//        opportunityRepository.save(opportunities.get(1));
+//        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
+//        opportunityRepository.save(opportunities.get(2));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//
+//    }
+//
+//    @Test
+//    void testNewLeadPositive() {
+//        String data = "y \n Nathan \n 0028263 \n 122@gmail.com \n Santander \n " + salesRepRequestDTOS.get(0).getId() + "\n"; // Used to simulate user input
+//        InputStream stdin = System.in; // Used to store default System.in
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes())); // Sets System.In to test
+//            LeadRequestDTO theNewLeadRequestDTO = test.newLead(); // creates new lead
+//            //check Object created correctly and added to repository
+//            assertEquals("NATHAN", theNewLeadRequestDTO.getName());
+//            assertEquals("SANTANDER", theNewLeadRequestDTO.getCompanyName());
+//            assertEquals("0028263", theNewLeadRequestDTO.getPhoneNumber());
+//            assertEquals("122@GMAIL.COM", theNewLeadRequestDTO.getEmail());
+//        } finally {
+//            System.setIn(stdin); /// Resets System.in to default state
+//        }
+//    }
+//
+//    @Test
+//    void testConvertLeadThrowsNullPointerException() {
+//        assertThrows(NoSuchElementException.class, () -> test.convertLead("239832487248"));
+//        assertThrows(NumberFormatException.class, () -> test.convertLead("Sausage"));
+//    }
+//
+//
+//    @Test
+//    void testConvertLeadPositive() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
+//
+//        String data = "y \n box \n 20 \n \n \n y \n \n \n \n";
+//        InputStream stdin = System.in; // Used to store default System.in
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes())); // Sets System.In to test1
+//
+//            var oppRepoSizeBefore = opportunityRepository.findAllOpportunities().size();
+//
+//            OpportunityRequestDTO newOpp = test.convertLead(leadRequestDTOS.get(0).getId().toString());
+//
+//            var oppRepoSizeAfter = opportunityRepository.findAllOpportunities().size();
+//            assertEquals(Truck.BOX, newOpp.getProduct());
+//            assertEquals(20, newOpp.getQuantity());
+//            assertEquals(oppRepoSizeAfter, oppRepoSizeBefore + 1);
+//
+//        } finally {
+//            System.setIn(stdin); /// Resets System.in to default state
+//        }
+//    }
+//
+//
+//    @Test
+//    void createAccount_PositiveTest() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException, ExceedsMaxLength {
+//        String data = "y \n Produce\n 200 \n Stourbridge \n SPAIN\n \n \n \n"; // Used to simulate user input
+//        InputStream stdin = System.in; // Used to store default System.in
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes())); // Sets System.In to test1
+//
+//            AccountRequestDTO createdAccountRequestDTO = test.createAccount(opportunities.get(0));
+//
+//            assertEquals("Kałasznikow", createdAccountRequestDTO.getCompanyName());
+//        } finally {
+//            System.setIn(stdin); /// Resets System.in to default state
+//        }
+//    }
+//
+//    @Test
+//    void createAccount_AddToExistingAccountTest() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException, ExceedsMaxLength {
+//        String data = "n \n" + accountRequestDTOS.get(0).getId() +"\n"; // Used to simulate user input
+//        InputStream stdin = System.in; // Used to store default System.in
+//        SalesRepRequestDTO testRep = new SalesRepRequestDTO("Test Rep");
+//        salesRepRepository.save(testRep);
+//        ContactRequestDTO testContactRequestDTO = new ContactRequestDTO("Test Contact", "98765432", "test@contact.co.uk", "Test Company", testRep);
+//        contactRepository.save(testContactRequestDTO);
+//        OpportunityRequestDTO testOpp = new OpportunityRequestDTO(Truck.HYBRID, 50, contactRepository.findById(testContactRequestDTO.getId()).get(),
+//                salesRepRepository.findById(testRep.getId()).get());
+//        opportunityRepository.save(testOpp);
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes())); // Sets System.In to test1
+//            var oppSizeBefore = accountRepository.findById(accountRequestDTOS.get(0).getId()).get().getOpportunityList().size();
+//
+//            AccountRequestDTO existingAccountRequestDTO = test.createAccount(testOpp);
+//
+//            var oppSizeAfter = accountRepository.findById(accountRequestDTOS.get(0).getId()).get().getOpportunityList().size();
+//
+//            assertEquals(existingAccountRequestDTO, testOpp.getAccountRequestDTO());
+//            assertEquals(oppSizeAfter, oppSizeBefore + 1);
+//        } finally {
+//            System.setIn(stdin); /// Resets System.in to default state
+//        }
+//    }
+//
+//
+//
+//    @Test
+//    void showSalesReps(){
+//        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//        System.setOut(new PrintStream(outContent));
+//
+//        test.showSalesReps();
+//
+//        assertTrue(outContent.toString().contains("DAVID LYNCH"));
+//        assertTrue(outContent.toString().contains("Total Number Of Sales Representatives:"));
+//    }
+//
+//
+//    @Test
+//    void showLeads() {
+//
+//        // After this all System.out.println() statements will come to outContent stream.
+//        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//        System.setOut(new PrintStream(outContent));
+//
+//        test.showLeads();
+//
+//        //Now we have to validate the output. It has to exactly mimic the output we created.
+//        assertTrue(outContent.toString().contains("LEE DAWSON"));
+//        assertTrue(outContent.toString().contains("Total Number Of Leads"));
+//    }
+//
+//
+//    @Test
+//    void showContacts() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
+//        // After this all System.out.println() statements will come to outContent stream.
+//        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//        System.setOut(new PrintStream(outContent));
+//
+//        test.showContacts();
+//
+//        //Now we have to validate the output. It has to exactly mimic the output we created.
+//        assertTrue(outContent.toString().contains("JOHN DOE"));
+//        assertTrue(outContent.toString().contains("Total Number Of Contacts"));
+//    }
+//
+//    //
+//    @Test
+//    void showOpportunities() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//
+//        ContactRequestDTO contactRequestDTO = new ContactRequestDTO("TESTCONTACT", "1234567", "EMAIL@EMAIL.COM", "TESTCOMPANY");
+//        contactRepository.save(contactRequestDTO);
+//        OpportunityRequestDTO newOpp = new OpportunityRequestDTO(Truck.HYBRID, 30, contactRequestDTO);
+//        opportunityRepository.save(newOpp);
+//
+//        // After this all System.out.println() statements will come to outContent stream.
+//        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//        System.setOut(new PrintStream(outContent));
+//        test.showOpportunities();
+//
+//        //Now we have to validate the output. It has to exactly mimic the output we created.
+//        assertTrue(outContent.toString().contains("HYBRID"));
+//        assertTrue(outContent.toString().contains("Total Number Of Opportunities"));
+//    }
+//
+//    @Test
+//    void showAccounts() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
+//        // Clears the repositories for easier testing
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//
+//        // This Block looks messy but sets up the Repositories for testing
+//        ContactRequestDTO testContactRequestDTO = new ContactRequestDTO("TESTCONTACT", "1234567", "EMAIL@EMAIL.COM", "TESTCOMPANY");
+//        contactRepository.save(testContactRequestDTO);
+//        OpportunityRequestDTO testOpp = new OpportunityRequestDTO(Truck.HYBRID, 30, testContactRequestDTO);
+//        opportunityRepository.save(testOpp);
+//        AccountRequestDTO testAcc = new AccountRequestDTO(testContactRequestDTO, testOpp);
+//        accountRepository.save(testAcc);
+//        testOpp.getDecisionMaker().setAccount(testAcc);
+//        contactRepository.save(testOpp.getDecisionMaker());
+//        accountRepository.save(testAcc);
+//
+//
+//        // After this all System.out.println() statements will come to outContent stream.
+//        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//        System.setOut(new PrintStream(outContent));
+//
+//        test.showAccounts();
+//
+//        //Now we have to validate the output. It has to exactly mimic the output we created.
+//        assertTrue(outContent.toString().contains("TESTCOMPANY"));
+//        assertTrue(outContent.toString().contains("Total Number Of Accounts"));
+//    }
+//
+//    @Test
+//    void lookUpLeadId_FindLead() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
+//        SalesRepRequestDTO testRep = new SalesRepRequestDTO("Test Rep");
+//        salesRepRepository.save(testRep);
+//        LeadRequestDTO testLeadRequestDTO = new LeadRequestDTO("Test Lead","123456789", "test@testlead.com", "Test Company", testRep);
+//        leadRepository.save(testLeadRequestDTO);
+//
+//        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//        System.setOut(new PrintStream(outContent));
+//
+//        test.lookUpLeadId(testLeadRequestDTO.getId());
+//
+//        assertTrue(outContent.toString().contains("TEST LEAD"));
+//        assertTrue(outContent.toString().contains("Lead details"));
+//    }
+//
+//    @Test
+//    void lookUpOppId_FindOpp() throws ExceedsMaxLength {
+//        ContactRequestDTO testContactRequestDTO = new ContactRequestDTO("TESTCONTACT", "1234567", "EMAIL@EMAIL.COM", "TESTCOMPANY");
+//        contactRepository.save(testContactRequestDTO);
+//        OpportunityRequestDTO testOpp = new OpportunityRequestDTO(Truck.HYBRID, 30, testContactRequestDTO);
+//        opportunityRepository.save(testOpp);
+//        AccountRequestDTO testAcc = new AccountRequestDTO(testContactRequestDTO, testOpp);
+//        accountRepository.save(testAcc);
+//        testOpp.getDecisionMaker().setAccount(testAcc);
+//        contactRepository.save(testOpp.getDecisionMaker());
+//        accountRepository.save(testAcc);
+//
+//        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//        System.setOut(new PrintStream(outContent));
+//
+//        test.lookUpOppId(String.valueOf(testOpp.getId()));
+//
+//        assertTrue(outContent.toString().contains("HYBRID"));
+//        assertTrue(outContent.toString().contains("Contract details"));
+//        assertTrue(outContent.toString().contains("Decision maker details"));
+//    }
+//
+//
+//    @Test
+//    void closeLost() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException, ExceedsMaxLength {
+//
+//        String data = "y \n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            assertEquals(Status.OPEN, opportunityRepository.findById(opportunities.get(0).getId()).get().getStatus());
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            test.closeLost(opportunities.get(0).getId().toString());
+//            assertEquals(Status.CLOSED_LOST, opportunityRepository.findById(opportunities.get(0).getId()).get().getStatus());
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void closeWon() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException {
+//        String data = "y";
+//        InputStream stdin = System.in;
+//        try {
+//            assertEquals(Status.OPEN, opportunityRepository.findById(opportunities.get(1).getId()).get().getStatus());
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            test.closeWon(opportunities.get(1).getId().toString());
+//            assertEquals(Status.CLOSED_WON, opportunityRepository.findById(opportunities.get(1).getId()).get().getStatus());
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void TestCreateSalesrepPositive() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, PhoneNumberContainsLettersException, ExceedsMaxLength {
+//        String data = "y\n Diego Maradona \n"; // Used to simulate user input
+//        InputStream stdin = System.in; // Used to store default System.in
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes())); // Sets System.In to test1
+//
+//            SalesRepRequestDTO createdSalesrep = test.newSalesRep();
+//
+//            assertEquals("DIEGO MARADONA", createdSalesrep.getRepName());
+//        } finally {
+//            System.setIn(stdin); /// Resets System.in to default state
+//        }
+//    }
+//
+//}
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/LeadRequestDTORepositoryTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/LeadRequestDTORepositoryTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/repository/LeadRequestDTORepositoryTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/LeadRequestDTORepositoryTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/repository/LeadRequestDTORepositoryTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/LeadRequestDTORepositoryTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/repository/LeadRequestDTORepositoryTest.java	
@@ -1,78 +1,78 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.repository;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.LeadRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.SalesRepRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.util.List;
-
-@SpringBootTest
-class LeadRequestDTORepositoryTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-
-    @Autowired
-    private LeadRepository leadRepository;
-
-
-    private List<SalesRepRequestDTO> salesRepRequestDTOS;
-    private List<LeadRequestDTO> leadRequestDTOS;
-
-    @BeforeEach
-    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, IdContainsLettersException {
-
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Lynch"),
-                new SalesRepRequestDTO("Martha Stewart")
-                ));
-
-        leadRequestDTOS = leadRepository.saveAll(List.of(
-                new LeadRequestDTO("Sebastian Marek Labedz", "123456789", "labedzsebastian@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Lee Dawson", "980651164", "ld@gmail.com", "LeeD", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Natalia Shilyaeva", "563782789", "nattyshil@yahoo.com", "Nathy From Wonderland", salesRepRequestDTOS.get(1))
-
-        ));
-
-
-    }
-
-    @AfterEach
-    void tearDown() {
-       leadRepository.deleteAll();
-       salesRepRepository.deleteAll();
-    }
-
-
-    @Test
-    public void createLeads_positiveCreation(){
-        var leadsy = leadRepository.findAll();
-        var salesRepsy = salesRepRepository.findAll();
-        assertEquals(3, leadsy.size());
-        assertEquals(2, salesRepsy.size());
-        //assertEquals("David Lynch", leadRepository.findAll().get(3));
-    }
-
-
-    @Test
-    void getCountOfLeadsGroupBySalesRep_Test() {
-        var leadByRep = leadRepository.findCountLeadByRepName();
-
-        assertEquals("David Lynch", leadByRep.get(0)[0]);
-        assertEquals("Martha Stewart", leadByRep.get(1)[0]);
-        assertEquals(1L, leadByRep.get(1)[1]);
-        assertEquals(2L,leadByRep.get(0)[1]);
-    }
-
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.repository;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.LeadRequestDTO;
+//import com.ironhack.menuservice.dto.SalesRepRequestDTO;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.util.List;
+//
+//@SpringBootTest
+//class LeadRequestDTORepositoryTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//
+//
+//    private List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    private List<LeadRequestDTO> leadRequestDTOS;
+//
+//    @BeforeEach
+//    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, IdContainsLettersException {
+//
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Lynch"),
+//                new SalesRepRequestDTO("Martha Stewart")
+//                ));
+//
+//        leadRequestDTOS = leadRepository.saveAll(List.of(
+//                new LeadRequestDTO("Sebastian Marek Labedz", "123456789", "labedzsebastian@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Lee Dawson", "980651164", "ld@gmail.com", "LeeD", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Natalia Shilyaeva", "563782789", "nattyshil@yahoo.com", "Nathy From Wonderland", salesRepRequestDTOS.get(1))
+//
+//        ));
+//
+//
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//       leadRepository.deleteAll();
+//       salesRepRepository.deleteAll();
+//    }
+//
+//
+//    @Test
+//    public void createLeads_positiveCreation(){
+//        var leadsy = leadRepository.findAll();
+//        var salesRepsy = salesRepRepository.findAll();
+//        assertEquals(3, leadsy.size());
+//        assertEquals(2, salesRepsy.size());
+//        //assertEquals("David Lynch", leadRepository.findAll().get(3));
+//    }
+//
+//
+//    @Test
+//    void getCountOfLeadsGroupBySalesRep_Test() {
+//        var leadByRep = leadRepository.findCountLeadByRepName();
+//
+//        assertEquals("David Lynch", leadByRep.get(0)[0]);
+//        assertEquals("Martha Stewart", leadByRep.get(1)[0]);
+//        assertEquals(1L, leadByRep.get(1)[1]);
+//        assertEquals(2L,leadByRep.get(0)[1]);
+//    }
+//
+//
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/ContactRequestDTORepositoryTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/ContactRequestDTORepositoryTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/repository/ContactRequestDTORepositoryTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/ContactRequestDTORepositoryTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/repository/ContactRequestDTORepositoryTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/ContactRequestDTORepositoryTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/repository/ContactRequestDTORepositoryTest.java	
@@ -1,67 +1,67 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.repository;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.ContactRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.SalesRepRequestDTO;
-
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class ContactRequestDTORepositoryTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private ContactRepository contactRepository;
-
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-
-    private List<SalesRepRequestDTO> salesRepRequestDTOS;
-    private List<ContactRequestDTO> contactRequestDTOS;
-
-
-    @BeforeEach
-    void setUp()  {
-
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Lynch"),
-                new SalesRepRequestDTO("Martha Stewart")
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Doe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Martha Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
-                new ContactRequestDTO("George Truman", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-        ));
-    }
-
-    @AfterEach
-    void tearDown() {
-        contactRepository.deleteAll();
-
-    }
-
-    @Test
-    void findAllContacts_shouldWork(){
-        var contactCount = contactRepository.findAllContacts().size();
-        assertEquals(3, contactCount);
-    }
-
-    @Test
-    void findById_shouldWork(){
-        var contact = contactRepository.findById(contactRequestDTOS.get(1).getId());
-        assertEquals("123475357", contact.get().getPhoneNumber());
-    }
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.repository;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.ContactRequestDTO;
+//import com.ironhack.menuservice.dto.SalesRepRequestDTO;
+//
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class ContactRequestDTORepositoryTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private ContactRepository contactRepository;
+//
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//
+//    private List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    private List<ContactRequestDTO> contactRequestDTOS;
+//
+//
+//    @BeforeEach
+//    void setUp()  {
+//
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Lynch"),
+//                new SalesRepRequestDTO("Martha Stewart")
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Doe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Martha Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
+//                new ContactRequestDTO("George Truman", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//        ));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        contactRepository.deleteAll();
+//
+//    }
+//
+//    @Test
+//    void findAllContacts_shouldWork(){
+//        var contactCount = contactRepository.findAllContacts().size();
+//        assertEquals(3, contactCount);
+//    }
+//
+//    @Test
+//    void findById_shouldWork(){
+//        var contact = contactRepository.findById(contactRequestDTOS.get(1).getId());
+//        assertEquals("123475357", contact.get().getPhoneNumber());
+//    }
+//
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/AccountRequestDTORepositoryTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/AccountRequestDTORepositoryTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/repository/AccountRequestDTORepositoryTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/AccountRequestDTORepositoryTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/repository/AccountRequestDTORepositoryTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/repository/AccountRequestDTORepositoryTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/repository/AccountRequestDTORepositoryTest.java	
@@ -1,120 +1,120 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.repository;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.AccountRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.ContactRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.OpportunityRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.SalesRepRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class AccountRequestDTORepositoryTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-
-    @Autowired
-    private ContactRepository contactRepository;
-
-    @Autowired
-    private AccountRepository accountRepository;
-
-    private List<SalesRepRequestDTO> salesRepRequestDTOS;
-    private List<ContactRequestDTO> contactRequestDTOS;
-    private List<OpportunityRequestDTO> opportunities;
-    private List<AccountRequestDTO> accountRequestDTOS;
-
-    @BeforeEach
-    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength,
-            PhoneNumberContainsLettersException, InvalidCountryException {
-
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Lynch"),
-                new SalesRepRequestDTO("Martha Stewart")
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Doe", "123475357", "alfa@beta.uk", "Kałasznikow",
-                        salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Martha Steward", "123475357", "ms@wp.pl",
-                        "My own company", salesRepRequestDTOS.get(1)),
-                new ContactRequestDTO("George Truman", "123475357", "thisisverylongemail@gmail.com",
-                        "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0),
-                        opportunities.get(0))  ,
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1),
-                        opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2),
-                        opportunities.get(2))
-        ));
-
-    }
-
-    @AfterEach
-    void tearDown() {
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-
-    }
-
-    @Test
-    void findMeanEmployeeCount() {
-        var meanEmployeeCount = accountRepository.findMeanEmployeeCount();
-        assertEquals(190, meanEmployeeCount.get().doubleValue());
-    }
-
-    @Test
-    void findMedianEmployeeCountStep1_test(){
-        var medianEmployeeCount = accountRepository.findMedianEmployeeCountStep1();
-        assertEquals(3, medianEmployeeCount.length);
-    }
-
-    @Test
-    void findMaxEmployeeCount() {
-        var maxEmployeeCount = accountRepository.findMaxEmployeeCount();
-        assertEquals(500, maxEmployeeCount.get().intValue());
-    }
-
-
-    @Test
-    void findMinEmployeeCount() {
-        var minEmployeeCountEmployeeCount = accountRepository.findMinEmployeeCount();
-        assertEquals(20, minEmployeeCountEmployeeCount.get().intValue());
-    }
-
-
-    @Test
-    void findAllAccounts() {
-    }
-}
\ No newline at end of file
+//package com.ironhack.menuservice.repository;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.AccountRequestDTO;
+//import com.ironhack.menuservice.dto.ContactRequestDTO;
+//import com.ironhack.menuservice.dto.OpportunityRequestDTO;
+//import com.ironhack.menuservice.dto.SalesRepRequestDTO;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class AccountRequestDTORepositoryTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//
+//    @Autowired
+//    private ContactRepository contactRepository;
+//
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    private List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    private List<ContactRequestDTO> contactRequestDTOS;
+//    private List<OpportunityRequestDTO> opportunities;
+//    private List<AccountRequestDTO> accountRequestDTOS;
+//
+//    @BeforeEach
+//    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength,
+//            PhoneNumberContainsLettersException, InvalidCountryException {
+//
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Lynch"),
+//                new SalesRepRequestDTO("Martha Stewart")
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Doe", "123475357", "alfa@beta.uk", "Kałasznikow",
+//                        salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Martha Steward", "123475357", "ms@wp.pl",
+//                        "My own company", salesRepRequestDTOS.get(1)),
+//                new ContactRequestDTO("George Truman", "123475357", "thisisverylongemail@gmail.com",
+//                        "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0),
+//                        opportunities.get(0))  ,
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1),
+//                        opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2),
+//                        opportunities.get(2))
+//        ));
+//
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//
+//    }
+//
+//    @Test
+//    void findMeanEmployeeCount() {
+//        var meanEmployeeCount = accountRepository.findMeanEmployeeCount();
+//        assertEquals(190, meanEmployeeCount.get().doubleValue());
+//    }
+//
+//    @Test
+//    void findMedianEmployeeCountStep1_test(){
+//        var medianEmployeeCount = accountRepository.findMedianEmployeeCountStep1();
+//        assertEquals(3, medianEmployeeCount.length);
+//    }
+//
+//    @Test
+//    void findMaxEmployeeCount() {
+//        var maxEmployeeCount = accountRepository.findMaxEmployeeCount();
+//        assertEquals(500, maxEmployeeCount.get().intValue());
+//    }
+//
+//
+//    @Test
+//    void findMinEmployeeCount() {
+//        var minEmployeeCountEmployeeCount = accountRepository.findMinEmployeeCount();
+//        assertEquals(20, minEmployeeCountEmployeeCount.get().intValue());
+//    }
+//
+//
+//    @Test
+//    void findAllAccounts() {
+//    }
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/SalesRepRequestDTOReportMenuTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/SalesRepRequestDTOReportMenuTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/menus/SalesRepRequestDTOReportMenuTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/SalesRepRequestDTOReportMenuTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/menus/SalesRepRequestDTOReportMenuTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/SalesRepRequestDTOReportMenuTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/menus/SalesRepRequestDTOReportMenuTest.java	
@@ -1,133 +1,133 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.awt.*;
-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.io.InputStream;
-import java.io.PrintStream;
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class SalesRepRequestDTOReportMenuTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private LeadRepository leadRepository;
-    @Autowired
-    private ContactRepository contactRepository;
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-    @Autowired
-    private AccountRepository accountRepository;
-
-    @Autowired
-    private SalesRepReportMenu test;
-
-    String colorMain = "\033[0;33m";
-    String colorMainBold = "\033[1;37m";
-    String colorHeadline = "\033[0;34m";
-    String colorHeadlineBold = "\033[1;34m";
-    String colorTable = "\033[1;32m";
-    String reset = "\u001B[0m";
-    String os = System.getProperty("os.name").toLowerCase();
-
-    List<SalesRepRequestDTO> salesRepRequestDTOS;
-    List<LeadRequestDTO> leadRequestDTOS;
-    List<ContactRequestDTO> contactRequestDTOS;
-    List<OpportunityRequestDTO> opportunities;
-    List<AccountRequestDTO> accountRequestDTOS;
-    String expectedOutput;
-
-    @BeforeEach
-    void setUp() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, InvalidCountryException, EmailNotValidException, PhoneNumberContainsLettersException {
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Brown")
-        ));
-
-        leadRequestDTOS = leadRepository.saveAll(List.of(
-                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(0))
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(0))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
-        ));
-
-        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
-        contactRepository.save(contactRequestDTOS.get(0));
-        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
-        contactRepository.save(contactRequestDTOS.get(1));
-        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
-        contactRepository.save(contactRequestDTOS.get(2));
-
-        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
-        opportunityRepository.save(opportunities.get(0));
-        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
-        opportunityRepository.save(opportunities.get(1));
-        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
-        opportunityRepository.save(opportunities.get(2));
-    }
-
-    @AfterEach
-    void tearDown() {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-    }
-
-    @Test
-    void salesRepReportMenu_shouldWork() throws NoSuchValueException, AWTException {
-        String data = "report lead by salesrep \n\n";
-
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.salesRepReportMenu();
-            assertTrue(outContent.toString().contains("Lead"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-}
\ No newline at end of file
+//package com.ironhack.menuservice.menus;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.*;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.awt.*;
+//import java.io.ByteArrayInputStream;
+//import java.io.ByteArrayOutputStream;
+//import java.io.InputStream;
+//import java.io.PrintStream;
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class SalesRepRequestDTOReportMenuTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//    @Autowired
+//    private ContactRepository contactRepository;
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    @Autowired
+//    private SalesRepReportMenu test;
+//
+//    String colorMain = "\033[0;33m";
+//    String colorMainBold = "\033[1;37m";
+//    String colorHeadline = "\033[0;34m";
+//    String colorHeadlineBold = "\033[1;34m";
+//    String colorTable = "\033[1;32m";
+//    String reset = "\u001B[0m";
+//    String os = System.getProperty("os.name").toLowerCase();
+//
+//    List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    List<LeadRequestDTO> leadRequestDTOS;
+//    List<ContactRequestDTO> contactRequestDTOS;
+//    List<OpportunityRequestDTO> opportunities;
+//    List<AccountRequestDTO> accountRequestDTOS;
+//    String expectedOutput;
+//
+//    @BeforeEach
+//    void setUp() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, InvalidCountryException, EmailNotValidException, PhoneNumberContainsLettersException {
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Brown")
+//        ));
+//
+//        leadRequestDTOS = leadRepository.saveAll(List.of(
+//                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(0))
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
+//        ));
+//
+//        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
+//        contactRepository.save(contactRequestDTOS.get(0));
+//        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
+//        contactRepository.save(contactRequestDTOS.get(1));
+//        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
+//        contactRepository.save(contactRequestDTOS.get(2));
+//
+//        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
+//        opportunityRepository.save(opportunities.get(0));
+//        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
+//        opportunityRepository.save(opportunities.get(1));
+//        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
+//        opportunityRepository.save(opportunities.get(2));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//    }
+//
+//    @Test
+//    void salesRepReportMenu_shouldWork() throws NoSuchValueException, AWTException {
+//        String data = "report lead by salesrep \n\n";
+//
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.salesRepReportMenu();
+//            assertTrue(outContent.toString().contains("Lead"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/TruckTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/TruckTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/enums/TruckTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/TruckTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/enums/TruckTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/TruckTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/enums/TruckTest.java	
@@ -1,7 +1,7 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.enums;
+package com.ironhack.menuservice.enums;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.EmptyStringException;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.InvalidEnumException;
+import com.ironhack.menuservice.exceptions.EmptyStringException;
+import com.ironhack.menuservice.exceptions.InvalidEnumException;
 import org.junit.Assert;
 import org.junit.jupiter.api.Test;
 
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ReportCommandsTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ReportCommandsTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/enums/ReportCommandsTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ReportCommandsTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/enums/ReportCommandsTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ReportCommandsTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/enums/ReportCommandsTest.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.enums;
+package com.ironhack.menuservice.enums;
 
 import org.junit.jupiter.api.Test;
 
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/IndustryTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/IndustryTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/enums/IndustryTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/IndustryTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/enums/IndustryTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/IndustryTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/enums/IndustryTest.java	
@@ -1,7 +1,7 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.enums;
+package com.ironhack.menuservice.enums;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.EmptyStringException;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.InvalidEnumException;
+import com.ironhack.menuservice.exceptions.EmptyStringException;
+import com.ironhack.menuservice.exceptions.InvalidEnumException;
 import org.junit.Assert;
 import org.junit.jupiter.api.Test;
 
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ConsoleTextColorsTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ConsoleTextColorsTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/enums/ConsoleTextColorsTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ConsoleTextColorsTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/enums/ConsoleTextColorsTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ConsoleTextColorsTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/enums/ConsoleTextColorsTest.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.enums;
+package com.ironhack.menuservice.enums;
 
 import org.junit.jupiter.api.Test;
 
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/IndustryReportMenuTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/IndustryReportMenuTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/menus/IndustryReportMenuTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/IndustryReportMenuTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/menus/IndustryReportMenuTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/IndustryReportMenuTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/menus/IndustryReportMenuTest.java	
@@ -1,186 +1,186 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.awt.*;
-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.io.InputStream;
-import java.io.PrintStream;
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class IndustryReportMenuTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private LeadRepository leadRepository;
-    @Autowired
-    private ContactRepository contactRepository;
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-    @Autowired
-    private AccountRepository accountRepository;
-
-    @Autowired
-    private IndustryReportMenu test;
-
-    List<SalesRepRequestDTO> salesRepRequestDTOS;
-    List<LeadRequestDTO> leadRequestDTOS;
-    List<ContactRequestDTO> contactRequestDTOS;
-    List<OpportunityRequestDTO> opportunities;
-    List<AccountRequestDTO> accountRequestDTOS;
-    String expectedOutput;
-
-    @BeforeEach
-    public void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Brown"),
-                new SalesRepRequestDTO("Marta Stewart")
-        ));
-
-        leadRequestDTOS = leadRepository.saveAll(List.of(
-                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(1))
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
-                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
-        ));
-
-        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
-        contactRepository.save(contactRequestDTOS.get(0));
-        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
-        contactRepository.save(contactRequestDTOS.get(1));
-        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
-        contactRepository.save(contactRequestDTOS.get(2));
-
-        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
-        opportunityRepository.save(opportunities.get(0));
-        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
-        opportunityRepository.save(opportunities.get(1));
-        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
-        opportunityRepository.save(opportunities.get(2));
-    }
-
-    @AfterEach
-    void tearDown() {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-    }
-
-    @Test
-    void industryReportMenu_ReportOppByInd() throws NoSuchValueException, AWTException {
-        String data = "report opportunity by industry \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.industryReportMenu();
-            assertTrue(outContent.toString().contains("PRODUCE"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void industryReportMenu_ReportOppByIndOpen() throws NoSuchValueException, AWTException {
-        String data = "report open by industry \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.industryReportMenu();
-            assertTrue(outContent.toString().contains("PRODUCE"));
-            assertTrue(outContent.toString().contains("ECOMMERCE"));
-            assertTrue(outContent.toString().contains("MANUFACTURING"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void industryReportMenu_ReportOppByIndClsedWon() throws NoSuchValueException, AWTException {
-        opportunities.get(0).setStatus(Status.CLOSED_WON);
-        opportunityRepository.save(opportunities.get(0));
-        String data = "report closed-won by industry \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.industryReportMenu();
-            assertTrue(outContent.toString().contains("PRODUCE"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void industryReportMenu_ReportOppByIndClsedLost() throws NoSuchValueException, AWTException {
-        opportunities.get(1).setStatus(Status.CLOSED_LOST);
-        opportunityRepository.save(opportunities.get(1));
-        String data = "report closed-lost by industry \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.industryReportMenu();
-            assertTrue(outContent.toString().contains("ECOMMERCE"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-}
\ No newline at end of file
+//package com.ironhack.menuservice.menus;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.*;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Status;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.awt.*;
+//import java.io.ByteArrayInputStream;
+//import java.io.ByteArrayOutputStream;
+//import java.io.InputStream;
+//import java.io.PrintStream;
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class IndustryReportMenuTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//    @Autowired
+//    private ContactRepository contactRepository;
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    @Autowired
+//    private IndustryReportMenu test;
+//
+//    List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    List<LeadRequestDTO> leadRequestDTOS;
+//    List<ContactRequestDTO> contactRequestDTOS;
+//    List<OpportunityRequestDTO> opportunities;
+//    List<AccountRequestDTO> accountRequestDTOS;
+//    String expectedOutput;
+//
+//    @BeforeEach
+//    public void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Brown"),
+//                new SalesRepRequestDTO("Marta Stewart")
+//        ));
+//
+//        leadRequestDTOS = leadRepository.saveAll(List.of(
+//                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(1))
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
+//                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
+//        ));
+//
+//        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
+//        contactRepository.save(contactRequestDTOS.get(0));
+//        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
+//        contactRepository.save(contactRequestDTOS.get(1));
+//        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
+//        contactRepository.save(contactRequestDTOS.get(2));
+//
+//        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
+//        opportunityRepository.save(opportunities.get(0));
+//        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
+//        opportunityRepository.save(opportunities.get(1));
+//        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
+//        opportunityRepository.save(opportunities.get(2));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//    }
+//
+//    @Test
+//    void industryReportMenu_ReportOppByInd() throws NoSuchValueException, AWTException {
+//        String data = "report opportunity by industry \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.industryReportMenu();
+//            assertTrue(outContent.toString().contains("PRODUCE"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void industryReportMenu_ReportOppByIndOpen() throws NoSuchValueException, AWTException {
+//        String data = "report open by industry \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.industryReportMenu();
+//            assertTrue(outContent.toString().contains("PRODUCE"));
+//            assertTrue(outContent.toString().contains("ECOMMERCE"));
+//            assertTrue(outContent.toString().contains("MANUFACTURING"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void industryReportMenu_ReportOppByIndClsedWon() throws NoSuchValueException, AWTException {
+//        opportunities.get(0).setStatus(Status.CLOSED_WON);
+//        opportunityRepository.save(opportunities.get(0));
+//        String data = "report closed-won by industry \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.industryReportMenu();
+//            assertTrue(outContent.toString().contains("PRODUCE"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void industryReportMenu_ReportOppByIndClsedLost() throws NoSuchValueException, AWTException {
+//        opportunities.get(1).setStatus(Status.CLOSED_LOST);
+//        opportunityRepository.save(opportunities.get(1));
+//        String data = "report closed-lost by industry \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.industryReportMenu();
+//            assertTrue(outContent.toString().contains("ECOMMERCE"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/EmployeeCountReportMenuTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/EmployeeCountReportMenuTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/menus/EmployeeCountReportMenuTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/EmployeeCountReportMenuTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/menus/EmployeeCountReportMenuTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/EmployeeCountReportMenuTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/menus/EmployeeCountReportMenuTest.java	
@@ -1,180 +1,180 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.awt.*;
-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.io.InputStream;
-import java.io.PrintStream;
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class EmployeeCountReportMenuTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private LeadRepository leadRepository;
-    @Autowired
-    private ContactRepository contactRepository;
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-    @Autowired
-    private AccountRepository accountRepository;
-
-    @Autowired
-    private EmployeeCountReportMenu test;
-
-    List<SalesRepRequestDTO> salesRepRequestDTOS;
-    List<LeadRequestDTO> leadRequestDTOS;
-    List<ContactRequestDTO> contactRequestDTOS;
-    List<OpportunityRequestDTO> opportunities;
-    List<AccountRequestDTO> accountRequestDTOS;
-    String expectedOutput;
-
-    @BeforeEach
-    public void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Brown"),
-                new SalesRepRequestDTO("Marta Stewart")
-        ));
-
-        leadRequestDTOS = leadRepository.saveAll(List.of(
-                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(1))
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
-                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
-        ));
-
-        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
-        contactRepository.save(contactRequestDTOS.get(0));
-        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
-        contactRepository.save(contactRequestDTOS.get(1));
-        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
-        contactRepository.save(contactRequestDTOS.get(2));
-
-        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
-        opportunityRepository.save(opportunities.get(0));
-        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
-        opportunityRepository.save(opportunities.get(1));
-        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
-        opportunityRepository.save(opportunities.get(2));
-    }
-
-    @AfterEach
-    void tearDown() {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-    }
-
-    @Test
-    void employeeCountReportMenu_GetMean() throws NoSuchValueException, AWTException {
-        String data = "mean employeecount \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.employeeCountReportMenu();
-            assertTrue(outContent.toString().contains("Average number of employees is:"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void employeeCountReportMenu_GetMedian() throws NoSuchValueException, AWTException {
-        String data = "median employeecount \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.employeeCountReportMenu();
-            assertTrue(outContent.toString().contains("Median number of employees is:"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void employeeCountReportMenu_GetMax() throws NoSuchValueException, AWTException {
-        String data = "max employeecount \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.employeeCountReportMenu();
-            assertTrue(outContent.toString().contains("Maximum number of employees is:"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    void employeeCountReportMenu_GetMin() throws NoSuchValueException, AWTException {
-        String data = "min employeecount \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.employeeCountReportMenu();
-            assertTrue(outContent.toString().contains("Minimum number of employees is:"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.menus;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.*;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.awt.*;
+//import java.io.ByteArrayInputStream;
+//import java.io.ByteArrayOutputStream;
+//import java.io.InputStream;
+//import java.io.PrintStream;
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class EmployeeCountReportMenuTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//    @Autowired
+//    private ContactRepository contactRepository;
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    @Autowired
+//    private EmployeeCountReportMenu test;
+//
+//    List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    List<LeadRequestDTO> leadRequestDTOS;
+//    List<ContactRequestDTO> contactRequestDTOS;
+//    List<OpportunityRequestDTO> opportunities;
+//    List<AccountRequestDTO> accountRequestDTOS;
+//    String expectedOutput;
+//
+//    @BeforeEach
+//    public void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Brown"),
+//                new SalesRepRequestDTO("Marta Stewart")
+//        ));
+//
+//        leadRequestDTOS = leadRepository.saveAll(List.of(
+//                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(1))
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
+//                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
+//        ));
+//
+//        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
+//        contactRepository.save(contactRequestDTOS.get(0));
+//        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
+//        contactRepository.save(contactRequestDTOS.get(1));
+//        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
+//        contactRepository.save(contactRequestDTOS.get(2));
+//
+//        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
+//        opportunityRepository.save(opportunities.get(0));
+//        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
+//        opportunityRepository.save(opportunities.get(1));
+//        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
+//        opportunityRepository.save(opportunities.get(2));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//    }
+//
+//    @Test
+//    void employeeCountReportMenu_GetMean() throws NoSuchValueException, AWTException {
+//        String data = "mean employeecount \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.employeeCountReportMenu();
+//            assertTrue(outContent.toString().contains("Average number of employees is:"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void employeeCountReportMenu_GetMedian() throws NoSuchValueException, AWTException {
+//        String data = "median employeecount \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.employeeCountReportMenu();
+//            assertTrue(outContent.toString().contains("Median number of employees is:"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void employeeCountReportMenu_GetMax() throws NoSuchValueException, AWTException {
+//        String data = "max employeecount \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.employeeCountReportMenu();
+//            assertTrue(outContent.toString().contains("Maximum number of employees is:"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    void employeeCountReportMenu_GetMin() throws NoSuchValueException, AWTException {
+//        String data = "min employeecount \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.employeeCountReportMenu();
+//            assertTrue(outContent.toString().contains("Minimum number of employees is:"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CountryReportMenuTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CountryReportMenuTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/menus/CountryReportMenuTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CountryReportMenuTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/menus/CountryReportMenuTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CountryReportMenuTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/menus/CountryReportMenuTest.java	
@@ -1,135 +1,135 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.awt.*;
-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.io.InputStream;
-import java.io.PrintStream;
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class CountryReportMenuTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private LeadRepository leadRepository;
-    @Autowired
-    private ContactRepository contactRepository;
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-    @Autowired
-    private AccountRepository accountRepository;
-
-    @Autowired
-    private CountryReportMenu test;
-
-    String colorMain = "\033[0;33m";
-    String colorMainBold = "\033[1;37m";
-    String colorHeadline = "\033[0;34m";
-    String colorHeadlineBold = "\033[1;34m";
-    String colorTable = "\033[1;32m";
-    String reset = "\u001B[0m";
-    String os = System.getProperty("os.name").toLowerCase();
-
-    List<SalesRepRequestDTO> salesRepRequestDTOS;
-    List<LeadRequestDTO> leadRequestDTOS;
-    List<ContactRequestDTO> contactRequestDTOS;
-    List<OpportunityRequestDTO> opportunities;
-    List<AccountRequestDTO> accountRequestDTOS;
-    String expectedOutput;
-
-    @BeforeEach
-    void setUp() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, InvalidCountryException, EmailNotValidException, PhoneNumberContainsLettersException {
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Brown")
-        ));
-
-        leadRequestDTOS = leadRepository.saveAll(List.of(
-                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(0))
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(0))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
-        ));
-
-        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
-        contactRepository.save(contactRequestDTOS.get(0));
-        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
-        contactRepository.save(contactRequestDTOS.get(1));
-        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
-        contactRepository.save(contactRequestDTOS.get(2));
-
-        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
-        opportunityRepository.save(opportunities.get(0));
-        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
-        opportunityRepository.save(opportunities.get(1));
-        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
-        opportunityRepository.save(opportunities.get(2));
-    }
-
-    @AfterEach
-    void tearDown() {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-    }
-
-
-    @Test
-    void countryReportMenu() throws NoSuchValueException, AWTException {
-
-        String data = "report opportunity by country \n\n";
-
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.countryReportMenu();
-            assertTrue(outContent.toString().contains("Opportunity"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-    }
+//package com.ironhack.menuservice.menus;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.*;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.awt.*;
+//import java.io.ByteArrayInputStream;
+//import java.io.ByteArrayOutputStream;
+//import java.io.InputStream;
+//import java.io.PrintStream;
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class CountryReportMenuTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//    @Autowired
+//    private ContactRepository contactRepository;
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    @Autowired
+//    private CountryReportMenu test;
+//
+//    String colorMain = "\033[0;33m";
+//    String colorMainBold = "\033[1;37m";
+//    String colorHeadline = "\033[0;34m";
+//    String colorHeadlineBold = "\033[1;34m";
+//    String colorTable = "\033[1;32m";
+//    String reset = "\u001B[0m";
+//    String os = System.getProperty("os.name").toLowerCase();
+//
+//    List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    List<LeadRequestDTO> leadRequestDTOS;
+//    List<ContactRequestDTO> contactRequestDTOS;
+//    List<OpportunityRequestDTO> opportunities;
+//    List<AccountRequestDTO> accountRequestDTOS;
+//    String expectedOutput;
+//
+//    @BeforeEach
+//    void setUp() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, InvalidCountryException, EmailNotValidException, PhoneNumberContainsLettersException {
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Brown")
+//        ));
+//
+//        leadRequestDTOS = leadRepository.saveAll(List.of(
+//                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(0))
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
+//        ));
+//
+//        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
+//        contactRepository.save(contactRequestDTOS.get(0));
+//        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
+//        contactRepository.save(contactRequestDTOS.get(1));
+//        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
+//        contactRepository.save(contactRequestDTOS.get(2));
+//
+//        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
+//        opportunityRepository.save(opportunities.get(0));
+//        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
+//        opportunityRepository.save(opportunities.get(1));
+//        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
+//        opportunityRepository.save(opportunities.get(2));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//    }
+//
+//
+//    @Test
+//    void countryReportMenu() throws NoSuchValueException, AWTException {
+//
+//        String data = "report opportunity by country \n\n";
+//
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.countryReportMenu();
+//            assertTrue(outContent.toString().contains("Opportunity"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//    }
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenuTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenuTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/menus/CityReportMenuTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenuTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/menus/CityReportMenuTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenuTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/menus/CityReportMenuTest.java	
@@ -1,196 +1,196 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.awt.*;
-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.io.InputStream;
-import java.io.PrintStream;
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class CityReportMenuTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private LeadRepository leadRepository;
-    @Autowired
-    private ContactRepository contactRepository;
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-    @Autowired
-    private AccountRepository accountRepository;
-
-    @Autowired
-    private CityReportMenu test;
-
-    String colorMain = "\033[0;33m";
-    String colorMainBold = "\033[1;37m";
-    String colorHeadline = "\033[0;34m";
-    String colorHeadlineBold = "\033[1;34m";
-    String colorTable = "\033[1;32m";
-    String reset = "\u001B[0m";
-    String os = System.getProperty("os.name").toLowerCase();
-
-    List<SalesRepRequestDTO> salesRepRequestDTOS;
-    List<LeadRequestDTO> leadRequestDTOS;
-    List<ContactRequestDTO> contactRequestDTOS;
-    List<OpportunityRequestDTO> opportunities;
-    List<AccountRequestDTO> accountRequestDTOS;
-    String expectedOutput;
-
-    @BeforeEach
-    public void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
-        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
-                new SalesRepRequestDTO("David Brown"),
-                new SalesRepRequestDTO("Marta Stewart")
-        ));
-
-        leadRequestDTOS = leadRepository.saveAll(List.of(
-                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
-                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(1))
-        ));
-
-        contactRequestDTOS = contactRepository.saveAll(List.of(
-                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
-                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
-                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
-
-        ));
-
-        opportunities = opportunityRepository.saveAll(List.of(
-                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
-                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
-
-        ));
-
-        accountRequestDTOS = accountRepository.saveAll(List.of(
-                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
-                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
-                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
-        ));
-
-        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
-        contactRepository.save(contactRequestDTOS.get(0));
-        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
-        contactRepository.save(contactRequestDTOS.get(1));
-        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
-        contactRepository.save(contactRequestDTOS.get(2));
-
-        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
-        opportunityRepository.save(opportunities.get(0));
-        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
-        opportunityRepository.save(opportunities.get(1));
-        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
-        opportunityRepository.save(opportunities.get(2));
-    }
-
-    @AfterEach
-    void tearDown() {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        salesRepRepository.deleteAll();
-        accountRepository.deleteAll();
-    }
-
-    @Test
-    public void CityReportMenu_ReportOppByCity() throws NoSuchValueException, AWTException {
-        String data = "report opportunity by city \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.cityReportMenu();
-            assertTrue(outContent.toString().contains("London"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    public void CityReportMenu_ReportOppByCityOpen() throws NoSuchValueException, AWTException {
-        String data = "report open by city \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.cityReportMenu();
-            assertTrue(outContent.toString().contains("London"));
-            assertTrue(outContent.toString().contains("Madrid"));
-            assertTrue(outContent.toString().contains("Paris"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-    @Test
-    public void CityReportMenu_ReportOppByCityWon() throws NoSuchValueException, AWTException {
-        opportunities.get(0).setStatus(Status.CLOSED_WON);
-        opportunityRepository.save(opportunities.get(0));
-        String data = "report closed-won by city \n\n";
-        InputStream stdin = System.in;
-
-        try {
-            System.setIn(new ByteArrayInputStream(data.getBytes()));
-            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-            System.setOut(new PrintStream(outContent));
-            test.cityReportMenu();
-            assertTrue(outContent.toString().contains("London"));
-            assertTrue(outContent.toString().contains("Report"));
-
-        } finally {
-            System.setIn(stdin);
-        }
-    }
-
-        @Test
-        public void CityReportMenu_ReportOppByCityLost() throws NoSuchValueException, AWTException {
-            opportunities.get(1).setStatus(Status.CLOSED_LOST);
-            opportunityRepository.save(opportunities.get(1));
-            String data = "report closed-lost by city \n\n";
-            InputStream stdin = System.in;
-
-            try {
-                System.setIn(new ByteArrayInputStream(data.getBytes()));
-                ByteArrayOutputStream outContent = new ByteArrayOutputStream();
-                System.setOut(new PrintStream(outContent));
-                test.cityReportMenu();
-                assertTrue(outContent.toString().contains("Madrid"));
-                assertTrue(outContent.toString().contains("Report"));
-
-            } finally {
-                System.setIn(stdin);
-            }
-    }
-
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.menus;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.dto.*;
+//import com.ironhack.menuservice.enums.Industry;
+//import com.ironhack.menuservice.enums.Status;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.awt.*;
+//import java.io.ByteArrayInputStream;
+//import java.io.ByteArrayOutputStream;
+//import java.io.InputStream;
+//import java.io.PrintStream;
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class CityReportMenuTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//    @Autowired
+//    private ContactRepository contactRepository;
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    @Autowired
+//    private CityReportMenu test;
+//
+//    String colorMain = "\033[0;33m";
+//    String colorMainBold = "\033[1;37m";
+//    String colorHeadline = "\033[0;34m";
+//    String colorHeadlineBold = "\033[1;34m";
+//    String colorTable = "\033[1;32m";
+//    String reset = "\u001B[0m";
+//    String os = System.getProperty("os.name").toLowerCase();
+//
+//    List<SalesRepRequestDTO> salesRepRequestDTOS;
+//    List<LeadRequestDTO> leadRequestDTOS;
+//    List<ContactRequestDTO> contactRequestDTOS;
+//    List<OpportunityRequestDTO> opportunities;
+//    List<AccountRequestDTO> accountRequestDTOS;
+//    String expectedOutput;
+//
+//    @BeforeEach
+//    public void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, InvalidCountryException {
+//        salesRepRequestDTOS = salesRepRepository.saveAll(List.of(
+//                new SalesRepRequestDTO("David Brown"),
+//                new SalesRepRequestDTO("Marta Stewart")
+//        ));
+//
+//        leadRequestDTOS = leadRepository.saveAll(List.of(
+//                new LeadRequestDTO("Roger Federer", "123456789", "feds@gmail.co", "Wings of Freedom", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Axel Rose", "980651164", "ax@gmail.com", "Roses", salesRepRequestDTOS.get(0)),
+//                new LeadRequestDTO("Lionel Messi", "563782789", "messi@yahoo.com", "Still Not Retired", salesRepRequestDTOS.get(1))
+//        ));
+//
+//        contactRequestDTOS = contactRepository.saveAll(List.of(
+//                new ContactRequestDTO("John Dowe", "123475357", "alfa@beta.uk", "Kałasznikow", salesRepRequestDTOS.get(0)),
+//                new ContactRequestDTO("Marta Steward", "123475357", "ms@wp.pl", "My own company", salesRepRequestDTOS.get(1)),
+//                new ContactRequestDTO("George Trumane", "123475357", "thisisverylongemail@gmail.com", "Truman Show", salesRepRequestDTOS.get(0))
+//
+//        ));
+//
+//        opportunities = opportunityRepository.saveAll(List.of(
+//                new OpportunityRequestDTO(Truck.FLATBED, 10, contactRequestDTOS.get(0), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.BOX, 1150, contactRequestDTOS.get(1), salesRepRequestDTOS.get(0)),
+//                new OpportunityRequestDTO(Truck.HYBRID, 1, contactRequestDTOS.get(2), salesRepRequestDTOS.get(1))
+//
+//        ));
+//
+//        accountRequestDTOS = accountRepository.saveAll(List.of(
+//                new AccountRequestDTO(Industry.PRODUCE, 50, "London", "UNITED KINGDOM", contactRequestDTOS.get(0), opportunities.get(0)),
+//                new AccountRequestDTO(Industry.ECOMMERCE, 500, "Madrid", "SPAIN", contactRequestDTOS.get(1), opportunities.get(1)),
+//                new AccountRequestDTO(Industry.MANUFACTURING, 20, "Paris", "FRANCE", contactRequestDTOS.get(2), opportunities.get(2))
+//        ));
+//
+//        contactRequestDTOS.get(0).setAccount(accountRequestDTOS.get(0));
+//        contactRepository.save(contactRequestDTOS.get(0));
+//        contactRequestDTOS.get(1).setAccount(accountRequestDTOS.get(1));
+//        contactRepository.save(contactRequestDTOS.get(1));
+//        contactRequestDTOS.get(2).setAccount(accountRequestDTOS.get(2));
+//        contactRepository.save(contactRequestDTOS.get(2));
+//
+//        opportunities.get(0).setAccountRequestDTO(accountRequestDTOS.get(0));
+//        opportunityRepository.save(opportunities.get(0));
+//        opportunities.get(1).setAccountRequestDTO(accountRequestDTOS.get(1));
+//        opportunityRepository.save(opportunities.get(1));
+//        opportunities.get(2).setAccountRequestDTO(accountRequestDTOS.get(2));
+//        opportunityRepository.save(opportunities.get(2));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//        accountRepository.deleteAll();
+//    }
+//
+//    @Test
+//    public void CityReportMenu_ReportOppByCity() throws NoSuchValueException, AWTException {
+//        String data = "report opportunity by city \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.cityReportMenu();
+//            assertTrue(outContent.toString().contains("London"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    public void CityReportMenu_ReportOppByCityOpen() throws NoSuchValueException, AWTException {
+//        String data = "report open by city \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.cityReportMenu();
+//            assertTrue(outContent.toString().contains("London"));
+//            assertTrue(outContent.toString().contains("Madrid"));
+//            assertTrue(outContent.toString().contains("Paris"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//    @Test
+//    public void CityReportMenu_ReportOppByCityWon() throws NoSuchValueException, AWTException {
+//        opportunities.get(0).setStatus(Status.CLOSED_WON);
+//        opportunityRepository.save(opportunities.get(0));
+//        String data = "report closed-won by city \n\n";
+//        InputStream stdin = System.in;
+//
+//        try {
+//            System.setIn(new ByteArrayInputStream(data.getBytes()));
+//            ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//            System.setOut(new PrintStream(outContent));
+//            test.cityReportMenu();
+//            assertTrue(outContent.toString().contains("London"));
+//            assertTrue(outContent.toString().contains("Report"));
+//
+//        } finally {
+//            System.setIn(stdin);
+//        }
+//    }
+//
+//        @Test
+//        public void CityReportMenu_ReportOppByCityLost() throws NoSuchValueException, AWTException {
+//            opportunities.get(1).setStatus(Status.CLOSED_LOST);
+//            opportunityRepository.save(opportunities.get(1));
+//            String data = "report closed-lost by city \n\n";
+//            InputStream stdin = System.in;
+//
+//            try {
+//                System.setIn(new ByteArrayInputStream(data.getBytes()));
+//                ByteArrayOutputStream outContent = new ByteArrayOutputStream();
+//                System.setOut(new PrintStream(outContent));
+//                test.cityReportMenu();
+//                assertTrue(outContent.toString().contains("Madrid"));
+//                assertTrue(outContent.toString().contains("Report"));
+//
+//            } finally {
+//                System.setIn(stdin);
+//            }
+//    }
+//
+//
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/LeadRequestDTOTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/LeadRequestDTOTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/dao/LeadRequestDTOTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/LeadRequestDTOTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/dao/LeadRequestDTOTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/LeadRequestDTOTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/dao/LeadRequestDTOTest.java	
@@ -1,122 +1,122 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dao;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.LeadRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.Assert;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-
-class LeadRequestDTOTest {
-
-    private LeadRequestDTO leadRequestDTO1;
-
-
-    @BeforeEach
-    void setUp() throws NameContainsNumbersException, EmptyStringException, ExceedsMaxLength, EmailNotValidException, PhoneNumberContainsLettersException {
-        leadRequestDTO1 = new LeadRequestDTO("TestOne", "123546", "test1@test.gmail.com", "TestCompany1");
-
-
-    }
-
-    @AfterEach
-    void tearDown() {
-
-    }
-
-    @Test
-    void setName_shouldWork() throws NameContainsNumbersException, EmptyStringException, ExceedsMaxLength {
-        leadRequestDTO1.setName("Carlos Vasquéz");
-        assertEquals("Carlos Vasquéz", leadRequestDTO1.getName());
-
-    }
-
-    @Test
-    void setName_throwsException_EmptyString() {
-        Assert.assertThrows(EmptyStringException.class, () -> { leadRequestDTO1.setName("");});
-    }
-
-    @Test
-    void setName_throwsException_ContainsNumbers() {
-        Assert.assertThrows(NameContainsNumbersException.class, () -> { leadRequestDTO1.setName("Lee1");});
-    }
-
-    @Test
-    void setName_throwsException_ExceedsMaxCharacters() {
-        Assert.assertThrows(ExceedsMaxLength.class, () -> { leadRequestDTO1.setName("Arbitrary Name" +
-                "to test if the name exceeds the max length of forty three characters");});
-    }
-
-
-    @Test
-    void setPhoneNumber_shouldWork() throws EmptyStringException, ExceedsMaxLength, PhoneNumberContainsLettersException {
-        leadRequestDTO1.setPhoneNumber("123456");
-        assertEquals("123456", leadRequestDTO1.getPhoneNumber());
-
-    }
-
-    @Test
-    void setPhoneNumber_throwsException_EmptyString() {
-        Assert.assertThrows(EmptyStringException.class, () -> { leadRequestDTO1.setPhoneNumber("");});
-    }
-
-    @Test
-    void setPhoneNumber_throwsException_ContainsNumbers() {
-        Assert.assertThrows(PhoneNumberContainsLettersException.class, () -> { leadRequestDTO1.setPhoneNumber("123a56");});
-    }
-
-    @Test
-    void setPhoneNumber_throwsException_ExceedsMaxCharacters() {
-        Assert.assertThrows(ExceedsMaxLength.class, () -> { leadRequestDTO1.setPhoneNumber("12345678901234567890123");});
-    }
-
-    @Test
-    void setEmail_shouldWork() throws EmptyStringException, EmailNotValidException, ExceedsMaxLength {
-        leadRequestDTO1.setEmail("lead2@mail.com");
-        assertEquals("lead2@mail.com", leadRequestDTO1.getEmail());
-    }
-
-    @Test
-    void setEmail_throwsException_EmptyString() {
-        Assert.assertThrows(EmptyStringException.class, () -> { leadRequestDTO1.setEmail("");});
-    }
-
-    @Test
-    void setEmail_throwsException_InvalidEmail() {
-
-        //Wrong Format - Missing @
-        Assert.assertThrows(EmailNotValidException.class, () -> { leadRequestDTO1.setEmail("lead1mail.com");});
-
-        //Wrong Format - Missing .
-        Assert.assertThrows(EmailNotValidException.class, () -> { leadRequestDTO1.setEmail("lead1@mailcom");});
-
-        // Invalid TLD
-        Assert.assertThrows(EmailNotValidException.class, () -> { leadRequestDTO1.setEmail("lead1@mail.crom");});
-    }
-
-     @Test
-    void setEmail_throwsException_ExceedsMaxCharacters() {
-         Assert.assertThrows(ExceedsMaxLength.class, () -> { leadRequestDTO1.setEmail("lead1withalotofcharactersfortesting@mail.com");});
-     }
-
-    @Test
-    void setCompanyName_shouldWork() throws EmptyStringException, ExceedsMaxLength {
-        leadRequestDTO1.setCompanyName("Company of Lead 1");
-        assertEquals("Company of Lead 1", leadRequestDTO1.getCompanyName());
-    }
-
-
-    @Test
-    void setCompanyName_throwsException_EmptyString() {
-        Assert.assertThrows(EmptyStringException.class, () -> { leadRequestDTO1.setCompanyName("");});
-    }
-
-    @Test
-    void setCompanyName_throwsException_ExceedsMaxCharacters() {
-        Assert.assertThrows(ExceedsMaxLength.class, () -> { leadRequestDTO1.setCompanyName("This is an extra long company" +
-                "name with some extra characters");});
-    }
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.dao;
+//
+//import com.ironhack.menuservice.dto.LeadRequestDTO;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.Assert;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//
+//import static org.junit.jupiter.api.Assertions.assertEquals;
+//
+//class LeadRequestDTOTest {
+//
+//    private LeadRequestDTO leadRequestDTO1;
+//
+//
+//    @BeforeEach
+//    void setUp() throws NameContainsNumbersException, EmptyStringException, ExceedsMaxLength, EmailNotValidException, PhoneNumberContainsLettersException {
+//        leadRequestDTO1 = new LeadRequestDTO("TestOne", "123546", "test1@test.gmail.com", "TestCompany1");
+//
+//
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//
+//    }
+//
+//    @Test
+//    void setName_shouldWork() throws NameContainsNumbersException, EmptyStringException, ExceedsMaxLength {
+//        leadRequestDTO1.setName("Carlos Vasquéz");
+//        assertEquals("Carlos Vasquéz", leadRequestDTO1.getName());
+//
+//    }
+//
+//    @Test
+//    void setName_throwsException_EmptyString() {
+//        Assert.assertThrows(EmptyStringException.class, () -> { leadRequestDTO1.setName("");});
+//    }
+//
+//    @Test
+//    void setName_throwsException_ContainsNumbers() {
+//        Assert.assertThrows(NameContainsNumbersException.class, () -> { leadRequestDTO1.setName("Lee1");});
+//    }
+//
+//    @Test
+//    void setName_throwsException_ExceedsMaxCharacters() {
+//        Assert.assertThrows(ExceedsMaxLength.class, () -> { leadRequestDTO1.setName("Arbitrary Name" +
+//                "to test if the name exceeds the max length of forty three characters");});
+//    }
+//
+//
+//    @Test
+//    void setPhoneNumber_shouldWork() throws EmptyStringException, ExceedsMaxLength, PhoneNumberContainsLettersException {
+//        leadRequestDTO1.setPhoneNumber("123456");
+//        assertEquals("123456", leadRequestDTO1.getPhoneNumber());
+//
+//    }
+//
+//    @Test
+//    void setPhoneNumber_throwsException_EmptyString() {
+//        Assert.assertThrows(EmptyStringException.class, () -> { leadRequestDTO1.setPhoneNumber("");});
+//    }
+//
+//    @Test
+//    void setPhoneNumber_throwsException_ContainsNumbers() {
+//        Assert.assertThrows(PhoneNumberContainsLettersException.class, () -> { leadRequestDTO1.setPhoneNumber("123a56");});
+//    }
+//
+//    @Test
+//    void setPhoneNumber_throwsException_ExceedsMaxCharacters() {
+//        Assert.assertThrows(ExceedsMaxLength.class, () -> { leadRequestDTO1.setPhoneNumber("12345678901234567890123");});
+//    }
+//
+//    @Test
+//    void setEmail_shouldWork() throws EmptyStringException, EmailNotValidException, ExceedsMaxLength {
+//        leadRequestDTO1.setEmail("lead2@mail.com");
+//        assertEquals("lead2@mail.com", leadRequestDTO1.getEmail());
+//    }
+//
+//    @Test
+//    void setEmail_throwsException_EmptyString() {
+//        Assert.assertThrows(EmptyStringException.class, () -> { leadRequestDTO1.setEmail("");});
+//    }
+//
+//    @Test
+//    void setEmail_throwsException_InvalidEmail() {
+//
+//        //Wrong Format - Missing @
+//        Assert.assertThrows(EmailNotValidException.class, () -> { leadRequestDTO1.setEmail("lead1mail.com");});
+//
+//        //Wrong Format - Missing .
+//        Assert.assertThrows(EmailNotValidException.class, () -> { leadRequestDTO1.setEmail("lead1@mailcom");});
+//
+//        // Invalid TLD
+//        Assert.assertThrows(EmailNotValidException.class, () -> { leadRequestDTO1.setEmail("lead1@mail.crom");});
+//    }
+//
+//     @Test
+//    void setEmail_throwsException_ExceedsMaxCharacters() {
+//         Assert.assertThrows(ExceedsMaxLength.class, () -> { leadRequestDTO1.setEmail("lead1withalotofcharactersfortesting@mail.com");});
+//     }
+//
+//    @Test
+//    void setCompanyName_shouldWork() throws EmptyStringException, ExceedsMaxLength {
+//        leadRequestDTO1.setCompanyName("Company of Lead 1");
+//        assertEquals("Company of Lead 1", leadRequestDTO1.getCompanyName());
+//    }
+//
+//
+//    @Test
+//    void setCompanyName_throwsException_EmptyString() {
+//        Assert.assertThrows(EmptyStringException.class, () -> { leadRequestDTO1.setCompanyName("");});
+//    }
+//
+//    @Test
+//    void setCompanyName_throwsException_ExceedsMaxCharacters() {
+//        Assert.assertThrows(ExceedsMaxLength.class, () -> { leadRequestDTO1.setCompanyName("This is an extra long company" +
+//                "name with some extra characters");});
+//    }
+//
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/ContactRequestDTOTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/ContactRequestDTOTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/dao/ContactRequestDTOTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/ContactRequestDTOTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/dao/ContactRequestDTOTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/ContactRequestDTOTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/dao/ContactRequestDTOTest.java	
@@ -1,113 +1,113 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dao;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.ContactRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.Assert;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-class ContactRequestDTOTest {
-
-    ContactRequestDTO contactRequestDTO1;
-
-    @BeforeEach
-    void setUp() throws NameContainsNumbersException, EmptyStringException, ExceedsMaxLength, EmailNotValidException, PhoneNumberContainsLettersException {
-        contactRequestDTO1 = new ContactRequestDTO("TestOne", "123546", "test1@test.gmail.com", "TestCompany1");
-    }
-
-    @Test
-    void setName_shouldWork() throws NameContainsNumbersException, EmptyStringException, ExceedsMaxLength {
-        contactRequestDTO1.setName("Carlos Vasquéz");
-        assertEquals("Carlos Vasquéz", contactRequestDTO1.getName());
-    }
-
-    @Test
-    void setName_throwsException_EmptyString() {
-        Assert.assertThrows(EmptyStringException.class, () -> { contactRequestDTO1.setName("");});
-    }
-
-    @Test
-    void setName_throwsException_ContainsNumbers() {
-        Assert.assertThrows(NameContainsNumbersException.class, () -> { contactRequestDTO1.setName("Lee1");});
-    }
-
-    @Test
-    void setName_throwsException_ExceedsMaxCharacters() {
-        Assert.assertThrows(ExceedsMaxLength.class, () -> { contactRequestDTO1.setName("Arbitrary Name" +
-                "to test if the name exceeds the max length of forty three characters");});
-    }
-
-
-    @Test
-    void setPhoneNumber_shouldWork() throws EmptyStringException, ExceedsMaxLength, PhoneNumberContainsLettersException {
-        contactRequestDTO1.setPhoneNumber("123456");
-        assertEquals("123456", contactRequestDTO1.getPhoneNumber());
-
-    }
-
-    @Test
-    void setPhoneNumber_throwsException_EmptyString() {
-        Assert.assertThrows(EmptyStringException.class, () -> { contactRequestDTO1.setPhoneNumber("");});
-    }
-
-    @Test
-    void setPhoneNumber_throwsException_ContainsNumbers() {
-        Assert.assertThrows(PhoneNumberContainsLettersException.class, () -> { contactRequestDTO1.setPhoneNumber("123a56");});
-    }
-
-    @Test
-    void setPhoneNumber_throwsException_ExceedsMaxCharacters() {
-        Assert.assertThrows(ExceedsMaxLength.class, () -> { contactRequestDTO1.setPhoneNumber("12345678901234567890123");});
-    }
-
-    @Test
-    void setEmail_shouldWork() throws EmptyStringException, EmailNotValidException, ExceedsMaxLength {
-        contactRequestDTO1.setEmail("contact1@mail.com");
-        assertEquals("contact1@mail.com", contactRequestDTO1.getEmail());
-    }
-
-    @Test
-    void setEmail_throwsException_EmptyString() {
-        Assert.assertThrows(EmptyStringException.class, () -> { contactRequestDTO1.setEmail("");});
-    }
-
-    @Test
-    void setEmail_throwsException_InvalidEmail() {
-
-        //Wrong Format - Missing @
-        Assert.assertThrows(EmailNotValidException.class, () -> { contactRequestDTO1.setEmail("contact1mail.com");});
-
-        //Wrong Format - Missing .
-        Assert.assertThrows(EmailNotValidException.class, () -> { contactRequestDTO1.setEmail("contact1@mailcom");});
-
-        // Invalid TLD
-        Assert.assertThrows(EmailNotValidException.class, () -> { contactRequestDTO1.setEmail("contact1@mail.crom");});
-    }
-
-    @Test
-    void setEmail_throwsException_ExceedsMaxCharacters() {
-        Assert.assertThrows(ExceedsMaxLength.class, () -> { contactRequestDTO1.setEmail("lead1withalotofcharactersfortesting@mail.com");});
-    }
-
-    @Test
-    void setCompanyName_shouldWork() throws EmptyStringException, ExceedsMaxLength {
-        contactRequestDTO1.setCompanyName("Company of Contact 1");
-        assertEquals("Company of Contact 1", contactRequestDTO1.getCompanyName());
-    }
-
-
-    @Test
-    void setCompanyName_throwsException_EmptyString() {
-        Assert.assertThrows(EmptyStringException.class, () -> { contactRequestDTO1.setCompanyName("");});
-    }
-
-    @Test
-    void setCompanyName_throwsException_ExceedsMaxCharacters() {
-        Assert.assertThrows(ExceedsMaxLength.class, () -> { contactRequestDTO1.setCompanyName("This is an extra long company" +
-                "name with some extra characters");});
-    }
-
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.dao;
+//
+//import com.ironhack.menuservice.dto.ContactRequestDTO;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.Assert;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//class ContactRequestDTOTest {
+//
+//    ContactRequestDTO contactRequestDTO1;
+//
+//    @BeforeEach
+//    void setUp() throws NameContainsNumbersException, EmptyStringException, ExceedsMaxLength, EmailNotValidException, PhoneNumberContainsLettersException {
+//        contactRequestDTO1 = new ContactRequestDTO("TestOne", "123546", "test1@test.gmail.com", "TestCompany1");
+//    }
+//
+//    @Test
+//    void setName_shouldWork() throws NameContainsNumbersException, EmptyStringException, ExceedsMaxLength {
+//        contactRequestDTO1.setName("Carlos Vasquéz");
+//        assertEquals("Carlos Vasquéz", contactRequestDTO1.getName());
+//    }
+//
+//    @Test
+//    void setName_throwsException_EmptyString() {
+//        Assert.assertThrows(EmptyStringException.class, () -> { contactRequestDTO1.setName("");});
+//    }
+//
+//    @Test
+//    void setName_throwsException_ContainsNumbers() {
+//        Assert.assertThrows(NameContainsNumbersException.class, () -> { contactRequestDTO1.setName("Lee1");});
+//    }
+//
+//    @Test
+//    void setName_throwsException_ExceedsMaxCharacters() {
+//        Assert.assertThrows(ExceedsMaxLength.class, () -> { contactRequestDTO1.setName("Arbitrary Name" +
+//                "to test if the name exceeds the max length of forty three characters");});
+//    }
+//
+//
+//    @Test
+//    void setPhoneNumber_shouldWork() throws EmptyStringException, ExceedsMaxLength, PhoneNumberContainsLettersException {
+//        contactRequestDTO1.setPhoneNumber("123456");
+//        assertEquals("123456", contactRequestDTO1.getPhoneNumber());
+//
+//    }
+//
+//    @Test
+//    void setPhoneNumber_throwsException_EmptyString() {
+//        Assert.assertThrows(EmptyStringException.class, () -> { contactRequestDTO1.setPhoneNumber("");});
+//    }
+//
+//    @Test
+//    void setPhoneNumber_throwsException_ContainsNumbers() {
+//        Assert.assertThrows(PhoneNumberContainsLettersException.class, () -> { contactRequestDTO1.setPhoneNumber("123a56");});
+//    }
+//
+//    @Test
+//    void setPhoneNumber_throwsException_ExceedsMaxCharacters() {
+//        Assert.assertThrows(ExceedsMaxLength.class, () -> { contactRequestDTO1.setPhoneNumber("12345678901234567890123");});
+//    }
+//
+//    @Test
+//    void setEmail_shouldWork() throws EmptyStringException, EmailNotValidException, ExceedsMaxLength {
+//        contactRequestDTO1.setEmail("contact1@mail.com");
+//        assertEquals("contact1@mail.com", contactRequestDTO1.getEmail());
+//    }
+//
+//    @Test
+//    void setEmail_throwsException_EmptyString() {
+//        Assert.assertThrows(EmptyStringException.class, () -> { contactRequestDTO1.setEmail("");});
+//    }
+//
+//    @Test
+//    void setEmail_throwsException_InvalidEmail() {
+//
+//        //Wrong Format - Missing @
+//        Assert.assertThrows(EmailNotValidException.class, () -> { contactRequestDTO1.setEmail("contact1mail.com");});
+//
+//        //Wrong Format - Missing .
+//        Assert.assertThrows(EmailNotValidException.class, () -> { contactRequestDTO1.setEmail("contact1@mailcom");});
+//
+//        // Invalid TLD
+//        Assert.assertThrows(EmailNotValidException.class, () -> { contactRequestDTO1.setEmail("contact1@mail.crom");});
+//    }
+//
+//    @Test
+//    void setEmail_throwsException_ExceedsMaxCharacters() {
+//        Assert.assertThrows(ExceedsMaxLength.class, () -> { contactRequestDTO1.setEmail("lead1withalotofcharactersfortesting@mail.com");});
+//    }
+//
+//    @Test
+//    void setCompanyName_shouldWork() throws EmptyStringException, ExceedsMaxLength {
+//        contactRequestDTO1.setCompanyName("Company of Contact 1");
+//        assertEquals("Company of Contact 1", contactRequestDTO1.getCompanyName());
+//    }
+//
+//
+//    @Test
+//    void setCompanyName_throwsException_EmptyString() {
+//        Assert.assertThrows(EmptyStringException.class, () -> { contactRequestDTO1.setCompanyName("");});
+//    }
+//
+//    @Test
+//    void setCompanyName_throwsException_ExceedsMaxCharacters() {
+//        Assert.assertThrows(ExceedsMaxLength.class, () -> { contactRequestDTO1.setCompanyName("This is an extra long company" +
+//                "name with some extra characters");});
+//    }
+//
+//
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/AccountRequestDTOTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/AccountRequestDTOTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/dao/AccountRequestDTOTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/AccountRequestDTOTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/dao/AccountRequestDTOTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/AccountRequestDTOTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/dao/AccountRequestDTOTest.java	
@@ -1,90 +1,90 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dao;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.AccountRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.ContactRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.OpportunityRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.Assert;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-
-class AccountRequestDTOTest {
-
-    AccountRequestDTO acc;
-
-
-    @BeforeEach
-    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException,
-            ExceedsMaxLength, PhoneNumberContainsLettersException {
-        acc = new AccountRequestDTO(new ContactRequestDTO("TestOne", "123546", "test1@test.gmail.com",
-                "TestCompany1"), new OpportunityRequestDTO(Truck.BOX, 200, new ContactRequestDTO("TestOne",
-                "123546", "test1@test.gmail.com", "TestCompany1")));
-    }
-
-    @AfterEach
-    void tearDown() {
-
-    }
-
-    @Test
-    void setEmployeeCount_shouldWork() throws ExceedsMaxLength {
-        acc.setEmployeeCount(2);
-        assertEquals(2, acc.getEmployeeCount());
-    }
-
-    @Test
-    void setEmployeeCount_throwsException_IllegalArgument() {
-        Assert.assertThrows(IllegalArgumentException.class, () -> { acc.setEmployeeCount(0);});
-    }
-
-    @Test
-    void setCity_shouldWork() throws EmptyStringException, NameContainsNumbersException, ExceedsMaxLength {
-        acc.setCity("Dubai");
-        assertEquals("Dubai", acc.getCity());
-    }
-
-    @Test
-    void setCity_throwsException_EmptyString() {
-        Assert.assertThrows(EmptyStringException.class, () -> { acc.setCity("");});
-    }
-
-
-    @Test
-    void setCity_throwsException_ContainsNumbers() {
-        Assert.assertThrows(NameContainsNumbersException.class, () -> { acc.setCity("Madr1d");});
-    }
-
-
-    @Test
-    void setCity_throwsException_ExceedsMaxLength() {
-        Assert.assertThrows(ExceedsMaxLength.class, () -> { acc.setCity("Longestnameeverseenonacity");});
-    }
-
-    @Test
-    void setCountry_shouldWork() throws EmptyStringException, InvalidCountryException, ExceedsMaxLength {
-       acc.setCountry("SPAIN");
-      assertEquals("SPAIN", acc.getCountry());
-    }
-
-
-    @Test
-    void setCountry_throwsException_EmptyString() {
-     Assert.assertThrows(EmptyStringException.class, () -> { acc.setCountry("");});
-    }
-
-    @Test
-    void setCountry_throwsException_ExceedsMaxLength() {
-      Assert.assertThrows(ExceedsMaxLength.class, () -> { acc.setCountry("Longest country name really really long");});
-    }
-
-    @Test
-    void setCountry_throwsException_InvalidCountry() {
-      Assert.assertThrows(InvalidCountryException.class, () -> { acc.setCountry("Japun");});
-    }
-
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.dao;
+//
+//import com.ironhack.menuservice.dto.AccountRequestDTO;
+//import com.ironhack.menuservice.dto.ContactRequestDTO;
+//import com.ironhack.menuservice.dto.OpportunityRequestDTO;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.Assert;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//
+//import static org.junit.jupiter.api.Assertions.assertEquals;
+//
+//class AccountRequestDTOTest {
+//
+//    AccountRequestDTO acc;
+//
+//
+//    @BeforeEach
+//    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException,
+//            ExceedsMaxLength, PhoneNumberContainsLettersException {
+//        acc = new AccountRequestDTO(new ContactRequestDTO("TestOne", "123546", "test1@test.gmail.com",
+//                "TestCompany1"), new OpportunityRequestDTO(Truck.BOX, 200, new ContactRequestDTO("TestOne",
+//                "123546", "test1@test.gmail.com", "TestCompany1")));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//
+//    }
+//
+//    @Test
+//    void setEmployeeCount_shouldWork() throws ExceedsMaxLength {
+//        acc.setEmployeeCount(2);
+//        assertEquals(2, acc.getEmployeeCount());
+//    }
+//
+//    @Test
+//    void setEmployeeCount_throwsException_IllegalArgument() {
+//        Assert.assertThrows(IllegalArgumentException.class, () -> { acc.setEmployeeCount(0);});
+//    }
+//
+//    @Test
+//    void setCity_shouldWork() throws EmptyStringException, NameContainsNumbersException, ExceedsMaxLength {
+//        acc.setCity("Dubai");
+//        assertEquals("Dubai", acc.getCity());
+//    }
+//
+//    @Test
+//    void setCity_throwsException_EmptyString() {
+//        Assert.assertThrows(EmptyStringException.class, () -> { acc.setCity("");});
+//    }
+//
+//
+//    @Test
+//    void setCity_throwsException_ContainsNumbers() {
+//        Assert.assertThrows(NameContainsNumbersException.class, () -> { acc.setCity("Madr1d");});
+//    }
+//
+//
+//    @Test
+//    void setCity_throwsException_ExceedsMaxLength() {
+//        Assert.assertThrows(ExceedsMaxLength.class, () -> { acc.setCity("Longestnameeverseenonacity");});
+//    }
+//
+//    @Test
+//    void setCountry_shouldWork() throws EmptyStringException, InvalidCountryException, ExceedsMaxLength {
+//       acc.setCountry("SPAIN");
+//      assertEquals("SPAIN", acc.getCountry());
+//    }
+//
+//
+//    @Test
+//    void setCountry_throwsException_EmptyString() {
+//     Assert.assertThrows(EmptyStringException.class, () -> { acc.setCountry("");});
+//    }
+//
+//    @Test
+//    void setCountry_throwsException_ExceedsMaxLength() {
+//      Assert.assertThrows(ExceedsMaxLength.class, () -> { acc.setCountry("Longest country name really really long");});
+//    }
+//
+//    @Test
+//    void setCountry_throwsException_InvalidCountry() {
+//      Assert.assertThrows(InvalidCountryException.class, () -> { acc.setCountry("Japun");});
+//    }
+//
+//
+//}
\ No newline at end of file
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/PhoneNumberContainsLettersException.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/PhoneNumberContainsLettersException.java b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/PhoneNumberContainsLettersException.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/PhoneNumberContainsLettersException.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/exceptions/PhoneNumberContainsLettersException.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/PhoneNumberContainsLettersException.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/PhoneNumberContainsLettersException.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.exceptions;
+package com.ironhack.menuservice.exceptions;
 
 public class PhoneNumberContainsLettersException extends Exception {
 
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/SalesRepRequestDTOTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/SalesRepRequestDTOTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/dao/SalesRepRequestDTOTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/SalesRepRequestDTOTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/dao/SalesRepRequestDTOTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/SalesRepRequestDTOTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/dao/SalesRepRequestDTOTest.java	
@@ -1,79 +1,79 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dao;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.LeadRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.SalesRepRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.Assert;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-
-import java.util.ArrayList;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-class SalesRepRequestDTOTest {
-
-    private SalesRepRequestDTO sr1;
-    private LeadRequestDTO leadRequestDTO1;
-
-    @BeforeEach
-    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, IdContainsLettersException {
-        sr1 = new SalesRepRequestDTO(1L, "Sales Rep Name", new ArrayList<>(), new ArrayList<>());
-        leadRequestDTO1 = new LeadRequestDTO("TestOne", "123546", "test1@test.gmail.com", "TestCompany1", sr1);
-    }
-
-    @AfterEach
-    void tearDown() throws EmptyStringException, ExceedsMaxLength, IdContainsLettersException {
-        sr1.removeLead(leadRequestDTO1);
-    }
-
-    @Test
-    void setName_shouldWork() throws NameContainsNumbersException, EmptyStringException, ExceedsMaxLength {
-        sr1.setName("Carlos Vasquéz");
-        assertEquals("Carlos Vasquéz", sr1.getRepName());
-    }
-
-    @Test
-    void setName_throwsException_EmptyString() {
-        Assert.assertThrows(EmptyStringException.class, () -> sr1.setName(""));
-    }
-
-    @Test
-    void setName_throwsException_ContainsNumbers() {
-        Assert.assertThrows(NameContainsNumbersException.class, () -> sr1.setName("Lee1"));
-    }
-
-    @Test
-    void setName_throwsException_ExceedsMaxCharacters() {
-        Assert.assertThrows(ExceedsMaxLength.class, () -> sr1.setName("Arbitrary Name" +
-                "to test if the name exceeds the max length of forty three characters"));
-    }
-
-   @Test
-    void addLead_shouldWork() throws EmptyStringException, ExceedsMaxLength, IdContainsLettersException {
-        int arraySizeBefore = sr1.getLeadList().size();
-        sr1.addLead(leadRequestDTO1);
-        int arraySizeAfter=sr1.getLeadList().size();
-        assertEquals(arraySizeBefore+1, arraySizeAfter);
-    }
-
-   @Test
-    void removeLead_shouldWork_ArrayNotEmpty() throws EmptyStringException, ExceedsMaxLength, IdContainsLettersException {
-        sr1.addLead(leadRequestDTO1);
-        int arraySizeBefore = sr1.getLeadList().size();
-        sr1.removeLead(leadRequestDTO1);
-        int arraySizeAfter=sr1.getLeadList().size();
-        assertEquals(arraySizeBefore-1, arraySizeAfter);
-    }
-
-    @Test
-    void removeLead_shouldWork_ArrayEmpty() throws EmptyStringException, ExceedsMaxLength, IdContainsLettersException {
-        assertEquals(0,sr1.getLeadList().size());
-        sr1.removeLead(leadRequestDTO1);
-        int arraySizeAfter=sr1.getLeadList().size();
-        assertEquals(0, arraySizeAfter);
-    }
-
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.dao;
+//
+//import com.ironhack.menuservice.dto.LeadRequestDTO;
+//import com.ironhack.menuservice.dto.SalesRepRequestDTO;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.Assert;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//
+//import java.util.ArrayList;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//class SalesRepRequestDTOTest {
+//
+//    private SalesRepRequestDTO sr1;
+//    private LeadRequestDTO leadRequestDTO1;
+//
+//    @BeforeEach
+//    void setUp() throws NameContainsNumbersException, EmptyStringException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException, IdContainsLettersException {
+//        sr1 = new SalesRepRequestDTO(1L, "Sales Rep Name", new ArrayList<>(), new ArrayList<>());
+//        leadRequestDTO1 = new LeadRequestDTO("TestOne", "123546", "test1@test.gmail.com", "TestCompany1", sr1);
+//    }
+//
+//    @AfterEach
+//    void tearDown() throws EmptyStringException, ExceedsMaxLength, IdContainsLettersException {
+//        sr1.removeLead(leadRequestDTO1);
+//    }
+//
+//    @Test
+//    void setName_shouldWork() throws NameContainsNumbersException, EmptyStringException, ExceedsMaxLength {
+//        sr1.setName("Carlos Vasquéz");
+//        assertEquals("Carlos Vasquéz", sr1.getRepName());
+//    }
+//
+//    @Test
+//    void setName_throwsException_EmptyString() {
+//        Assert.assertThrows(EmptyStringException.class, () -> sr1.setName(""));
+//    }
+//
+//    @Test
+//    void setName_throwsException_ContainsNumbers() {
+//        Assert.assertThrows(NameContainsNumbersException.class, () -> sr1.setName("Lee1"));
+//    }
+//
+//    @Test
+//    void setName_throwsException_ExceedsMaxCharacters() {
+//        Assert.assertThrows(ExceedsMaxLength.class, () -> sr1.setName("Arbitrary Name" +
+//                "to test if the name exceeds the max length of forty three characters"));
+//    }
+//
+//   @Test
+//    void addLead_shouldWork() throws EmptyStringException, ExceedsMaxLength, IdContainsLettersException {
+//        int arraySizeBefore = sr1.getLeadList().size();
+//        sr1.addLead(leadRequestDTO1);
+//        int arraySizeAfter=sr1.getLeadList().size();
+//        assertEquals(arraySizeBefore+1, arraySizeAfter);
+//    }
+//
+//   @Test
+//    void removeLead_shouldWork_ArrayNotEmpty() throws EmptyStringException, ExceedsMaxLength, IdContainsLettersException {
+//        sr1.addLead(leadRequestDTO1);
+//        int arraySizeBefore = sr1.getLeadList().size();
+//        sr1.removeLead(leadRequestDTO1);
+//        int arraySizeAfter=sr1.getLeadList().size();
+//        assertEquals(arraySizeBefore-1, arraySizeAfter);
+//    }
+//
+//    @Test
+//    void removeLead_shouldWork_ArrayEmpty() throws EmptyStringException, ExceedsMaxLength, IdContainsLettersException {
+//        assertEquals(0,sr1.getLeadList().size());
+//        sr1.removeLead(leadRequestDTO1);
+//        int arraySizeAfter=sr1.getLeadList().size();
+//        assertEquals(0, arraySizeAfter);
+//    }
+//
+//
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabaseTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabaseTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/dao/PopulateDatabaseTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabaseTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/dao/PopulateDatabaseTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/PopulateDatabaseTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/dao/PopulateDatabaseTest.java	
@@ -1,81 +1,81 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dao;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.repository.*;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.boot.test.mock.mockito.MockBean;
-
-import java.util.List;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-@SpringBootTest
-class PopulateDatabaseTest {
-
-    @MockBean
-    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
-
-    @Autowired
-    private OpportunityRepository opportunityRepository;
-
-    @Autowired
-    private SalesRepRepository salesRepRepository;
-
-    @Autowired
-    private ContactRepository contactRepository;
-
-    @Autowired
-    private AccountRepository accountRepository;
-
-    @Autowired
-    private LeadRepository leadRepository;
-
-    @BeforeEach
-    void setUp() throws NameContainsNumbersException, EmptyStringException, InvalidCountryException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
-        PopulateDatabase.populateDatabase( leadRepository, salesRepRepository, contactRepository, opportunityRepository, accountRepository);
-    }
-
-    @AfterEach
-    void tearDown() {
-        leadRepository.deleteAll();
-        opportunityRepository.deleteAll();
-        contactRepository.deleteAll();
-        accountRepository.deleteAll();
-        salesRepRepository.deleteAll();
-    }
-
-
-    @Test
-    void populateDatabase_shouldWork() throws NameContainsNumbersException, EmptyStringException, InvalidCountryException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
-       var leadCount = leadRepository.findAllLeads().size();
-        assertEquals(3, leadCount);
-        var salesRepCount = salesRepRepository.findAllSalesReps().size();
-        assertEquals(2, salesRepCount);
-        var contactCount = contactRepository.findAllContacts().size();
-        assertEquals(3, contactCount);
-        var opportunityCount = opportunityRepository.findAllOpportunities().size();
-        assertEquals(3, opportunityCount);
-        var accountCount = accountRepository.findAllAccounts().size();
-        assertEquals(3, accountCount);
-    }
-
-    @Test
-    void clearDatabase_shouldWork() {
-        PopulateDatabase.clearDatabase(leadRepository, salesRepRepository, contactRepository, opportunityRepository, accountRepository);
-        var leadCount = leadRepository.findAllLeads().size();
-        assertEquals(0, leadCount);
-        var salesRepCount = salesRepRepository.findAllSalesReps().size();
-        assertEquals(0, salesRepCount);
-        var contactCount = contactRepository.findAllContacts().size();
-        assertEquals(0, contactCount);
-        var opportunityCount = opportunityRepository.findAllOpportunities().size();
-        assertEquals(0, opportunityCount);
-        var accountCount = accountRepository.findAllAccounts().size();
-        assertEquals(0, accountCount);
-    }
-}
\ No newline at end of file
+//package com.ironhack.menuservice.dao;
+//
+//import com.ironhack.menuservice.StolenNameTruckingCompanyHomework3Application;
+//import com.ironhack.menuservice.exceptions.*;
+//import com.ironhack.menuservice.repository.*;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.boot.test.mock.mockito.MockBean;
+//
+//import java.util.List;
+//
+//import static org.junit.jupiter.api.Assertions.*;
+//
+//@SpringBootTest
+//class PopulateDatabaseTest {
+//
+//    @MockBean
+//    private StolenNameTruckingCompanyHomework3Application stolenNameTruckingCompanyHomework3Application;
+//
+//    @Autowired
+//    private OpportunityRepository opportunityRepository;
+//
+//    @Autowired
+//    private SalesRepRepository salesRepRepository;
+//
+//    @Autowired
+//    private ContactRepository contactRepository;
+//
+//    @Autowired
+//    private AccountRepository accountRepository;
+//
+//    @Autowired
+//    private LeadRepository leadRepository;
+//
+//    @BeforeEach
+//    void setUp() throws NameContainsNumbersException, EmptyStringException, InvalidCountryException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
+//        PopulateDatabase.populateDatabase( leadRepository, salesRepRepository, contactRepository, opportunityRepository, accountRepository);
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//        leadRepository.deleteAll();
+//        opportunityRepository.deleteAll();
+//        contactRepository.deleteAll();
+//        accountRepository.deleteAll();
+//        salesRepRepository.deleteAll();
+//    }
+//
+//
+//    @Test
+//    void populateDatabase_shouldWork() throws NameContainsNumbersException, EmptyStringException, InvalidCountryException, EmailNotValidException, ExceedsMaxLength, PhoneNumberContainsLettersException {
+//       var leadCount = leadRepository.findAllLeads().size();
+//        assertEquals(3, leadCount);
+//        var salesRepCount = salesRepRepository.findAllSalesReps().size();
+//        assertEquals(2, salesRepCount);
+//        var contactCount = contactRepository.findAllContacts().size();
+//        assertEquals(3, contactCount);
+//        var opportunityCount = opportunityRepository.findAllOpportunities().size();
+//        assertEquals(3, opportunityCount);
+//        var accountCount = accountRepository.findAllAccounts().size();
+//        assertEquals(3, accountCount);
+//    }
+//
+//    @Test
+//    void clearDatabase_shouldWork() {
+//        PopulateDatabase.clearDatabase(leadRepository, salesRepRepository, contactRepository, opportunityRepository, accountRepository);
+//        var leadCount = leadRepository.findAllLeads().size();
+//        assertEquals(0, leadCount);
+//        var salesRepCount = salesRepRepository.findAllSalesReps().size();
+//        assertEquals(0, salesRepCount);
+//        var contactCount = contactRepository.findAllContacts().size();
+//        assertEquals(0, contactCount);
+//        var opportunityCount = opportunityRepository.findAllOpportunities().size();
+//        assertEquals(0, opportunityCount);
+//        var accountCount = accountRepository.findAllAccounts().size();
+//        assertEquals(0, accountCount);
+//    }
+//}
\ No newline at end of file
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/OpportunityRequestDTOTest.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/OpportunityRequestDTOTest.java b/Menu-service/src/test/java/com/ironhack/menuservice/dao/OpportunityRequestDTOTest.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/OpportunityRequestDTOTest.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/dao/OpportunityRequestDTOTest.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/OpportunityRequestDTOTest.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/dao/OpportunityRequestDTOTest.java	
@@ -1,44 +1,44 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dao;
-
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.ContactRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.OpportunityRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import org.junit.Assert;
-import org.junit.jupiter.api.AfterEach;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-
-class OpportunityRequestDTOTest {
-
-    OpportunityRequestDTO opp;
-
-    @BeforeEach
-    void setUp() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, EmailNotValidException,
-            PhoneNumberContainsLettersException {
-         opp = new OpportunityRequestDTO(Truck.BOX, 200, new ContactRequestDTO("TestOne", "123546",
-                "test1@test.gmail.com", "TestCompany1"));
-    }
-
-    @AfterEach
-    void tearDown() {
-
-    }
-
-
-    @Test
-    void setQuantity_shouldWork() throws ExceedsMaxLength {
-        opp.setQuantity(23);
-        assertEquals(23, opp.getQuantity());
-    }
-
-    @Test
-    void setQuantity_throwsException_IllegalArgument() {
-        Assert.assertThrows(IllegalArgumentException.class, () -> { opp.setQuantity(-3);});
-    }
-
-
-}
\ No newline at end of file
+//package com.ironhack.menuservice.dao;
+//
+//import com.ironhack.menuservice.dto.ContactRequestDTO;
+//import com.ironhack.menuservice.dto.OpportunityRequestDTO;
+//import com.ironhack.menuservice.enums.Truck;
+//import com.ironhack.menuservice.exceptions.*;
+//import org.junit.Assert;
+//import org.junit.jupiter.api.AfterEach;
+//import org.junit.jupiter.api.BeforeEach;
+//import org.junit.jupiter.api.Test;
+//
+//
+//import static org.junit.jupiter.api.Assertions.assertEquals;
+//
+//class OpportunityRequestDTOTest {
+//
+//    OpportunityRequestDTO opp;
+//
+//    @BeforeEach
+//    void setUp() throws ExceedsMaxLength, NameContainsNumbersException, EmptyStringException, EmailNotValidException,
+//            PhoneNumberContainsLettersException {
+//         opp = new OpportunityRequestDTO(Truck.BOX, 200, new ContactRequestDTO("TestOne", "123546",
+//                "test1@test.gmail.com", "TestCompany1"));
+//    }
+//
+//    @AfterEach
+//    void tearDown() {
+//
+//    }
+//
+//
+//    @Test
+//    void setQuantity_shouldWork() throws ExceedsMaxLength {
+//        opp.setQuantity(23);
+//        assertEquals(23, opp.getQuantity());
+//    }
+//
+//    @Test
+//    void setQuantity_throwsException_IllegalArgument() {
+//        Assert.assertThrows(IllegalArgumentException.class, () -> { opp.setQuantity(-3);});
+//    }
+//
+//
+//}
\ No newline at end of file
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/IdContainsLettersException.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/IdContainsLettersException.java b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/IdContainsLettersException.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/IdContainsLettersException.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/exceptions/IdContainsLettersException.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/IdContainsLettersException.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/IdContainsLettersException.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.exceptions;
+package com.ironhack.menuservice.exceptions;
 
 public class IdContainsLettersException extends Exception {
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/ExceedsMaxLength.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/ExceedsMaxLength.java b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/ExceedsMaxLength.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/ExceedsMaxLength.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/exceptions/ExceedsMaxLength.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/ExceedsMaxLength.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/ExceedsMaxLength.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.exceptions;
+package com.ironhack.menuservice.exceptions;
 
 public class ExceedsMaxLength extends Exception{
     public ExceedsMaxLength(String message) {
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/EmptyStringException.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/EmptyStringException.java b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/EmptyStringException.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/EmptyStringException.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/exceptions/EmptyStringException.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/EmptyStringException.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/EmptyStringException.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.exceptions;
+package com.ironhack.menuservice.exceptions;
 
 public class EmptyStringException extends Exception {
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/EmailNotValidException.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/EmailNotValidException.java b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/EmailNotValidException.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/EmailNotValidException.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/exceptions/EmailNotValidException.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/EmailNotValidException.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/EmailNotValidException.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.exceptions;
+package com.ironhack.menuservice.exceptions;
 
 public class EmailNotValidException extends Exception{
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/NoSuchValueException.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/NoSuchValueException.java b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/NoSuchValueException.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/NoSuchValueException.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/exceptions/NoSuchValueException.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/NoSuchValueException.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/NoSuchValueException.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.exceptions;
+package com.ironhack.menuservice.exceptions;
 
 public class NoSuchValueException extends Exception{
     public NoSuchValueException(String message) {
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/NameContainsNumbersException.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/NameContainsNumbersException.java b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/NameContainsNumbersException.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/NameContainsNumbersException.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/exceptions/NameContainsNumbersException.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/NameContainsNumbersException.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/NameContainsNumbersException.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.exceptions;
+package com.ironhack.menuservice.exceptions;
 
 public class NameContainsNumbersException extends Exception {
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/InvalidEnumException.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/InvalidEnumException.java b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/InvalidEnumException.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/InvalidEnumException.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/exceptions/InvalidEnumException.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/InvalidEnumException.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/InvalidEnumException.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.exceptions;
+package com.ironhack.menuservice.exceptions;
 
 public class InvalidEnumException extends Exception {
     public InvalidEnumException(String message) {
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/InvalidCountryException.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/InvalidCountryException.java b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/InvalidCountryException.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/InvalidCountryException.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/exceptions/InvalidCountryException.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/exceptions/InvalidCountryException.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/exceptions/InvalidCountryException.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.exceptions;
+package com.ironhack.menuservice.exceptions;
 
 public class InvalidCountryException extends Exception {
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/LeadServiceProxy.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/LeadServiceProxy.java b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/LeadServiceProxy.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/LeadServiceProxy.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/proxy/LeadServiceProxy.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/LeadServiceProxy.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/LeadServiceProxy.java	
@@ -1,7 +1,7 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.proxy;
+package com.ironhack.menuservice.proxy;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.LeadRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
+import com.ironhack.menuservice.dto.LeadRequestDTO;
+import com.ironhack.menuservice.enums.Truck;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.http.HttpStatus;
 import org.springframework.web.bind.annotation.*;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ContactServiceProxy.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ContactServiceProxy.java b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/ContactServiceProxy.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ContactServiceProxy.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/proxy/ContactServiceProxy.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ContactServiceProxy.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/ContactServiceProxy.java	
@@ -1,8 +1,8 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.proxy;
+package com.ironhack.menuservice.proxy;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.ContactReceiptDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.ContactRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.LeadRequestDTO;
+import com.ironhack.menuservice.dto.ContactReceiptDTO;
+import com.ironhack.menuservice.dto.ContactRequestDTO;
+import com.ironhack.menuservice.dto.LeadRequestDTO;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.http.HttpStatus;
 import org.springframework.web.bind.annotation.*;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountServiceProxy.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountServiceProxy.java b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/AccountServiceProxy.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountServiceProxy.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/proxy/AccountServiceProxy.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountServiceProxy.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/AccountServiceProxy.java	
@@ -1,12 +1,12 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.proxy;
+package com.ironhack.menuservice.proxy;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.AccountReceiptDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.AccountRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.AccountUpdateDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.EmptyStringException;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.ExceedsMaxLength;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.InvalidCountryException;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NameContainsNumbersException;
+import com.ironhack.menuservice.dto.AccountReceiptDTO;
+import com.ironhack.menuservice.dto.AccountRequestDTO;
+import com.ironhack.menuservice.dto.AccountUpdateDTO;
+import com.ironhack.menuservice.exceptions.EmptyStringException;
+import com.ironhack.menuservice.exceptions.ExceedsMaxLength;
+import com.ironhack.menuservice.exceptions.InvalidCountryException;
+import com.ironhack.menuservice.exceptions.NameContainsNumbersException;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.http.HttpStatus;
 import org.springframework.web.bind.annotation.*;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountReportServiceProxy.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountReportServiceProxy.java b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/AccountReportServiceProxy.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountReportServiceProxy.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/proxy/AccountReportServiceProxy.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/AccountReportServiceProxy.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/AccountReportServiceProxy.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.proxy;
+package com.ironhack.menuservice.proxy;
 
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
@@ -13,8 +13,8 @@
     @GetMapping("/mean-employee-count")
     Optional<Double> findMeanEmployeeCount();
 
-//    @GetMapping("/median-employee-count")
-//    int[]findMedianEmployeeCountStep1();
+    @GetMapping("/median-employee-count")
+    int[]findMedianEmployeeCountStep1();
 
     @GetMapping("/max-employee-count")
     Optional<Integer> findMaxEmployeeCount();
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/SalesRepServiceProxy.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/SalesRepServiceProxy.java b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/SalesRepServiceProxy.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/SalesRepServiceProxy.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/proxy/SalesRepServiceProxy.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/SalesRepServiceProxy.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/SalesRepServiceProxy.java	
@@ -1,6 +1,6 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.proxy;
+package com.ironhack.menuservice.proxy;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.SalesRepRequestDTO;
+import com.ironhack.menuservice.dto.SalesRepRequestDTO;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.http.HttpStatus;
 import org.springframework.web.bind.annotation.*;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ReportDBServiceProxy.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ReportDBServiceProxy.java b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/ReportDBServiceProxy.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ReportDBServiceProxy.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/proxy/ReportDBServiceProxy.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/ReportDBServiceProxy.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/ReportDBServiceProxy.java	
@@ -1,6 +1,6 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.proxy;
+package com.ironhack.menuservice.proxy;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
+import com.ironhack.menuservice.dto.*;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OpportunityServiceProxy.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OpportunityServiceProxy.java b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/OpportunityServiceProxy.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OpportunityServiceProxy.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/proxy/OpportunityServiceProxy.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/proxy/OpportunityServiceProxy.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/proxy/OpportunityServiceProxy.java	
@@ -1,7 +1,7 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.proxy;
+package com.ironhack.menuservice.proxy;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.OpportunityReceiptDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.OpportunityRequestDTO;
+import com.ironhack.menuservice.dto.OpportunityReceiptDTO;
+import com.ironhack.menuservice.dto.OpportunityRequestDTO;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.*;
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenu.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenu.java b/Menu-service/src/main/java/com/ironhack/menuservice/menus/MainMenu.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenu.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/menus/MainMenu.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/MainMenu.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/menus/MainMenu.java	
@@ -1,21 +1,22 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
+package com.ironhack.menuservice.menus;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Login;
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.PopulateDatabase;
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Variables;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.*;
+import com.ironhack.menuservice.dao.Login;
+import com.ironhack.menuservice.dao.PopulateDatabase;
+import com.ironhack.menuservice.dao.Variables;
+import com.ironhack.menuservice.dto.*;
+import com.ironhack.menuservice.enums.Industry;
+import com.ironhack.menuservice.enums.Status;
+import com.ironhack.menuservice.enums.Truck;
+import com.ironhack.menuservice.exceptions.*;
+import com.ironhack.menuservice.proxy.*;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
-
 import java.awt.*;
 import java.awt.event.KeyEvent;
-import java.util.*;
+import java.util.Locale;
+import java.util.Optional;
+import java.util.Scanner;
 
 @Component
 public class MainMenu implements Variables {
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/IndustryReportMenu.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/IndustryReportMenu.java b/Menu-service/src/main/java/com/ironhack/menuservice/menus/IndustryReportMenu.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/IndustryReportMenu.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/menus/IndustryReportMenu.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/IndustryReportMenu.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/menus/IndustryReportMenu.java	
@@ -1,10 +1,10 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
+package com.ironhack.menuservice.menus;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Variables;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ReportCommands;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NoSuchValueException;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.OppReportServiceProxy;
+import com.ironhack.menuservice.dao.Variables;
+import com.ironhack.menuservice.enums.ReportCommands;
+import com.ironhack.menuservice.enums.Status;
+import com.ironhack.menuservice.exceptions.NoSuchValueException;
+import com.ironhack.menuservice.proxy.OppReportServiceProxy;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/EmployeeCountReportMenu.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/EmployeeCountReportMenu.java b/Menu-service/src/main/java/com/ironhack/menuservice/menus/EmployeeCountReportMenu.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/EmployeeCountReportMenu.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/menus/EmployeeCountReportMenu.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/EmployeeCountReportMenu.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/menus/EmployeeCountReportMenu.java	
@@ -1,9 +1,9 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
+package com.ironhack.menuservice.menus;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Variables;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ReportCommands;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NoSuchValueException;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.AccountReportServiceProxy;
+import com.ironhack.menuservice.dao.Variables;
+import com.ironhack.menuservice.enums.ReportCommands;
+import com.ironhack.menuservice.exceptions.NoSuchValueException;
+import com.ironhack.menuservice.proxy.AccountReportServiceProxy;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/SalesRepReportMenu.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/SalesRepReportMenu.java b/Menu-service/src/main/java/com/ironhack/menuservice/menus/SalesRepReportMenu.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/SalesRepReportMenu.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/menus/SalesRepReportMenu.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/SalesRepReportMenu.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/menus/SalesRepReportMenu.java	
@@ -1,10 +1,10 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
+package com.ironhack.menuservice.menus;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Variables;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ReportCommands;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NoSuchValueException;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.OppReportServiceProxy;
+import com.ironhack.menuservice.dao.Variables;
+import com.ironhack.menuservice.enums.ReportCommands;
+import com.ironhack.menuservice.enums.Status;
+import com.ironhack.menuservice.exceptions.NoSuchValueException;
+import com.ironhack.menuservice.proxy.OppReportServiceProxy;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ReportMainMenu.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ReportMainMenu.java b/Menu-service/src/main/java/com/ironhack/menuservice/menus/ReportMainMenu.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ReportMainMenu.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/menus/ReportMainMenu.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ReportMainMenu.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/menus/ReportMainMenu.java	
@@ -1,8 +1,8 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
+package com.ironhack.menuservice.menus;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Variables;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ReportCommands;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NoSuchValueException;
+import com.ironhack.menuservice.dao.Variables;
+import com.ironhack.menuservice.enums.ReportCommands;
+import com.ironhack.menuservice.exceptions.NoSuchValueException;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/QuantityReportMenu.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/QuantityReportMenu.java b/Menu-service/src/main/java/com/ironhack/menuservice/menus/QuantityReportMenu.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/QuantityReportMenu.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/menus/QuantityReportMenu.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/QuantityReportMenu.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/menus/QuantityReportMenu.java	
@@ -1,9 +1,9 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
+package com.ironhack.menuservice.menus;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Variables;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ReportCommands;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NoSuchValueException;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.OppReportServiceProxy;
+import com.ironhack.menuservice.dao.Variables;
+import com.ironhack.menuservice.enums.ReportCommands;
+import com.ironhack.menuservice.exceptions.NoSuchValueException;
+import com.ironhack.menuservice.proxy.OppReportServiceProxy;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ProductReportMenu.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ProductReportMenu.java b/Menu-service/src/main/java/com/ironhack/menuservice/menus/ProductReportMenu.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ProductReportMenu.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/menus/ProductReportMenu.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/ProductReportMenu.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/menus/ProductReportMenu.java	
@@ -1,10 +1,10 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
+package com.ironhack.menuservice.menus;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Variables;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ReportCommands;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NoSuchValueException;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.OppReportServiceProxy;
+import com.ironhack.menuservice.dao.Variables;
+import com.ironhack.menuservice.enums.ReportCommands;
+import com.ironhack.menuservice.enums.Status;
+import com.ironhack.menuservice.exceptions.NoSuchValueException;
+import com.ironhack.menuservice.proxy.OppReportServiceProxy;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ReportCommands.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ReportCommands.java b/Menu-service/src/main/java/com/ironhack/menuservice/enums/ReportCommands.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ReportCommands.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/enums/ReportCommands.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ReportCommands.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/enums/ReportCommands.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.enums;
+package com.ironhack.menuservice.enums;
 
 public enum ReportCommands {
     SALESREP("SALESREP"),
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Industry.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Industry.java b/Menu-service/src/main/java/com/ironhack/menuservice/enums/Industry.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Industry.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/enums/Industry.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Industry.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/enums/Industry.java	
@@ -1,7 +1,7 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.enums;
+package com.ironhack.menuservice.enums;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.EmptyStringException;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.InvalidEnumException;
+import com.ironhack.menuservice.exceptions.EmptyStringException;
+import com.ironhack.menuservice.exceptions.InvalidEnumException;
 
 public enum Industry {
     PRODUCE, ECOMMERCE, MEDICAL, OTHER, MANUFACTURING;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ConsoleTextColors.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ConsoleTextColors.java b/Menu-service/src/main/java/com/ironhack/menuservice/enums/ConsoleTextColors.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ConsoleTextColors.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/enums/ConsoleTextColors.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/ConsoleTextColors.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/enums/ConsoleTextColors.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.enums;
+package com.ironhack.menuservice.enums;
 
 public enum ConsoleTextColors {
     ANSI_RED("\033[0;31m"),
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/SalesRepRequestDTO.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/SalesRepRequestDTO.java b/Menu-service/src/main/java/com/ironhack/menuservice/dto/SalesRepRequestDTO.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/SalesRepRequestDTO.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dto/SalesRepRequestDTO.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/SalesRepRequestDTO.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dto/SalesRepRequestDTO.java	
@@ -1,10 +1,10 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dto;
+package com.ironhack.menuservice.dto;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.OpportunityRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.EmptyStringException;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.ExceedsMaxLength;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.IdContainsLettersException;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NameContainsNumbersException;
+import com.ironhack.menuservice.dto.OpportunityRequestDTO;
+import com.ironhack.menuservice.exceptions.EmptyStringException;
+import com.ironhack.menuservice.exceptions.ExceedsMaxLength;
+import com.ironhack.menuservice.exceptions.IdContainsLettersException;
+import com.ironhack.menuservice.exceptions.NameContainsNumbersException;
 import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.NoArgsConstructor;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CountryReportMenu.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CountryReportMenu.java b/Menu-service/src/main/java/com/ironhack/menuservice/menus/CountryReportMenu.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CountryReportMenu.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/menus/CountryReportMenu.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CountryReportMenu.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/menus/CountryReportMenu.java	
@@ -1,10 +1,10 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
+package com.ironhack.menuservice.menus;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Variables;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ReportCommands;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NoSuchValueException;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.OppReportServiceProxy;
+import com.ironhack.menuservice.dao.Variables;
+import com.ironhack.menuservice.enums.ReportCommands;
+import com.ironhack.menuservice.enums.Status;
+import com.ironhack.menuservice.exceptions.NoSuchValueException;
+import com.ironhack.menuservice.proxy.OppReportServiceProxy;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenu.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenu.java b/Menu-service/src/main/java/com/ironhack/menuservice/menus/CityReportMenu.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenu.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/menus/CityReportMenu.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/menus/CityReportMenu.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/menus/CityReportMenu.java	
@@ -1,11 +1,11 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.menus;
+package com.ironhack.menuservice.menus;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dao.Variables;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ReportCommands;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.NoSuchValueException;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.OppReportServiceProxy;
-import com.ironhack.stolen_name_trucking_company_homework_3.proxy.ReportDBServiceProxy;
+import com.ironhack.menuservice.dao.Variables;
+import com.ironhack.menuservice.enums.ReportCommands;
+import com.ironhack.menuservice.enums.Status;
+import com.ironhack.menuservice.exceptions.NoSuchValueException;
+import com.ironhack.menuservice.proxy.OppReportServiceProxy;
+import com.ironhack.menuservice.proxy.ReportDBServiceProxy;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Truck.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Truck.java b/Menu-service/src/main/java/com/ironhack/menuservice/enums/Truck.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Truck.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/enums/Truck.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Truck.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/enums/Truck.java	
@@ -1,7 +1,7 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.enums;
+package com.ironhack.menuservice.enums;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.EmptyStringException;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.InvalidEnumException;
+import com.ironhack.menuservice.exceptions.EmptyStringException;
+import com.ironhack.menuservice.exceptions.InvalidEnumException;
 
 public enum Truck {
     HYBRID, FLATBED, BOX;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Status.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Status.java b/Menu-service/src/main/java/com/ironhack/menuservice/enums/Status.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Status.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/enums/Status.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/enums/Status.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/enums/Status.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.enums;
+package com.ironhack.menuservice.enums;
 
 public enum Status {
     OPEN, CLOSED_WON, CLOSED_LOST
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactReceiptDTO.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactReceiptDTO.java b/Menu-service/src/main/java/com/ironhack/menuservice/dto/ContactReceiptDTO.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactReceiptDTO.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dto/ContactReceiptDTO.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactReceiptDTO.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dto/ContactReceiptDTO.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dto;
+package com.ironhack.menuservice.dto;
 
 //import com.tkwrn.accountservice.dao.Opportunity;
 import lombok.AllArgsConstructor;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountUpdateDTO.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountUpdateDTO.java b/Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountUpdateDTO.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountUpdateDTO.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountUpdateDTO.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountUpdateDTO.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountUpdateDTO.java	
@@ -1,4 +1,4 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dto;
+package com.ironhack.menuservice.dto;
 
 import lombok.AllArgsConstructor;
 import lombok.Getter;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountRequestDTO.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountRequestDTO.java b/Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountRequestDTO.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountRequestDTO.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountRequestDTO.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountRequestDTO.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountRequestDTO.java	
@@ -1,6 +1,6 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dto;
+package com.ironhack.menuservice.dto;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
+import com.ironhack.menuservice.enums.Industry;
 import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.NoArgsConstructor;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountReceiptDTO.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountReceiptDTO.java b/Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountReceiptDTO.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountReceiptDTO.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountReceiptDTO.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/AccountReceiptDTO.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dto/AccountReceiptDTO.java	
@@ -1,6 +1,6 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dto;
+package com.ironhack.menuservice.dto;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Industry;
+import com.ironhack.menuservice.enums.Industry;
 import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.NoArgsConstructor;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/OpportunityRequestDTO.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/OpportunityRequestDTO.java b/Menu-service/src/main/java/com/ironhack/menuservice/dto/OpportunityRequestDTO.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/OpportunityRequestDTO.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dto/OpportunityRequestDTO.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/OpportunityRequestDTO.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dto/OpportunityRequestDTO.java	
@@ -1,10 +1,10 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dto;//Extends com.ironhack.stolen_name_trucking_company_homework_3.ClientInformation class to retain Unique ID incrementing.
+package com.ironhack.menuservice.dto;//Extends com.ironhack.menuservice.ClientInformation class to retain Unique ID incrementing.
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.AccountRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.ContactRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.ExceedsMaxLength;
+import com.ironhack.menuservice.dto.AccountRequestDTO;
+import com.ironhack.menuservice.dto.ContactRequestDTO;
+import com.ironhack.menuservice.enums.Status;
+import com.ironhack.menuservice.enums.Truck;
+import com.ironhack.menuservice.exceptions.ExceedsMaxLength;
 import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.NoArgsConstructor;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/OpportunityReceiptDTO.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/OpportunityReceiptDTO.java b/Menu-service/src/main/java/com/ironhack/menuservice/dto/OpportunityReceiptDTO.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/OpportunityReceiptDTO.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dto/OpportunityReceiptDTO.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/OpportunityReceiptDTO.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dto/OpportunityReceiptDTO.java	
@@ -1,7 +1,7 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dto;
+package com.ironhack.menuservice.dto;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Status;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.Truck;
+import com.ironhack.menuservice.enums.Status;
+import com.ironhack.menuservice.enums.Truck;
 import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.NoArgsConstructor;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/LeadRequestDTO.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/LeadRequestDTO.java b/Menu-service/src/main/java/com/ironhack/menuservice/dto/LeadRequestDTO.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/LeadRequestDTO.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dto/LeadRequestDTO.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/LeadRequestDTO.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dto/LeadRequestDTO.java	
@@ -1,7 +1,7 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dto;//For creating basic Leads. Extends Client information in order to retain a unique ID counter.
+package com.ironhack.menuservice.dto;//For creating basic Leads. Extends Client information in order to retain a unique ID counter.
 
-import com.ironhack.stolen_name_trucking_company_homework_3.dto.SalesRepRequestDTO;
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
+import com.ironhack.menuservice.dto.SalesRepRequestDTO;
+import com.ironhack.menuservice.exceptions.*;
 import lombok.*;
 import org.apache.commons.validator.routines.EmailValidator;
 
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactRequestDTO.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactRequestDTO.java b/Menu-service/src/main/java/com/ironhack/menuservice/dto/ContactRequestDTO.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactRequestDTO.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dto/ContactRequestDTO.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dto/ContactRequestDTO.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dto/ContactRequestDTO.java	
@@ -1,17 +1,9 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dto;
+package com.ironhack.menuservice.dto;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
 import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.NoArgsConstructor;
 import lombok.Setter;
-import org.apache.commons.validator.routines.EmailValidator;
-import org.hibernate.annotations.LazyCollection;
-import org.hibernate.annotations.LazyCollectionOption;
-
-import javax.persistence.*;
-import java.util.ArrayList;
-import java.util.List;
 
 @Setter
 @Getter
Index: Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/StolenNameTruckingCompanyHomework3ApplicationTests.java
===================================================================
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/StolenNameTruckingCompanyHomework3ApplicationTests.java b/Menu-service/src/test/java/com/ironhack/menuservice/MenuServiceApplicationTests.java
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/StolenNameTruckingCompanyHomework3ApplicationTests.java
rename to Menu-service/src/test/java/com/ironhack/menuservice/MenuServiceApplicationTests.java
--- a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/StolenNameTruckingCompanyHomework3ApplicationTests.java	
+++ b/Menu-service/src/test/java/com/ironhack/menuservice/MenuServiceApplicationTests.java	
@@ -1,14 +1,14 @@
-package com.ironhack.stolen_name_trucking_company_homework_3;
+package com.ironhack.menuservice;
 
 import org.junit.jupiter.api.Test;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.boot.test.mock.mockito.MockBean;
 
 @SpringBootTest
-class StolenNameTruckingCompanyHomework3ApplicationTests {
+class MenuServiceApplicationTests {
 
 	@MockBean
-	private StolenNameTruckingCompanyHomework3Application application;
+	private MenuServiceApplication application;
 
 	@Test
 	void contextLoads() {
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Variables.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Variables.java b/Menu-service/src/main/java/com/ironhack/menuservice/dao/Variables.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Variables.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dao/Variables.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Variables.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dao/Variables.java	
@@ -1,7 +1,6 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dao;
+package com.ironhack.menuservice.dao;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ConsoleTextColors;
-import com.ironhack.stolen_name_trucking_company_homework_3.enums.ReportCommands;
+import com.ironhack.menuservice.enums.ConsoleTextColors;
 
 import java.util.List;
 import java.util.Scanner;
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Main.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Main.java b/Menu-service/src/main/java/com/ironhack/menuservice/dao/Main.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Main.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dao/Main.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Main.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dao/Main.java	
@@ -1,8 +1,8 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dao;
+package com.ironhack.menuservice.dao;
 
 public class Main {
 
     public static void main(String[] args){
-        Login.login();
+        com.ironhack.menuservice.dao.Login.login();
     }
 }
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Login.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Login.java b/Menu-service/src/main/java/com/ironhack/menuservice/dao/Login.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Login.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/dao/Login.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/Login.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/dao/Login.java	
@@ -1,6 +1,6 @@
-package com.ironhack.stolen_name_trucking_company_homework_3.dao;
+package com.ironhack.menuservice.dao;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.StolenNameTruckingCompanyHomework3Application;
+import com.ironhack.menuservice.MenuServiceApplication;
 import org.springframework.boot.SpringApplication;
 import org.springframework.stereotype.Component;
 
@@ -115,7 +115,7 @@
             frame.dispose(); // Closes login window
             isLoggedIn = 1;
             try {
-                SpringApplication.run(StolenNameTruckingCompanyHomework3Application.class);
+                SpringApplication.run(MenuServiceApplication.class);
             } catch (RuntimeException ex) {
                 System.out.println("Our server is busy! Please run the program again to login!");
             }
@@ -124,7 +124,7 @@
             frame.dispose(); // Closes login window
             isLoggedIn = 2;
             try {
-                SpringApplication.run(StolenNameTruckingCompanyHomework3Application.class);
+                SpringApplication.run(MenuServiceApplication.class);
             } catch (RuntimeException ex) {
                 System.out.println("Our server is busy! Please run the program again to login!");
             }
Index: Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/StolenNameTruckingCompanyHomework3Application.java
===================================================================
diff --git a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/StolenNameTruckingCompanyHomework3Application.java b/Menu-service/src/main/java/com/ironhack/menuservice/MenuServiceApplication.java
rename from Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/StolenNameTruckingCompanyHomework3Application.java
rename to Menu-service/src/main/java/com/ironhack/menuservice/MenuServiceApplication.java
--- a/Menu-service/src/main/java/com/ironhack/stolen_name_trucking_company_homework_3/StolenNameTruckingCompanyHomework3Application.java	
+++ b/Menu-service/src/main/java/com/ironhack/menuservice/MenuServiceApplication.java	
@@ -1,26 +1,25 @@
-package com.ironhack.stolen_name_trucking_company_homework_3;
+package com.ironhack.menuservice;
 
-import com.ironhack.stolen_name_trucking_company_homework_3.exceptions.*;
-import com.ironhack.stolen_name_trucking_company_homework_3.menus.MainMenu;
+import com.ironhack.menuservice.exceptions.*;
+import com.ironhack.menuservice.menus.MainMenu;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.CommandLineRunner;
 import org.springframework.boot.SpringApplication;
-
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 
 import java.awt.*;
 
-import static com.ironhack.stolen_name_trucking_company_homework_3.dao.Login.getIsLoggedIn;
+import static com.ironhack.menuservice.dao.Login.getIsLoggedIn;
 
 @SpringBootApplication
-public class StolenNameTruckingCompanyHomework3Application implements CommandLineRunner{
+public class MenuServiceApplication implements CommandLineRunner{
 
 	@Autowired
     MainMenu menu;
 
 	public static void main(String[] args) {
 		System.setProperty("java.awt.headless", "false");
-		SpringApplication.run(StolenNameTruckingCompanyHomework3Application.class, args);
+		SpringApplication.run(MenuServiceApplication.class, args);
 	}
 
 	@Override
Index: Menu-service/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=menu-service\r\nserver.port=8600\r\n
===================================================================
diff --git a/Menu-service/src/main/resources/application.properties b/Menu-service/src/main/resources/application.properties
--- a/Menu-service/src/main/resources/application.properties	
+++ b/Menu-service/src/main/resources/application.properties	
@@ -1,2 +1,6 @@
 spring.application.name=menu-service
-server.port=8600
+server.port=8700
+spring.datasource.url=jdbc:mysql://localhost:3306/ironhackhomework4
+spring.datasource.username=ironhacker
+spring.datasource.password=1r0nH@ck3r
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
\ No newline at end of file
Index: Menu-service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>2.5.4</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.ironhack</groupId>\r\n\t<artifactId>stolen_name_trucking_company_homework_3</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>stolen_name_trucking_company_homework_3</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>11</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jdbc</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-java</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n        <dependency>\r\n            <groupId>commons-validator</groupId>\r\n            <artifactId>commons-validator</artifactId>\r\n            <version>1.7</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>4.13.2</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.ironhack</groupId>\r\n            <artifactId>stolen_name_trucking_company_homework_3</artifactId>\r\n            <version>0.0.1-SNAPSHOT</version>\r\n        </dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\r\n\t\t\t<version>2.5.4</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-openfeign-core</artifactId>\r\n            <version>3.0.4</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>jakarta.validation</groupId>\r\n            <artifactId>jakarta.validation-api</artifactId>\r\n            <version>2.0.2</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <configuration>\r\n                    <source>14</source>\r\n                    <target>14</target>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n\t</build>\r\n\r\n</project>\r\n
===================================================================
diff --git a/Menu-service/pom.xml b/Menu-service/pom.xml
--- a/Menu-service/pom.xml	
+++ b/Menu-service/pom.xml	
@@ -9,12 +9,12 @@
 		<relativePath/> <!-- lookup parent from repository -->
 	</parent>
 	<groupId>com.ironhack</groupId>
-	<artifactId>stolen_name_trucking_company_homework_3</artifactId>
+	<artifactId>menu-service</artifactId>
 	<version>0.0.1-SNAPSHOT</version>
-	<name>stolen_name_trucking_company_homework_3</name>
+	<name>menu-service</name>
 	<description>Demo project for Spring Boot</description>
 	<properties>
-		<java.version>11</java.version>
+		<java.version>17</java.version>
 	</properties>
 	<dependencies>
 		<dependency>
@@ -53,7 +53,7 @@
         </dependency>
         <dependency>
             <groupId>com.ironhack</groupId>
-            <artifactId>stolen_name_trucking_company_homework_3</artifactId>
+            <artifactId>menu-service</artifactId>
             <version>0.0.1-SNAPSHOT</version>
         </dependency>
 		<dependency>
@@ -105,8 +105,8 @@
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-compiler-plugin</artifactId>
                 <configuration>
-                    <source>14</source>
-                    <target>14</target>
+                    <source>17</source>
+                    <target>17</target>
                 </configuration>
             </plugin>
         </plugins>
Index: Menu-service/hibernate_log_file_name.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>2021-08-14 17:36:33.709  INFO 3704 --- [main] nNameTruckingCompanyHomework3Application : Starting StolenNameTruckingCompanyHomework3Application using Java 16.0.1 on 192.168.1.113 with PID 3704 (/Users/natikyo/IdeaProjects/Stolen-Name-LBL-Trucking_Company_Homework-3/target/classes started by natikyo in /Users/natikyo/IdeaProjects/Stolen-Name-LBL-Trucking_Company_Homework-3)\r\n2021-08-14 17:36:33.712  INFO 3704 --- [main] nNameTruckingCompanyHomework3Application : No active profile set, falling back to default profiles: default\r\n2021-08-14 17:36:35.008  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!\r\n2021-08-14 17:36:35.012  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.\r\n2021-08-14 17:36:35.074  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.stolen_name_trucking_company_homework_3.repository.AccountRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.\r\n2021-08-14 17:36:35.080  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.stolen_name_trucking_company_homework_3.repository.ContactRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.\r\n2021-08-14 17:36:35.082  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.stolen_name_trucking_company_homework_3.repository.LeadRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.\r\n2021-08-14 17:36:35.084  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.stolen_name_trucking_company_homework_3.repository.OpportunityRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.\r\n2021-08-14 17:36:35.088  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.stolen_name_trucking_company_homework_3.repository.SalesRepRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.\r\n2021-08-14 17:36:35.090  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 0 JDBC repository interfaces.\r\n2021-08-14 17:36:35.118  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!\r\n2021-08-14 17:36:35.121  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.\r\n2021-08-14 17:36:35.209  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 5 JPA repository interfaces.\r\n2021-08-14 17:36:36.055  INFO 3704 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]\r\n2021-08-14 17:36:36.140  INFO 3704 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.32.Final\r\n2021-08-14 17:36:36.452  INFO 3704 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}\r\n2021-08-14 17:36:36.635  INFO 3704 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...\r\n2021-08-14 17:36:37.544  INFO 3704 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.\r\n2021-08-14 17:36:37.631  INFO 3704 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect\r\n2021-08-14 17:36:39.212 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table contactRequestDTO\r\n       drop \r\n       foreign key FK3ctagodg5h629t8ltnam39l5w\r\n2021-08-14 17:36:39.234 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table contactRequestDTO\r\n       drop \r\n       foreign key FK_35aqn65x7cpxjaot6msrtegyj\r\n2021-08-14 17:36:39.300 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table leads \r\n       drop \r\n       foreign key FKfxo14wqvkc8ba27nyy13owb14\r\n2021-08-14 17:36:39.309 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table opportunityRequestDTO\r\n       drop \r\n       foreign key FK9mvhqgny93la8u8k2gd531nex\r\n2021-08-14 17:36:39.321 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table opportunityRequestDTO\r\n       drop \r\n       foreign key FKo5iiy8cn6h1f2kae3s49yteot\r\n2021-08-14 17:36:39.332 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table opportunityRequestDTO\r\n       drop \r\n       foreign key FK4k71m0964k1f2505y0vtta83l\r\n2021-08-14 17:36:39.345 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    drop table if exists account\r\n2021-08-14 17:36:39.360 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    drop table if exists contactRequestDTO\r\n2021-08-14 17:36:39.370 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    drop table if exists leads\r\n2021-08-14 17:36:39.381 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    drop table if exists opportunityRequestDTO\r\n2021-08-14 17:36:39.392 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    drop table if exists sales_rep\r\n2021-08-14 17:36:39.409 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    create table account (\r\n       id varchar(255) not null,\r\n        city varchar(255),\r\n        country varchar(255),\r\n        employee_count integer,\r\n        industry varchar(255),\r\n        primary key (id)\r\n    ) engine=InnoDB\r\n2021-08-14 17:36:39.430 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    create table contactRequestDTO (\r\n       id varchar(255) not null,\r\n        company_name varchar(255),\r\n        email varchar(255),\r\n        contact_name varchar(255),\r\n        phone_number varchar(255),\r\n        sales_rep_id bigint,\r\n        account_id varchar(255),\r\n        primary key (id)\r\n    ) engine=InnoDB\r\n2021-08-14 17:36:39.445 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    create table leads (\r\n       id varchar(255) not null,\r\n        company_name varchar(255),\r\n        email varchar(255),\r\n        contact_name varchar(255),\r\n        phone_number varchar(255),\r\n        sales_rep_id bigint,\r\n        primary key (id)\r\n    ) engine=InnoDB\r\n2021-08-14 17:36:39.484 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    create table opportunityRequestDTO (\r\n       id varchar(255) not null,\r\n        product varchar(255),\r\n        quantity integer not null,\r\n        status varchar(255),\r\n        account_id varchar(255),\r\n        contact_id varchar(255),\r\n        sales_rep_id bigint,\r\n        primary key (id)\r\n    ) engine=InnoDB\r\n2021-08-14 17:36:39.507 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    create table sales_rep (\r\n       id bigint not null auto_increment,\r\n        sales_rep_name varchar(255),\r\n        primary key (id)\r\n    ) engine=InnoDB\r\n2021-08-14 17:36:39.527 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table contactRequestDTO\r\n       add constraint FK3ctagodg5h629t8ltnam39l5w \r\n       foreign key (account_id) \r\n       references account (id)\r\n2021-08-14 17:36:39.567 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table contactRequestDTO\r\n       add constraint FK_35aqn65x7cpxjaot6msrtegyj \r\n       foreign key (sales_rep_id) \r\n       references sales_rep (id)\r\n2021-08-14 17:36:39.614 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table leads \r\n       add constraint FKfxo14wqvkc8ba27nyy13owb14 \r\n       foreign key (sales_rep_id) \r\n       references sales_rep (id)\r\n2021-08-14 17:36:39.672 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table opportunityRequestDTO\r\n       add constraint FK9mvhqgny93la8u8k2gd531nex \r\n       foreign key (account_id) \r\n       references account (id)\r\n2021-08-14 17:36:39.718 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table opportunityRequestDTO\r\n       add constraint FKo5iiy8cn6h1f2kae3s49yteot \r\n       foreign key (contact_id) \r\n       references contactRequestDTO (id)\r\n2021-08-14 17:36:39.772 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    \r\n    alter table opportunityRequestDTO\r\n       add constraint FK4k71m0964k1f2505y0vtta83l \r\n       foreign key (sales_rep_id) \r\n       references sales_rep (id)\r\n2021-08-14 17:36:39.817  INFO 3704 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]\r\n2021-08-14 17:36:39.828  INFO 3704 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'\r\n2021-08-14 17:36:41.078  INFO 3704 --- [main] nNameTruckingCompanyHomework3Application : Started StolenNameTruckingCompanyHomework3Application in 8.421 seconds (JVM running for 9.354)\r\n2021-08-14 17:36:41.136 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        sales_rep\r\n        (sales_rep_name) \r\n    values\r\n        (?)\r\n2021-08-14 17:36:41.161 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [James]\r\n2021-08-14 17:36:41.184 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        sales_rep\r\n        (sales_rep_name) \r\n    values\r\n        (?)\r\n2021-08-14 17:36:41.185 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [Sara]\r\n2021-08-14 17:36:41.190 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        sales_rep\r\n        (sales_rep_name) \r\n    values\r\n        (?)\r\n2021-08-14 17:36:41.191 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [Michael]\r\n2021-08-14 17:36:41.197 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        sales_rep\r\n        (sales_rep_name) \r\n    values\r\n        (?)\r\n2021-08-14 17:36:41.199 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [Julia]\r\n2021-08-14 17:36:41.231 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        lead0_.id as id1_1_0_,\r\n        lead0_.company_name as company_1_3_0_,\r\n        lead0_.email as email2_3_0_,\r\n        lead0_.contact_name as contact_3_3_0_,\r\n        lead0_.phone_number as phone_nu4_3_0_,\r\n        lead0_.sales_rep_id as sales_re5_3_0_,\r\n        lead0_.account_id as account_1_2_0_,\r\n        lead0_.clazz_ as clazz_0_ \r\n    from\r\n        ( select\r\n            id,\r\n            company_name,\r\n            email,\r\n            contact_name,\r\n            phone_number,\r\n            sales_rep_id,\r\n            null as account_id,\r\n            2 as clazz_ \r\n        from\r\n            leads \r\n        union\r\n        all select\r\n            id,\r\n            company_name,\r\n            email,\r\n            contact_name,\r\n            phone_number,\r\n            sales_rep_id,\r\n            account_id,\r\n            3 as clazz_ \r\n        from\r\n            contactRequestDTO\r\n    ) lead0_ \r\nwhere\r\n    lead0_.id=?\r\n2021-08-14 17:36:41.232 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [1]\r\n2021-08-14 17:36:41.238 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        leads\r\n        (company_name, email, contact_name, phone_number, sales_rep_id, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.239 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [Wings of Freedom]\r\n2021-08-14 17:36:41.239 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [labedzsebastian@gmail.co]\r\n2021-08-14 17:36:41.239 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [VARCHAR] - [Sebastian Marek Labedz]\r\n2021-08-14 17:36:41.240 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [VARCHAR] - [123456789]\r\n2021-08-14 17:36:41.240 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [null]\r\n2021-08-14 17:36:41.240 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [VARCHAR] - [1]\r\n2021-08-14 17:36:41.287 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        lead0_.id as id1_1_0_,\r\n        lead0_.company_name as company_1_3_0_,\r\n        lead0_.email as email2_3_0_,\r\n        lead0_.contact_name as contact_3_3_0_,\r\n        lead0_.phone_number as phone_nu4_3_0_,\r\n        lead0_.sales_rep_id as sales_re5_3_0_,\r\n        lead0_.account_id as account_1_2_0_,\r\n        lead0_.clazz_ as clazz_0_ \r\n    from\r\n        ( select\r\n            id,\r\n            company_name,\r\n            email,\r\n            contact_name,\r\n            phone_number,\r\n            sales_rep_id,\r\n            null as account_id,\r\n            2 as clazz_ \r\n        from\r\n            leads \r\n        union\r\n        all select\r\n            id,\r\n            company_name,\r\n            email,\r\n            contact_name,\r\n            phone_number,\r\n            sales_rep_id,\r\n            account_id,\r\n            3 as clazz_ \r\n        from\r\n            contactRequestDTO\r\n    ) lead0_ \r\nwhere\r\n    lead0_.id=?\r\n2021-08-14 17:36:41.288 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [2]\r\n2021-08-14 17:36:41.291 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        leads\r\n        (company_name, email, contact_name, phone_number, sales_rep_id, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.292 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [LeeD]\r\n2021-08-14 17:36:41.293 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [ld@gmail.com]\r\n2021-08-14 17:36:41.293 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [VARCHAR] - [Lee Dawson]\r\n2021-08-14 17:36:41.293 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [VARCHAR] - [980651164]\r\n2021-08-14 17:36:41.293 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [null]\r\n2021-08-14 17:36:41.293 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [VARCHAR] - [2]\r\n2021-08-14 17:36:41.298 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        lead0_.id as id1_1_0_,\r\n        lead0_.company_name as company_1_3_0_,\r\n        lead0_.email as email2_3_0_,\r\n        lead0_.contact_name as contact_3_3_0_,\r\n        lead0_.phone_number as phone_nu4_3_0_,\r\n        lead0_.sales_rep_id as sales_re5_3_0_,\r\n        lead0_.account_id as account_1_2_0_,\r\n        lead0_.clazz_ as clazz_0_ \r\n    from\r\n        ( select\r\n            id,\r\n            company_name,\r\n            email,\r\n            contact_name,\r\n            phone_number,\r\n            sales_rep_id,\r\n            null as account_id,\r\n            2 as clazz_ \r\n        from\r\n            leads \r\n        union\r\n        all select\r\n            id,\r\n            company_name,\r\n            email,\r\n            contact_name,\r\n            phone_number,\r\n            sales_rep_id,\r\n            account_id,\r\n            3 as clazz_ \r\n        from\r\n            contactRequestDTO\r\n    ) lead0_ \r\nwhere\r\n    lead0_.id=?\r\n2021-08-14 17:36:41.299 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [3]\r\n2021-08-14 17:36:41.301 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        leads\r\n        (company_name, email, contact_name, phone_number, sales_rep_id, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.302 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [Nathy From Wonderland]\r\n2021-08-14 17:36:41.302 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [nattyshil@yahoo.com]\r\n2021-08-14 17:36:41.302 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [VARCHAR] - [Natalia Shilyaeva]\r\n2021-08-14 17:36:41.303 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [VARCHAR] - [563782789]\r\n2021-08-14 17:36:41.303 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [null]\r\n2021-08-14 17:36:41.303 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [VARCHAR] - [3]\r\n2021-08-14 17:36:41.311 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        contact0_.id as id1_1_0_,\r\n        contact0_.company_name as company_1_3_0_,\r\n        contact0_.email as email2_3_0_,\r\n        contact0_.contact_name as contact_3_3_0_,\r\n        contact0_.phone_number as phone_nu4_3_0_,\r\n        contact0_.sales_rep_id as sales_re5_3_0_,\r\n        contact0_.account_id as account_1_2_0_ \r\n    from\r\n        contactRequestDTO contact0_\r\n    where\r\n        contact0_.id=?\r\n2021-08-14 17:36:41.312 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [7]\r\n2021-08-14 17:36:41.314 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        contactRequestDTO\r\n        (company_name, email, contact_name, phone_number, sales_rep_id, account_id, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.315 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [Kałasznikow]\r\n2021-08-14 17:36:41.316 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [alfa@beta.uk]\r\n2021-08-14 17:36:41.316 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [VARCHAR] - [John Doe]\r\n2021-08-14 17:36:41.316 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [VARCHAR] - [123475357]\r\n2021-08-14 17:36:41.316 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [null]\r\n2021-08-14 17:36:41.317 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.317 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [7] as [VARCHAR] - [7]\r\n2021-08-14 17:36:41.323 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        contact0_.id as id1_1_0_,\r\n        contact0_.company_name as company_1_3_0_,\r\n        contact0_.email as email2_3_0_,\r\n        contact0_.contact_name as contact_3_3_0_,\r\n        contact0_.phone_number as phone_nu4_3_0_,\r\n        contact0_.sales_rep_id as sales_re5_3_0_,\r\n        contact0_.account_id as account_1_2_0_ \r\n    from\r\n        contactRequestDTO contact0_\r\n    where\r\n        contact0_.id=?\r\n2021-08-14 17:36:41.324 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [8]\r\n2021-08-14 17:36:41.327 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        contactRequestDTO\r\n        (company_name, email, contact_name, phone_number, sales_rep_id, account_id, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.328 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [My own company]\r\n2021-08-14 17:36:41.328 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [ms@wp.pl]\r\n2021-08-14 17:36:41.328 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [VARCHAR] - [Martha Steward]\r\n2021-08-14 17:36:41.329 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [VARCHAR] - [123475357]\r\n2021-08-14 17:36:41.329 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [null]\r\n2021-08-14 17:36:41.329 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.329 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [7] as [VARCHAR] - [8]\r\n2021-08-14 17:36:41.334 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        contact0_.id as id1_1_0_,\r\n        contact0_.company_name as company_1_3_0_,\r\n        contact0_.email as email2_3_0_,\r\n        contact0_.contact_name as contact_3_3_0_,\r\n        contact0_.phone_number as phone_nu4_3_0_,\r\n        contact0_.sales_rep_id as sales_re5_3_0_,\r\n        contact0_.account_id as account_1_2_0_ \r\n    from\r\n        contactRequestDTO contact0_\r\n    where\r\n        contact0_.id=?\r\n2021-08-14 17:36:41.334 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [9]\r\n2021-08-14 17:36:41.336 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        contactRequestDTO\r\n        (company_name, email, contact_name, phone_number, sales_rep_id, account_id, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.336 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [Truman Show]\r\n2021-08-14 17:36:41.337 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [thisisverylongemail@gmail.com]\r\n2021-08-14 17:36:41.337 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [VARCHAR] - [George Truman]\r\n2021-08-14 17:36:41.337 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [VARCHAR] - [123475357]\r\n2021-08-14 17:36:41.337 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [null]\r\n2021-08-14 17:36:41.338 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.338 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [7] as [VARCHAR] - [9]\r\n2021-08-14 17:36:41.350 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        opportunit0_.id as id1_1_0_,\r\n        opportunit0_.account_id as account_4_4_0_,\r\n        opportunit0_.contact_id as contact_5_4_0_,\r\n        opportunit0_.product as product1_4_0_,\r\n        opportunit0_.quantity as quantity2_4_0_,\r\n        opportunit0_.sales_rep_id as sales_re6_4_0_,\r\n        opportunit0_.status as status3_4_0_ \r\n    from\r\n        opportunityRequestDTO opportunit0_\r\n    where\r\n        opportunit0_.id=?\r\n2021-08-14 17:36:41.354 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [13]\r\n2021-08-14 17:36:41.366 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        contact0_.id as id1_1_0_,\r\n        contact0_.company_name as company_1_3_0_,\r\n        contact0_.email as email2_3_0_,\r\n        contact0_.contact_name as contact_3_3_0_,\r\n        contact0_.phone_number as phone_nu4_3_0_,\r\n        contact0_.sales_rep_id as sales_re5_3_0_,\r\n        contact0_.account_id as account_1_2_0_,\r\n        salesrep1_.id as id1_5_1_,\r\n        salesrep1_.sales_rep_name as sales_re2_5_1_,\r\n        account2_.id as id1_1_2_,\r\n        account2_.city as city1_0_2_,\r\n        account2_.country as country2_0_2_,\r\n        account2_.employee_count as employee3_0_2_,\r\n        account2_.industry as industry4_0_2_ \r\n    from\r\n        contactRequestDTO contact0_\r\n    left outer join\r\n        sales_rep salesrep1_ \r\n            on contact0_.sales_rep_id=salesrep1_.id \r\n    left outer join\r\n        account account2_ \r\n            on contact0_.account_id=account2_.id \r\n    where\r\n        contact0_.id=?\r\n2021-08-14 17:36:41.366 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [7]\r\n2021-08-14 17:36:41.380 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        opportunityRequestDTO\r\n        (account_id, contact_id, product, quantity, sales_rep_id, status, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.381 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.382 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [7]\r\n2021-08-14 17:36:41.382 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [VARCHAR] - [FLATBED]\r\n2021-08-14 17:36:41.384 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [INTEGER] - [10]\r\n2021-08-14 17:36:41.384 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [null]\r\n2021-08-14 17:36:41.385 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [VARCHAR] - [OPEN]\r\n2021-08-14 17:36:41.385 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [7] as [VARCHAR] - [13]\r\n2021-08-14 17:36:41.399 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        opportunit0_.id as id1_1_0_,\r\n        opportunit0_.account_id as account_4_4_0_,\r\n        opportunit0_.contact_id as contact_5_4_0_,\r\n        opportunit0_.product as product1_4_0_,\r\n        opportunit0_.quantity as quantity2_4_0_,\r\n        opportunit0_.sales_rep_id as sales_re6_4_0_,\r\n        opportunit0_.status as status3_4_0_ \r\n    from\r\n        opportunityRequestDTO opportunit0_\r\n    where\r\n        opportunit0_.id=?\r\n2021-08-14 17:36:41.400 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [14]\r\n2021-08-14 17:36:41.401 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        contact0_.id as id1_1_0_,\r\n        contact0_.company_name as company_1_3_0_,\r\n        contact0_.email as email2_3_0_,\r\n        contact0_.contact_name as contact_3_3_0_,\r\n        contact0_.phone_number as phone_nu4_3_0_,\r\n        contact0_.sales_rep_id as sales_re5_3_0_,\r\n        contact0_.account_id as account_1_2_0_,\r\n        salesrep1_.id as id1_5_1_,\r\n        salesrep1_.sales_rep_name as sales_re2_5_1_,\r\n        account2_.id as id1_1_2_,\r\n        account2_.city as city1_0_2_,\r\n        account2_.country as country2_0_2_,\r\n        account2_.employee_count as employee3_0_2_,\r\n        account2_.industry as industry4_0_2_ \r\n    from\r\n        contactRequestDTO contact0_\r\n    left outer join\r\n        sales_rep salesrep1_ \r\n            on contact0_.sales_rep_id=salesrep1_.id \r\n    left outer join\r\n        account account2_ \r\n            on contact0_.account_id=account2_.id \r\n    where\r\n        contact0_.id=?\r\n2021-08-14 17:36:41.402 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [8]\r\n2021-08-14 17:36:41.405 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        opportunityRequestDTO\r\n        (account_id, contact_id, product, quantity, sales_rep_id, status, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.406 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.406 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [8]\r\n2021-08-14 17:36:41.407 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [VARCHAR] - [BOX]\r\n2021-08-14 17:36:41.407 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [INTEGER] - [1150]\r\n2021-08-14 17:36:41.409 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [null]\r\n2021-08-14 17:36:41.410 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [VARCHAR] - [OPEN]\r\n2021-08-14 17:36:41.411 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [7] as [VARCHAR] - [14]\r\n2021-08-14 17:36:41.417 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        opportunit0_.id as id1_1_0_,\r\n        opportunit0_.account_id as account_4_4_0_,\r\n        opportunit0_.contact_id as contact_5_4_0_,\r\n        opportunit0_.product as product1_4_0_,\r\n        opportunit0_.quantity as quantity2_4_0_,\r\n        opportunit0_.sales_rep_id as sales_re6_4_0_,\r\n        opportunit0_.status as status3_4_0_ \r\n    from\r\n        opportunityRequestDTO opportunit0_\r\n    where\r\n        opportunit0_.id=?\r\n2021-08-14 17:36:41.418 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [15]\r\n2021-08-14 17:36:41.422 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        contact0_.id as id1_1_0_,\r\n        contact0_.company_name as company_1_3_0_,\r\n        contact0_.email as email2_3_0_,\r\n        contact0_.contact_name as contact_3_3_0_,\r\n        contact0_.phone_number as phone_nu4_3_0_,\r\n        contact0_.sales_rep_id as sales_re5_3_0_,\r\n        contact0_.account_id as account_1_2_0_,\r\n        salesrep1_.id as id1_5_1_,\r\n        salesrep1_.sales_rep_name as sales_re2_5_1_,\r\n        account2_.id as id1_1_2_,\r\n        account2_.city as city1_0_2_,\r\n        account2_.country as country2_0_2_,\r\n        account2_.employee_count as employee3_0_2_,\r\n        account2_.industry as industry4_0_2_ \r\n    from\r\n        contactRequestDTO contact0_\r\n    left outer join\r\n        sales_rep salesrep1_ \r\n            on contact0_.sales_rep_id=salesrep1_.id \r\n    left outer join\r\n        account account2_ \r\n            on contact0_.account_id=account2_.id \r\n    where\r\n        contact0_.id=?\r\n2021-08-14 17:36:41.423 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [9]\r\n2021-08-14 17:36:41.427 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        opportunityRequestDTO\r\n        (account_id, contact_id, product, quantity, sales_rep_id, status, id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.428 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.429 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [9]\r\n2021-08-14 17:36:41.429 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [VARCHAR] - [HYBRID]\r\n2021-08-14 17:36:41.429 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [INTEGER] - [1]\r\n2021-08-14 17:36:41.430 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [null]\r\n2021-08-14 17:36:41.430 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [VARCHAR] - [OPEN]\r\n2021-08-14 17:36:41.431 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [7] as [VARCHAR] - [15]\r\n2021-08-14 17:36:41.445 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        account0_.id as id1_1_1_,\r\n        account0_.city as city1_0_1_,\r\n        account0_.country as country2_0_1_,\r\n        account0_.employee_count as employee3_0_1_,\r\n        account0_.industry as industry4_0_1_,\r\n        opportunit1_.account_id as account_4_4_3_,\r\n        opportunit1_.id as id1_4_3_,\r\n        opportunit1_.id as id1_1_0_,\r\n        opportunit1_.account_id as account_4_4_0_,\r\n        opportunit1_.contact_id as contact_5_4_0_,\r\n        opportunit1_.product as product1_4_0_,\r\n        opportunit1_.quantity as quantity2_4_0_,\r\n        opportunit1_.sales_rep_id as sales_re6_4_0_,\r\n        opportunit1_.status as status3_4_0_ \r\n    from\r\n        account account0_ \r\n    left outer join\r\n        opportunityRequestDTO opportunit1_\r\n            on account0_.id=opportunit1_.account_id \r\n    where\r\n        account0_.id=?\r\n2021-08-14 17:36:41.447 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [22]\r\n2021-08-14 17:36:41.461 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        opportunit0_.id as id1_1_0_,\r\n        opportunit0_.account_id as account_4_4_0_,\r\n        opportunit0_.contact_id as contact_5_4_0_,\r\n        opportunit0_.product as product1_4_0_,\r\n        opportunit0_.quantity as quantity2_4_0_,\r\n        opportunit0_.sales_rep_id as sales_re6_4_0_,\r\n        opportunit0_.status as status3_4_0_ \r\n    from\r\n        opportunityRequestDTO opportunit0_\r\n    where\r\n        opportunit0_.id=?\r\n2021-08-14 17:36:41.466 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [13]\r\n2021-08-14 17:36:41.469 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        contact0_.id as id1_1_0_,\r\n        contact0_.company_name as company_1_3_0_,\r\n        contact0_.email as email2_3_0_,\r\n        contact0_.contact_name as contact_3_3_0_,\r\n        contact0_.phone_number as phone_nu4_3_0_,\r\n        contact0_.sales_rep_id as sales_re5_3_0_,\r\n        contact0_.account_id as account_1_2_0_ \r\n    from\r\n        contactRequestDTO contact0_\r\n    where\r\n        contact0_.id=?\r\n2021-08-14 17:36:41.470 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [7]\r\n2021-08-14 17:36:41.475 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        account\r\n        (city, country, employee_count, industry, id) \r\n    values\r\n        (?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.475 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.475 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.476 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [INTEGER] - [0]\r\n2021-08-14 17:36:41.476 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.476 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [VARCHAR] - [22]\r\n2021-08-14 17:36:41.520 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        account0_.id as id1_1_1_,\r\n        account0_.city as city1_0_1_,\r\n        account0_.country as country2_0_1_,\r\n        account0_.employee_count as employee3_0_1_,\r\n        account0_.industry as industry4_0_1_,\r\n        opportunit1_.account_id as account_4_4_3_,\r\n        opportunit1_.id as id1_4_3_,\r\n        opportunit1_.id as id1_1_0_,\r\n        opportunit1_.account_id as account_4_4_0_,\r\n        opportunit1_.contact_id as contact_5_4_0_,\r\n        opportunit1_.product as product1_4_0_,\r\n        opportunit1_.quantity as quantity2_4_0_,\r\n        opportunit1_.sales_rep_id as sales_re6_4_0_,\r\n        opportunit1_.status as status3_4_0_ \r\n    from\r\n        account account0_ \r\n    left outer join\r\n        opportunityRequestDTO opportunit1_\r\n            on account0_.id=opportunit1_.account_id \r\n    where\r\n        account0_.id=?\r\n2021-08-14 17:36:41.521 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [23]\r\n2021-08-14 17:36:41.523 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        opportunit0_.id as id1_1_0_,\r\n        opportunit0_.account_id as account_4_4_0_,\r\n        opportunit0_.contact_id as contact_5_4_0_,\r\n        opportunit0_.product as product1_4_0_,\r\n        opportunit0_.quantity as quantity2_4_0_,\r\n        opportunit0_.sales_rep_id as sales_re6_4_0_,\r\n        opportunit0_.status as status3_4_0_ \r\n    from\r\n        opportunityRequestDTO opportunit0_\r\n    where\r\n        opportunit0_.id=?\r\n2021-08-14 17:36:41.523 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [14]\r\n2021-08-14 17:36:41.525 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        contact0_.id as id1_1_0_,\r\n        contact0_.company_name as company_1_3_0_,\r\n        contact0_.email as email2_3_0_,\r\n        contact0_.contact_name as contact_3_3_0_,\r\n        contact0_.phone_number as phone_nu4_3_0_,\r\n        contact0_.sales_rep_id as sales_re5_3_0_,\r\n        contact0_.account_id as account_1_2_0_ \r\n    from\r\n        contactRequestDTO contact0_\r\n    where\r\n        contact0_.id=?\r\n2021-08-14 17:36:41.526 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [8]\r\n2021-08-14 17:36:41.529 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        account\r\n        (city, country, employee_count, industry, id) \r\n    values\r\n        (?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.530 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.530 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.530 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [INTEGER] - [0]\r\n2021-08-14 17:36:41.530 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.530 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [VARCHAR] - [23]\r\n2021-08-14 17:36:41.536 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        account0_.id as id1_1_1_,\r\n        account0_.city as city1_0_1_,\r\n        account0_.country as country2_0_1_,\r\n        account0_.employee_count as employee3_0_1_,\r\n        account0_.industry as industry4_0_1_,\r\n        opportunit1_.account_id as account_4_4_3_,\r\n        opportunit1_.id as id1_4_3_,\r\n        opportunit1_.id as id1_1_0_,\r\n        opportunit1_.account_id as account_4_4_0_,\r\n        opportunit1_.contact_id as contact_5_4_0_,\r\n        opportunit1_.product as product1_4_0_,\r\n        opportunit1_.quantity as quantity2_4_0_,\r\n        opportunit1_.sales_rep_id as sales_re6_4_0_,\r\n        opportunit1_.status as status3_4_0_ \r\n    from\r\n        account account0_ \r\n    left outer join\r\n        opportunityRequestDTO opportunit1_\r\n            on account0_.id=opportunit1_.account_id \r\n    where\r\n        account0_.id=?\r\n2021-08-14 17:36:41.536 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [24]\r\n2021-08-14 17:36:41.539 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        opportunit0_.id as id1_1_0_,\r\n        opportunit0_.account_id as account_4_4_0_,\r\n        opportunit0_.contact_id as contact_5_4_0_,\r\n        opportunit0_.product as product1_4_0_,\r\n        opportunit0_.quantity as quantity2_4_0_,\r\n        opportunit0_.sales_rep_id as sales_re6_4_0_,\r\n        opportunit0_.status as status3_4_0_ \r\n    from\r\n        opportunityRequestDTO opportunit0_\r\n    where\r\n        opportunit0_.id=?\r\n2021-08-14 17:36:41.539 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [15]\r\n2021-08-14 17:36:41.541 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        contact0_.id as id1_1_0_,\r\n        contact0_.company_name as company_1_3_0_,\r\n        contact0_.email as email2_3_0_,\r\n        contact0_.contact_name as contact_3_3_0_,\r\n        contact0_.phone_number as phone_nu4_3_0_,\r\n        contact0_.sales_rep_id as sales_re5_3_0_,\r\n        contact0_.account_id as account_1_2_0_ \r\n    from\r\n        contactRequestDTO contact0_\r\n    where\r\n        contact0_.id=?\r\n2021-08-14 17:36:41.542 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [9]\r\n2021-08-14 17:36:41.544 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    insert \r\n    into\r\n        account\r\n        (city, country, employee_count, industry, id) \r\n    values\r\n        (?, ?, ?, ?, ?)\r\n2021-08-14 17:36:41.545 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.546 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.546 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [INTEGER] - [0]\r\n2021-08-14 17:36:41.546 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [VARCHAR] - [null]\r\n2021-08-14 17:36:41.547 TRACE 3704 --- [main] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [VARCHAR] - [24]\r\n2021-08-14 17:37:01.346 DEBUG 3704 --- [main] org.hibernate.SQL                        : \r\n    select\r\n        salesrep1_.sales_rep_name as col_0_0_,\r\n        count(lead0_.id) as col_1_0_ \r\n    from\r\n        ( select\r\n            id,\r\n            company_name,\r\n            email,\r\n            contact_name,\r\n            phone_number,\r\n            sales_rep_id,\r\n            null as account_id,\r\n            2 as clazz_ \r\n        from\r\n            leads \r\n        union\r\n        all select\r\n            id,\r\n            company_name,\r\n            email,\r\n            contact_name,\r\n            phone_number,\r\n            sales_rep_id,\r\n            account_id,\r\n            3 as clazz_ \r\n        from\r\n            contactRequestDTO\r\n    ) lead0_ \r\ninner join\r\n    sales_rep salesrep1_ \r\n        on lead0_.sales_rep_id=salesrep1_.id \r\ngroup by\r\n    salesrep1_.sales_rep_name \r\norder by\r\n    salesrep1_.sales_rep_name\r\n2021-08-14 17:38:52.227  INFO 3704 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'\r\n2021-08-14 17:38:52.234  INFO 3704 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...\r\n2021-08-14 17:38:52.253  INFO 3704 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.\r\n
===================================================================
diff --git a/Menu-service/hibernate_log_file_name.log b/Menu-service/hibernate_log_file_name.log
--- a/Menu-service/hibernate_log_file_name.log	
+++ b/Menu-service/hibernate_log_file_name.log	
@@ -2,11 +2,11 @@
 2021-08-14 17:36:33.712  INFO 3704 --- [main] nNameTruckingCompanyHomework3Application : No active profile set, falling back to default profiles: default
 2021-08-14 17:36:35.008  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
 2021-08-14 17:36:35.012  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
-2021-08-14 17:36:35.074  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.stolen_name_trucking_company_homework_3.repository.AccountRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
-2021-08-14 17:36:35.080  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.stolen_name_trucking_company_homework_3.repository.ContactRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
-2021-08-14 17:36:35.082  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.stolen_name_trucking_company_homework_3.repository.LeadRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
-2021-08-14 17:36:35.084  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.stolen_name_trucking_company_homework_3.repository.OpportunityRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
-2021-08-14 17:36:35.088  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.stolen_name_trucking_company_homework_3.repository.SalesRepRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
+2021-08-14 17:36:35.074  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.menuservice.repository.AccountRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
+2021-08-14 17:36:35.080  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.menuservice.repository.ContactRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
+2021-08-14 17:36:35.082  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.menuservice.repository.LeadRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
+2021-08-14 17:36:35.084  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.menuservice.repository.OpportunityRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
+2021-08-14 17:36:35.088  INFO 3704 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.ironhack.menuservice.repository.SalesRepRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
 2021-08-14 17:36:35.090  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 0 JDBC repository interfaces.
 2021-08-14 17:36:35.118  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
 2021-08-14 17:36:35.121  INFO 3704 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
diff --git a/Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/resources/application.properties b/Menu-service/src/test/java/com/ironhack/menuservice/dao/resources/application.properties
rename from Menu-service/src/test/java/com/ironhack/stolen_name_trucking_company_homework_3/dao/resources/application.properties
rename to Menu-service/src/test/java/com/ironhack/menuservice/dao/resources/application.properties
